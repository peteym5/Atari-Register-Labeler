mads 1.9.3 build 49 (31 Jul 11)
Source: AMOKBOTS.asm
     1 = 0000			CartridgeXEX            = 00; Set to load as an XEX file
     2 = 0001			CartridgeStandard8K     = 01  ;Standard 08K Cartridge
     3 = 0002			CartridgeStandard16K    = 02  ;*** Standard 16K Cartridge ***
     4 = 0003			CartTypeOSS16K          = 03  ;OSS 16 KB Cartridge            $B000-$BFFF always Mapped. D5x0/1 for A, D5x3/7 for B, D5x4/5 for C. D5x2/6, x6 Disables. 
     5 = 0004			CartType520032K         = 04  ;32K 5200 Cartridge
     6 = 0005			CartTypeDB32K           = 05  ;32K DB Cartridge
     7 = 0006			CartType520016K2        = 06  ;16K 5200 Cartridge 2 Chip
     8 = 0007			CartType520040K         = 07  ;Bounty Bob 5200 40K 
     9 = 0008			CartTypeWilliams64      = 08  ;*** Williams 64K Cartridge ***  8 banks mapped to $A000-$BFFF. $D500 to $D507
    10 = 0009			CartTypeExpess64        = 09  ;Express 64 KB cartridge         8 banks mapped to $A000-$BFFF. $D577 to $D570 
    11 = 000A			CartTypeDiamond64       = 10  ;Diamond 64 KB cartridge         8 banks mapped to $A000-$BFFF. $D5D7 to $D5D0
    12 = 000B			CartTypeSpartaDos64     = 11  ;SpartaDos X 64 KB cartridge     8 banks mapped to $A000-$BFFF. $D5E7 to $D5E0
    13 = 000C			CartTypeXEGS032         = 12  ;*** XEGS 32 KB cartridge ***    $A000-$BFFF Constant; 4 @ $8000-$9FFF 
    14 = 000D			CartTypeXEGS064         = 13  ;*** XEGS 64 KB cartridge ***    $A000-$BFFF Constant; 8 @ $8000-$9FFF
    15 = 000E			CartTypeXEGS128         = 14  ;*** XEGS 128 KB cartridge ***   $A000-$BFFF Constant; 16 @ $8000-$9FFF
    16 = 000F			CartTypeOSSM16K         = 15	;OSS 'M091' 16 KB cartridge
    17 = 0010			CartType520016K         = 16  ;16K 5200 Cartridge 1 Chip
    18 = 0011			CartTypeAtrax128K       = 17  ;128K	Atrax 128 KB cartridge     16 banks mapped to $A000-$BFFF. 4 lowest bits from $D5xx
    19 = 0012			CartTypeBOB40K          = 18  ;40K Bounty Bob Strikes Back
    20 = 0013			CartType52008K          = 19	;Standard 8 KB 5200 cartridge
    21 = 0014			CartType52004K          = 20  ;Standard 4 KB 5200 cartridge
    22 = 0015			CartType800Right8K      = 21  ;8 KB Right cartridge
    23 = 0016			CartTypeWilliams32      = 22  ;*** Williams 32K Cartridge ***  4 banks mapped to $A000-$BFFF.
    24 = 0017			CartTypeXEGS256         = 23  ;*** XEGS 256 KB cartridge ***   $A000-$BFFF Constant; 32 @ $8000-$9FFF 
    25 = 0018			CartTypeXEGS512         = 24  ;*** XEGS 512 KB cartridge ***   $A000-$BFFF Constant; 64 @ $8000-$9FFF
    26 = 0019			CartTypeXEGS1024        = 25  ;*** XEGS 1024 KB cartridge ***  $A000-$BFFF Constant; 128 @ $8000-$9FFF
    27 = 001A			CartridgeMegaCart16K    = 26  ;Switchable 16K Mega Cartridge   
    28 = 001B			CartridgeMegaCart32K    = 27  ;Switchable 32K Mega Cartridge   $8000-$BFFF  2  Banks  D5xx Selects
    29 = 001C			CartridgeMegaCart64K    = 28  ;Switchable 64K Mega Cartridge   $8000-$BFFF  4  Banks  D5xx Selects
    30 = 001D			CartridgeMegaCart128K   = 29  ;Switchable 128K Mega Cartridge  $8000-$BFFF  8  Banks  D5xx Selects
    31 = 001E			CartridgeMegaCart256K   = 30  ;Switchable 256K Mega Cartridge  $8000-$BFFF  16 Banks  D5xx Selects
    32 = 001F			CartridgeMegaCart512K   = 31  ;Switchable 512K Mega Cartridge  $8000-$BFFF  32 Banks  D5xx Selects
    33 = 0020			CartridgeMegaCart1024K  = 32  ;Switchable 1024K Mega Cartridge $8000-$BFFF  64 Banks  D5xx Selects
    34 = 0021			CartTypeSXEGS032        = 33  ;Switchable XEGS 32 KB cartridge   $A000-$BFFF Constant; 4 @ $8000-$9FFF
    35 = 0022			CartTypeSXEGS064        = 34  ;Switchable XEGS 64 KB cartridge   $A000-$BFFF Constant; 8 @ $8000-$9FFF
    36 = 0023			CartTypeSXEGS128        = 35  ;Switchable XEGS 128 KB cartridge  $A000-$BFFF Constant; 16 @ $8000-$9FFF
    37 = 0024			CartTypeSXEGS256        = 36  ;Switchable XEGS 256 KB cartridge  $A000-$BFFF Constant; 32 @ $8000-$9FFF 
    38 = 0025			CartTypeSXEGS512        = 37  ;Switchable XEGS 512 KB cartridge  $A000-$BFFF Constant; 64 @ $8000-$9FFF
    39 = 0026			CartTypeSXEGS1024       = 38  ;Switchable XEGS 1024 KB cartridge $A000-$BFFF Constant; 128 @ $8000-$9FFF
    40 = 0027			CartridgePhoenix8K      = 39  ;Phoenix 08K Cartridge
    41 = 0028			CartridgeBlizzard16K    = 40  ;Blizzard 16K Cartridge
    42 = 0029			CartTypeMax128          = 41  ;Atarimax 128 KB flash cartridg ;  16 banks mapped to $A000-$BFFF.
    43 = 002A			CartTypeMax1024         = 42  ;Atarimax 1024 KB flash cartridg;  128 banks mapped to $A000-$BFFF.
    44 = 0080			CartTypeSIC128          = 128 ;SIC! Flash Cartridge 128k      $8000-$BFFF  8  Banks  D500 to $D51F Selects. Bit 5(+32)=0 $8000-$9FFF disabled. Bit 6(+64)=0 $A000-$9BFF disabled. Bit 7 (+128)=8 Write Enable
    45 = 0082			CartTypeSIC256          = 130 ;SIC! Flash Cartridge 256k      $8000-$BFFF  16 Banks  D500 to $D51F Selects. Bit 5(+32)=0 $8000-$9FFF disabled. Bit 6(+64)=0 $A000-$9BFF disabled. Bit 7 (+128)=8 Write Enable
    46 = 0084			CartTypeSIC512          = 132 ;SIC! Flash Cartridge 512k      $8000-$BFFF  32 Banks  D500 to $D51F Selects. Bit 5(+32)=0 $8000-$9FFF disabled. Bit 6(+64)=0 $A000-$9BFF disabled. Bit 7 (+128)=8 Write Enable
    47 = 00C7			CartridgeXEXDEMO        = 199
    48
    49 = 0002			CartridgeType = CartridgeStandard16K
    50 = 0000			EpromBinaryHeader = 0
    51 = 0014			SPRITELENGTH = 20
    52 = 0000			SPRITEEXT = 0
    53 = 0001			USE_PLEX_DEF = 1
    54
    55 				;Possible Challenger Enhancements...
    56 				; Blinking Forcefields.
    57 				; Moving Walls
    58 				; Rooms that lock in until all is killed.
    59 				; Final Level Bosses
    60 				;
    61 				; Start Game Options.
    62 				;   Easy with less robots / Slower
    63 				;   Normal as planned
    64 				;   Extended with multiple level bosses..
    65 				;   .. Keys, Hidden Doors, Cypher Locks, Codes 
    66 				 
    67
    68
    69 				;To Do
    70 				;Bots/Enemy Fire                      in progress
    71 				;Boss Robot in limited location       Limit to 1 
    72 				;  .. May have multiple Bosses for difficulties/levels
    73 				;1 or 2 Extra Robot                   added 1 
    74 				;Sound Effects
    75 				;Multi-Hit Robots
    76 				;Difficulty Setting
    77 				;NTSC/PAL Common Speed                Completed - NTSC delays 1/8th per second 
    78 				;Scoring
    79 				;Lost of Life, Game Over
    80 				;Level Complete, Advancing next level
    81
    82
    83
    84 				  IFT EpromBinaryHeader = 1
    85 				      OPT H-
    86 				      ORG $8000
    87 				      .dw $FFFF
    88 				      .dw $0000
    89 				      .dw $7FFF
    90 				  EIF        
    91 				 
    92 = 3800			PML0 =                                  $3800
    93 = 3816			PML1 =                                  $3816
    94 = 3827			SPRITE_MULTI_PLEX =                     $3827
    95 = 3836			FIRSTSPRITE =                           $3836
    96 = 383C			DRAWSPRITELOOP =                        $383C
    97 = 384C			ZKE =                                   $384C
    98 = 3850			CKUSP1 =                                $3850
    99 = 3853			CKUSP2 =                                $3853
   100 = 3856			PML2 =                                  $3856
   101 = 386C			SKIPSPRITE =                            $386C
   102 = 3877			CKUSP3 =                                $3877
   103 = 387A			PML3 =                                  $387A
   104 = 388D			DOQIKSPR =                              $388D
   105 = 3893			NEXTSPRITE =                            $3893
   106 = 3897			CHECKLAST =                             $3897
   107 = 3898			VLASTSPRITENO =                         $3898
   108 = 389B			DOPMXFER =                              $389B
   109 = 389D			DRAWPLAYERLOOP =                        $389D
   110 = 389E			LOADPLYRADDRLO =                        $389E
   111 = 389F			LOADPLYRADDRHI =                        $389F
   112 = 38A1			STORPLYR0ADDRLO =                       $38A1
   113 = 38A2			STORPLYR0ADDRHI =                       $38A2
   114 = 3900			PLAYERDRAWDONE =                        $3900
   115 = 3902			POSTADDRDELETELOOP =                    $3902
   116 = 394A			NO_VBI_OVERLOAD =                       $394A
   117 = 394A			NOCLHI =                                $394A
   118 = 394B			VBIADR =                                $394B
   119 = 394D			CLEAR_PLEX_SPRITES =                    $394D
   120 = 394F			NXTDEL =                                $394F
   121 = 3951			DLOOP0 =                                $3951
   122 = 3952			ADDRPLAY0DEL =                          $3952
   123 = 3953			ADDRPAGE0DEL =                          $3953
   124 = 3994			CLEAR_SPRITE_MEMORY =                   $3994
   125 = 3998			ZERO_PM_REGISTER_LOOP =                 $3998
   126 = 39A6			CLEAR_SPRITE_LOOP =                     $39A6
   127 = 39BA			CLEAR_SPRITE_DATA_LOOP =                $39BA
   128 = 39D0			CLEAR_SCREEN =                          $39D0
   129 = 39D3			CLEAR_SCREEN_LOOP =                     $39D3
   130 = 39E9			DRAWHOZWALL =                           $39E9
   131 = 39FC			HOZWALLLOOP =                           $39FC
   132 = 39FE			HOZWALLADDR =                           $39FE
   133 = 3A03			DRAWVRTWALL =                           $3A03
   134 = 3A17			VRTWALLLOOP =                           $3A17
   135 = 3A1A			VRTWALLADDR =                           $3A1A
   136 = 3A24			NOVWH =                                 $3A24
   137 = 3A2B			DRAWBLOCK =                             $3A2B
   138 = 3A3C			NEWBLOCKROW =                           $3A3C
   139 = 3A3F			BLOCKCHAR =                             $3A3F
   140 = 3A40			BLOCKLOOP =                             $3A40
   141 = 3A41			BLOCKADDR =                             $3A41
   142 = 3A54			NOBLOKHI =                              $3A54
   143 = 3A59			REMOVE_LOCKED_DOOR_HOZ =                $3A59
   144 = 3A70			REMOVEHOZKEYWALL_LOOP =                 $3A70
   145 = 3A75			HOZ_CHECK_DOOR_CHAR =                   $3A75
   146 = 3A7C			NOREMOVEHOZKEYCHAR =                    $3A7C
   147 = 3A80			REMOVE_LOCKED_DOOR_VRT =                $3A80
   148 = 3A92			REMOVEVRTKEYWALL_LOOP =                 $3A92
   149 = 3A97			VRT_CHECK_DOOR_CHAR =                   $3A97
   150 = 3A9E			NOREMOVEVRTKEYCHAR =                    $3A9E
   151 = 3AB1			DISPLAY_INFO =                          $3AB1
   152 = 3AB7			INFO_TEXT_LOOP =                        $3AB7
   153 = 3AC4			DISLOOP =                               $3AC4
   154 = 3AD4			NOUDIGIT =                              $3AD4
   155 = 3ADB			SCORDIGITONSCREEN =                     $3ADB
   156 = 3ADC			SDIGITDISP =                            $3ADC
   157 = 3ADE			BYPAS1ST =                              $3ADE
   158 = 3B0F			ZEROXTRALIVES =                         $3B0F
   159 = 3B14			SCOREBOARD_TEXT =                       $3B14
   160 = 3B43			SPRITE_TABZONE =                        $3B43
   161 = 3C43			PLAYER_ADDR_LIST =                      $3C43
   162 = 3C57			DELETE_ADDR_LIST =                      $3C57
   163 = 3C6B			NEXT_SPRITE_LIST =                      $3C6B
   164 = 3C7B			DSVANDMASK =                            $3C7B
   165
   166
   167
   168 = 3000			font1	equ $3000
   169 = 3400			font2	equ $3400
   170 = 7800			coltab  equ $7800
   171 = 0008			ROOMSPERROW = 8
   172 = 000C			MAXROBOTS = 12
   173
   174 = 00BF			linewsk       = $BF
   175 = 0013			FRAMECLOCKHI 	= $13
   176 = 0014			FRAMECLOCKLO 	= $14
   177 = 0015			VBIDONE		    = $15
   178 = 0016			RUNFRAME      = $16
   179 = 0040			SCORE         = $40
   180 = 0048			SCOREH        = $48
   181 = 0080			CHARPX                = $80
   182 = 0081			CHARPY                = $81
   183 = 0082			PRIORX                = $82
   184 = 0083			PRIORY                = $83
   185 = 0084			CHARACTER_STATUS      = $84
   186 = 0085			PROJECTILE_PX	        = $85
   187 = 0086			PROJECTILE_PY	        = $86
   188 = 0087			PROJECTILE_DX         = $87
   189 = 0087			DX                    = $87
   190 = 0088			PROJECTILE_DY         = $88
   191 = 0088			DY                    = $88
   192 = 0089			PROJECTILE_STATUS     = $89
   193 = 008A			PROJECTILE_SPRITE     = $8A
   194 = 008B			BOT_PRIOR_X           = $8B
   195 = 008C			BOT_PRIOR_Y           = $8C
   196 = 008D			BOT_LAST              = $8D
   197 = 008E			BOT_SKIP              = $8E
   198 = 008F			BOT_FRAME             = $8F
   199 = 0090			BOT_BOLT_PX           = $90
   200 = 0092			BOT_BOLT_PY           = $92 
   201 = 0094			BOT_BOLT_DX           = $94
   202 = 0096			BOT_BOLT_DY           = $96
   203 = 0098			BOT_BOLT_IM           = $98
   204
   205
   206 				        
   207 = 00B0			SND_LENGTH_LO         = $B0
   208 = 00B1			SND_LENGTH_HI         = $B1
   209 = 00B8			SND_CHANNEL_IN_USE    = $B8
   210 = 00BC			NX_SND_CHNL           = $BC
   211
   212
   213
   214
   215 = 00C0			M0		        = $C0
   216 = 00C1			M1		        = $C1
   217 = 00C2			M2		        = $C2
   218 = 00C3			M3		        = $C3
   219 = 00C4			M4		        = $C4
   220 = 00C5			M5		        = $C5
   221 = 00C6			M6		        = $C6
   222 = 00C7			M7		        = $C7
   223 = 00C8			M8		        = $C8
   224 = 00C9			M9		        = $C9
   225 = 00CA			NDX0		      = $CA
   226 = 00CB			NDX1		      = $CB
   227 = 00CC			NDX2          = $CC
   228 = 00CD			NDX3          = $CD
   229 = 00CE			MX		        = $CE
   230 = 00CF			MY		        = $CF
   231 = 00D0			TITLE_PHASE     = $D0
   232 = 00D1			TITLE_TIME      = $D1
   233 = 00D2			PHASE_HOLD      = $D2
   234 = 00D0			ROOMNO          = $D0
   235 = 00D2			ROOMNDX         = $D2
   236 = 00D3			PLEVEL          = $D3
   237 = 00D4			ZONEFN          = $D4
   238 = 00D5			LINESHIFT       = $D5
   239 = 00D6			CHARSHIFT       = $D6
   240 = 00D7			FFIELD_COUNT    = $D7
   241 = 00D8			ZONDX           = $D8
   242 = 00DA			PRESDELAY       = $DA
   243 = 00DB			PRESSING_CONSOL = $DB
   244 = 00DC			CURRENTSPRITE   = $DC
   245 = 00DD			PLIVES          = $DD
   246 = 00DF			OPTGAME         = $DF
   247
   248 = 00FC			VBIXSAV 	    = $FC
   249 = 00FD			VBIYSAV 	    = $FD
   250 = 00FE			DLIXSAV 	    = $FE
   251 = 00FF			DLIYSAV 	    = $FF
   252
   253
   254 = 0400			DISPLIST 	          = $0400
   255 = 0440			SCRTXT              = $0440
   256 = 0500			SCREEN		          = $0500
   257 = 1000			PMBANK              = $1000
   258 = 1810			VARBANK             = $1810
   259 = 1870			BOTTYPE             = $1870
   260 = 1880			BOTHP               = $1880
   261 = 1890			BOTPX               = $1890
   262 = 18A0			BOTPY               = $18A0
   263 = 18B0			BOTDX               = $18B0
   264 = 18C0			BOTDY               = $18C0
   265 = 18D0			BOTD0               = $18D0
   266 = 18E0			BOTD1               = $18E0
   267 = 18F0			BOTD2               = $18F0
   268
   269 = 1900			ROOMDATA            = $1900
   270 = 1900			ROOMDOORSET         = ROOMDATA + $0000
   271 = 1940			ROOMSTATUS          = ROOMDATA + $0040
   272 = 1980			ROOMBOTTYP0         = ROOMDATA + $0080
   273 = 19C0			ROOMBOTTYP1         = ROOMDATA + $00C0
   274 = 1A00			ROOMBOTTYP2         = ROOMDATA + $0100
   275 = 1A40			ROOMBOTTYP3         = ROOMDATA + $0140
   276 = 1A80			ROOMBOTTYP4         = ROOMDATA + $0180
   277 = 1AC0			ROOMBOTTYP5         = ROOMDATA + $01C0
   278 = 1B00			ROOMBOTTYP6         = ROOMDATA + $0200 
   279 = 1B40			ROOMBOTTYP7         = ROOMDATA + $0240
   280 = 1B80			ROOMBOTTYP8         = ROOMDATA + $0280
   281 = 1BC0			ROOMBOTTYP9         = ROOMDATA + $02C0
   282 = 1C00			ROOMBOTTYPA         = ROOMDATA + $0300
   283 = 1C40			ROOMBOTTYPB         = ROOMDATA + $0340
   284 = 1C80			ROOMBOTTYPC         = ROOMDATA + $0380
   285 = 1CC0			ROOMBOTLOC0         = ROOMDATA + $03C0
   286 = 1D00			ROOMBOTLOC1         = ROOMDATA + $0400
   287 = 1D40			ROOMBOTLOC2         = ROOMDATA + $0440
   288 = 1D80			ROOMBOTLOC3         = ROOMDATA + $0480
   289 = 1DC0			ROOMBOTLOC4         = ROOMDATA + $04C0
   290 = 1E00			ROOMBOTLOC5         = ROOMDATA + $0500
   291 = 1E40			ROOMBOTLOC6         = ROOMDATA + $0540
   292 = 1E80			ROOMBOTLOC7         = ROOMDATA + $0580
   293 = 1EC0			ROOMBOTLOC8         = ROOMDATA + $05C0
   294 = 1F00			ROOMBOTLOC9         = ROOMDATA + $0600
   295 = 1F40			ROOMBOTLOCA         = ROOMDATA + $0640
   296 = 1F80			ROOMBOTLOCB         = ROOMDATA + $0680
   297 = 1FC0			ROOMBOTLOCC         = ROOMDATA + $06C0
   298
   299 = 1A00			BUFFER              = ROOMDATA + $0100
   300 				 
   301
   302
   303 				  
   304
   305
   306 = 1000			SCREEN_LINE_ADDR_LOW	= PMBANK+$0000
   307 = 1020			SCREEN_LINE_ADDR_HIGH	= PMBANK+$0020
   308
   309 = 1040			SPRITENUM	          = PMBANK+$0040  ;Have 28 DLIs + 20 Max Sprites
   310 = 1054			SETSPCOLOR          = PMBANK+$0054
   311 = 1068			SPRITENHOZ          = PMBANK+$0068
   312 = 107C			SPHOZNEXT           = PMBANK+$007C
   313 = 1090			SPRITENVRT          = PMBANK+$0090
   314 = 10A4			SPRITE0COLOR        = PMBANK+$00A4
   315 = 10B8			SETSP0COLOR         = PMBANK+$00B8
   316 = 10CC			SPZONT              = PMBANK+$00CC
   317 = 10E0			SPZONB              = PMBANK+$00E0
   318 = 10F4			SPRITEUSE	          = PMBANK+$00F4
   319 = 1110			SPSRC0              = PMBANK+$0110
   320 = 112C			SPSRC1              = PMBANK+$012C
   321 = 1148			SPSRC2              = PMBANK+$0148
   322 = 1164			SPSRC3              = PMBANK+$0164
   323 = 1180			SPSRC4              = PMBANK+$0180
   324
   325
   326 = 1300			MIBANK              = PMBANK+$0300
   327 = 1400			PMBNK0	            = PMBANK+$0400
   328 = 1500			PMBNK1	            = PMBANK+$0500
   329 = 1600			PMBNK2	            = PMBANK+$0600
   330 = 1700			PMBNK3	            = PMBANK+$0700     
   331
   332 = 1830			SOUND_COMMANDER_VARIABLE_AREA = VARBANK + $0020
   333 = 1830			SND_ADDR_LO     = SOUND_COMMANDER_VARIABLE_AREA + $0000
   334 = 1831			SND_ADDR_HI     = SOUND_COMMANDER_VARIABLE_AREA + $0001
   335 = 1838			SND_DELAY_TIME  = SOUND_COMMANDER_VARIABLE_AREA + $0008
   336 = 1839			SND_DELAY_RATE  = SOUND_COMMANDER_VARIABLE_AREA + $0009
   337 = 1830			EXITFLAG        = VARBANK + $0020
   338 = 1831			PLACEOPTION     = VARBANK + $0021
   339 = 1832			LAST_CONSOLE    = VARBANK + $0022
   340 = 1833			Num_Bosses      = VARBANK + $0023
   341
   342 				  ORG $8000
   343 				  OPT F+H-  
   344 				  ICL "atari equates.asm"
Source: atari equates.asm
     1 				;Atari Hardware Registers
     2 				;File version 1.03
     3 				;2005-01-02 17:47:15
     4 				;Register names based on PDF specifications
     5 				;---------------------------------------
     6 				;HARDWARE
     7 				;CPU vectors
     8 = FFFA			NMIV	= $FFFA 	;NMI vector
     9 = FFFC			RESETV	= $FFFC 	;RESET vector
    10 = FFFE			IRQV	= $FFFE 	;IRQ vector
    11
    12 				;GTIA Write
    13 = D000			GTIA	= $D000
    14 = D000			HPOSP0	= $D000
    15 = D001			HPOSP1	= $D001
    16 = D002			HPOSP2	= $D002
    17 = D003			HPOSP3	= $D003
    18 = D004			HPOSM0	= $D004
    19 = D005			HPOSM1	= $D005
    20 = D006			HPOSM2	= $D006
    21 = D007			HPOSM3	= $D007
    22 = D008			SIZEP0	= $D008
    23 = D009			SIZEP1	= $D009
    24 = D00A			SIZEP2	= $D00A
    25 = D00B			SIZEP3	= $D00B
    26 = D00C			SIZEM	= $D00C
    27 = D00D			GRAFP0	= $D00D
    28 = D00E			GRAFP1	= $D00E
    29 = D00F			GRAFP2	= $D00F
    30 = D010			GRAFP3	= $D010
    31 = D011			GRAFM	= $D011
    32 = D012			COLPM0	= $D012
    33 = D013			COLPM1	= $D013
    34 = D014			COLPM2	= $D014
    35 = D015			COLPM3	= $D015
    36 = D016			COLPF0	= $D016
    37 = D017			COLPF1	= $D017
    38 = D018			COLPF2	= $D018
    39 = D019			COLPF3	= $D019
    40 = D01A			COLBAK	= $D01A
    41 = D01A			COLBK	= $D01A 	;alias of COLBAK
    42 = D01B			PRIOR	= $D01B
    43 = D01C			VDELAY	= $D01C
    44 = D01D			GRACTL	= $D01D
    45 = D01E			HITCLR	= $D01E
    46 = D01F			CONSOL	= $D01F
    47
    48 				;GTIA Read
    49 = D000			M0PF	= $D000
    50 = D001			M1PF	= $D001
    51 = D002			M2PF	= $D002
    52 = D003			M3PF	= $D003
    53 = D004			P0PF	= $D004
    54 = D005			P1PF	= $D005
    55 = D006			P2PF	= $D006
    56 = D007			P3PF	= $D007
    57 = D008			M0PL	= $D008
    58 = D009			M1PL	= $D009
    59 = D00A			M2PL	= $D00A
    60 = D00B			M3PL	= $D00B
    61 = D00C			P0PL	= $D00C
    62 = D00D			P1PL	= $D00D
    63 = D00E			P2PL	= $D00E
    64 = D00F			P3PL	= $D00F
    65 = D010			TRIG0	= $D010
    66 = D011			TRIG1	= $D011
    67 = D012			TRIG2	= $D012
    68 = D013			TRIG3	= $D013
    69 = D014			PAL	= $D014
    70
    71 				;Pokey Write
    72 = D200			POKEY	= $D200
    73 = D200			AUDF1	= $D200
    74 = D202			AUDF2	= $D202
    75 = D204			AUDF3	= $D204
    76 = D206			AUDF4	= $D206
    77 = D201			AUDC1	= $D201
    78 = D203			AUDC2	= $D203
    79 = D205			AUDC3	= $D205
    80 = D207			AUDC4	= $D207
    81 = D208			AUDCTL	= $D208
    82 = D209			STIMER	= $D209
    83 = D20A			SKRES	= $D20A
    84 = D20B			POTGO	= $D20B
    85 = D20D			SEROUT	= $D20D
    86 = D20E			IRQEN	= $D20E
    87 = D20F			SKCTL	= $D20F
    88
    89 				;Pokey Read
    90 = D200			POT0	= $D200
    91 = D201			POT1	= $D201
    92 = D202			POT2	= $D202
    93 = D203			POT3	= $D203
    94 = D204			POT4	= $D204
    95 = D205			POT5	= $D205
    96 = D206			POT6	= $D206
    97 = D207			POT7	= $D207
    98 = D208			ALLPOT	= $D208
    99 = D208			POTST	= $D208
   100 = D209			KBCODE	= $D209
   101 = D20A			RANDOM	= $D20A
   102 = D20D			SERIN	= $D20D
   103 = D20E			IRQST	= $D20E
   104 = D20F			SKSTAT	= $D20F
   105
   106 				;PIA
   107 = D300			PIA	= $D300
   108 = D300			PORTA	= $D300
   109 = D301			PORTB	= $D301
   110 = D302			PACTL	= $D302
   111 = D303			PBCTL	= $D303
   112 				;ANTIC
   113 = D400			ANTIC	= $D400
   114 = D400			DMACTL	= $D400
   115 = D401			CHACTL	= $D401
   116 = D402			DLISTL	= $D402
   117 = D403			DLISTH	= $D403
   118 = D404			HSCROL	= $D404
   119 = D405			VSCROL	= $D405
   120 = D407			PMBASE	= $D407
   121 = D409			CHBASE	= $D409
   122 = D40A			WSYNC	= $D40A
   123 = D40B			VCOUNT	= $D40B
   124 = D40C			PENH	= $D40C
   125 = D40D			PENV	= $D40D
   126 = D40E			NMIEN	= $D40E
   127 = D40F			NMIRES	= $D40F
   128 = D40F			NMIST	= $D40F
   129
   130 				;ANTIC dlisplay list commands
   131 = 0000			DL_E1	= $00
   132 = 0010			DL_E2	= $10
   133 = 0020			DL_E3	= $20
   134 = 0030			DL_E4	= $30
   135 = 0040			DL_E5	= $40
   136 = 0050			DL_E6	= $50
   137 = 0060			DL_E7	= $60
   138 = 0070			DL_E8	= $70
   139 = 0001			DL_JUMP	= $01 	;jump to adress and create one empty line
   140 = 0041			DL_LOOP	= $41 	;jump to adress and wait for vsync
   141 = 0040			DL_ADRES	= $40 	;load memory counter
   142 = 0080			DL_DLI	= $80 	;dli interrupt
   143 = 0010			DL_HS	= $10 	;horizontal scroll
   144 = 0020			DL_VS	= $20 	;vertical scroll
   145 				;BASIC GR-codes:
   146 = 0002			DL_GR0	= $02 	;text hi-res mode 40 bytes/line
   147 = 0006			DL_GR1	= $06 	;4 color text mode 20 bytes/line, 1 line V
   148 = 0007			DL_GR2	= $07 	;4 color text mode 20 bytes/line, 2 line V
   149 = 0008			DL_GR3	= $08 	;4 color graphics mode 10 bytes/line, 8 line V
   150 = 0009			DL_GR4	= $09 	;1 color graphics mode 10 bytes/line, 4 line V
   151 = 000A			DL_GR5	= $0A 	;4 color graphics mode, 20 bytes/line, 4 line V
   152 = 000B			DL_GR6	= $0B 	;1 color graphics mode, 20 bytes/line, 2 line V
   153 = 000D			DL_GR7	= $0D 	;4 color graphics mode, 40 bytes/line, 2 line V
   154 = 000F			DL_GR8	= $0F 	;graphics hi-res mode 40 bytes/line
   155 = 0004			DL_GR12	= $04 	;text - 4+1 color, 1 line V
   156 = 000E			DL_GR15	= $0E 	;4 color graphics mode, 40 bytes/line, 1 line V
   157 				;modes not supported by BASIC
   158 = 0003			DL_A3	= $03 	;hi-res text mode 8x10 pixel char, 40 bytes/line
   159 = 0005			DL_A5	= $05 	;text - 4+1 color, 2 line V
   160 = 000C			DL_AC	= $0C 	;1 color graphics mode, 20 bytes/line, 1 line V
   161 				;------------------------------------------
   162 				;OS Vectors
   163 = 0200			VDSLST = $0200 ;512,513
   164 = 0202			VPRCED = $0202 ;514,515
   165 = 0204			VINTER = $0204 ;516,517
   166 = 0206			VBREAK = $0206 ;518,519
   167 = 0208			VKEYBD = $0208 ;520,521
   168 = 020A			VSERIN = $020A ;522,523
   169 = 020C			VSEROR = $020C ;524,525
   170 = 020E			VSEROC = $020E ;526,527
   171 = 0210			VTIMR1 = $0210 ;528,529
   172 = 0212			VTIMR2 = $0212 ;530,531
   173 = 0214			VTIMR3 = $0214 ;532,533
   174 = 0216			VIMIRQ = $0216 ;534,535
   175 = 0218			CDTMV1 = $0218 
   176 = 021A			CDTMV2 = $021A
   177 = 021C			CDTMV3 = $021C 
   178 = 022E			CDTMV4 = $022E
   179 = 0220			CDTMV5 = $0220
   180 = 0222			VVBLKI = $0222 ;546,547
   181 = 0224			VVBLKD = $0224 ;548,549
   182 = 0226			CDTMA1 = $0226
   183 = 0228			CDTMA2 = $0228
   184 = 022F			SDMCTL = $022F ;559
   185 = 0230			SDLSTL = $0230 ;560,561
   186 = 0231			SDLSTH = $0231 ;560,561
   187 				;OS CALLS
   188 = E45C			SETVBV	= $E45C
   189 = E45F			SYSVBV	= $E45F
   190 = E462			XITVBV	= $E462
   191 				;------------------------------------------
   192 				;USEFUL
   193 				;bit mask
   194 = 0001			OR0	= 1
   195 = 0002			OR1	= 2
   196 = 0004			OR2	= 4
   197 = 0008			OR3	= 8
   198 = 0010			OR4	= 16
   199 = 0020			OR5	= 32
   200 = 0040			OR6	= 64
   201 = 0080			OR7	= 128
   202 = 00FE			AND0	= $FE
   203 = 00FD			AND1	= $FD
   204 = 00FB			AND2	= $FB
   205 = 00F7			AND3	= $F7
   206 = 00EF			AND4	= $EF
   207 = 00DF			AND5	= $DF
   208 = 00BF			AND6	= $BF
   209 = 007F			AND7	= $7F
   210 				;-----------------------------------------------
   211 				;hw bits
   212 = 0004			SKSTAT_KEYPRESS	= OR2 	;key pressed
   213 = 0008			SKSTAT_SHIFT	= OR3 	;shift key pressed
   214 = 0002			SKSTAT_SR_BUSY	= OR1 	;serial input register busy
   215 = 0080			SKSTAT_FERR	= OR7 	;framing error
   216 = 0040			SKSTAT_KB_OVR	= OR6 	;keyboard overrun
   217 = 0020			SKSTAT_SR_OVR	= OR5 	;serial overrun
   218 = 0010			SKSTAT_IN_PAD	= OR4 	;serial input pin
   219
   220 				;Atari OS Routines
   221 				;File version 1.01
   222 				;2005-03-13 10:35:00
   223 				;-----------------------------
   224 = 0004			RAMLO	= $04
   225 = 0010			IRQENS	= $10
   226 = 0014			RTCLOK1	= $14
   227 = 0014			TIMER	= $14
   228 = 0013			RTCLOK2	= $13
   229 = 0012			RTCLOK3	= $12
   230 = 006A			RAMTOP	= $6A
   231 = 004D			ATRACT	= $4D
   232 = 0079			KEYDEF	= $79
   233 				;----------------------------
   234 = 0008			WARMST	= $08
   235 = 000A			DOSVEC	= $0A
   236 = 000C			DOSINI	= $0C
   237 = 0244			COLDST	= $0244
   238 = 033D			PUPBT1	= $033D
   239 = 033E			PUPBT2	= $033E
   240 = 033F			PUPBT3	= $033F
   241 = 0020			ZIOCB	= $20
   242 = 02E0			RUNAD	= $02E0
   243 = 02E2			INITAD	= $02E2
   244 = 02FC			KBCODES	= $02FC
   245 = 031A			HATABS	= $031A
   246 				;bloki IOCB
   247 = 0340			IOCB	= $0340
   248 = 0340			ICHID	= $0340
   249 = 0341			ICDNO	= $0341
   250 = 0342			ICCOM	= $0342
   251 = 0343			ICSTA	= $0343
   252 = 0344			ICBAL	= $0344
   253 = 0345			ICBAH	= $0345
   254 = 0346			ICPTL	= $0346
   255 = 0347			ICPTH	= $0347
   256 = 0348			ICBLL	= $0348
   257 = 0349			ICBLH	= $0349
   258 = 034A			ICAX1	= $034A
   259 = 034B			ICAX2	= $034B
   260 = 034C			ICAX3	= $034C
   261 = 034D			ICAX4	= $034D
   262 = 034E			ICAX5	= $034E
   263 = 034F			ICAX6	= $034F
   264 = 0003			CIO_OPEN	= 3
   265 = 0005			CIO_GETTEXT	= 5
   266 = 0007			CIO_GETDATA	= 7
   267 = 0009			CIO_PUTTEXT	= 9
   268 = 000B			CIO_PUTDATA	= 11
   269 = 000C			CIO_CLOSE	= 12
   270 = 000D			CIO_GETSTATUS	= 13
   271 = 0004			CIO_READ	= 4
   272 = 0008			CIO_WRITE	= 8
   273 = 0006			CIO_DIR	= 6
   274 				;------------------------------
   275 				;Procedury, tablice OS
   276 = C642			PUTLINE	= $C642
   277 = E453			DSKINT	= $E453
   278 = E456			CIOMAIN	= $E456
   279 = E4DF			CIOVXLE = $E4DF
   280 = E4C4			CIOV800 = $E4C4
   281 = E456			CIOVANY	= $E456
   282 = E4DF			CIOV    = CIOVXLE  
   283
   284 = E459			SIOINT	= $E459
   285 = E459			SIOV	= $E459
   286 = E471			SELFTST	= $E471
   287 = E477			COLDV	= $E477
   288 = E477			COLD	= $E477
   289 = EEBC			NEWDEV	= $EEBC
   290 				;Graphic Direct Calls
   291 = 02B7			FILFLG = $02B7
   292 = F9C2			DRAWXLE = $F9C2
   293
   294
   295 = 003F			KEY_A  = 63
   296 = 003E			KEY_S  = 62
   297 = 003D			KEY_G  = 61
   298 = 003C			KEY_Cap  = 60
   299 = 003A			KEY_D  = 58
   300 = 0039			KEY_H  = 57
   301 = 0038			KEY_F  = 56
   302 = 0037			KEY_Great = 55
   303 = 0036			KEY_Less = 54
   304 = 0035			KEY_8  = 53
   305 = 0034			KEY_BSp  = 52
   306 = 0033			KEY_7  = 51
   307 = 0032			KEY_0  = 50
   308 = 0030			KEY_9  = 48
   309 = 002F			KEY_Q  = 47
   310 = 002E			KEY_W  = 46
   311 = 002D			KEY_T  = 45
   312 = 002C			KEY_Tab  = 44
   313 = 002B			KEY_Y  = 43
   314 = 002A			KEY_E  = 42
   315 = 0028			KEY_R  = 40
   316 = 0027			KEY_Inv  = 39
   317 = 0026			KEY_Slash = 38
   318 = 0025			KEY_M  = 37
   319 = 0023			KEY_N  = 35
   320 = 0022			KEY_Dot  = 34
   321 = 0021			KEY_Spa  = 33
   322 = 0020			KEY_Comma = 32
   323 = 001F			KEY_1  = 31
   324 = 001E			KEY_2  = 30
   325 = 001D			KEY_5  = 29
   326 = 001C			KEY_Esc  = 28
   327 = 001B			KEY_6  = 27
   328 = 001A			KEY_3  = 26
   329 = 0018			KEY_4  = 24
   330 = 0017			KEY_Z  = 23
   331 = 0016			KEY_X  = 22
   332 = 0015			KEY_B  = 21
   333 = 0014			KEY_F4  = 20
   334 = 0013			KEY_F3  = 19
   335 = 0012			KEY_C  = 18
   336 = 0011			KEY_Hlp  = 17
   337 = 0010			KEY_V  = 16
   338 = 000F			KEY_Equal = 15
   339 = 000E			KEY_Minus = 14
   340 = 000D			KEY_I  = 13
   341 = 000C			KEY_Ret  = 12
   342 = 000B			KEY_U  = 11
   343 = 000A			KEY_P  = 10
   344 = 0008			KEY_O  = 8
   345 = 0007			KEY_Aster = 7
   346 = 0006			KEY_plus = 6
   347 = 0005			KEY_K  = 5
   348 = 0004			KEY_F2  = 4
   349 = 0003			KEY_F1  = 3
   350 = 0002			KEY_Semi = 2
   351 = 0001			KEY_J  = 1
   352 = 0000			KEY_L  = 0
   353
   354
   345 				  ICL "TitleScreen.ASM" 
Source: TitleScreen.ASM
     1 				/***************************************/
     2 				/*  Use MADS http://mads.atari8.info/  */
     3 				/*  Mode: DLI (char mode)              */
     4 				/***************************************/
     5
     6
     7 				;--- MAIN PROGRAM 
     8
     9 				INIT_TITLE
    10 8000 A9 00		    LDA #0
    11 8002 8D 0E D4		    STA NMIEN
    12 8005 8D 00 D4		    STA DMACTL
    13 8008 8D 1B D0		    STA PRIOR
    14
    15 800B A9 08		    LDA #08
    16 800D 8D 1F D0		    STA CONSOL
    17
    18 8010 A9 00				lda #<SCREEN
    19 8012 85 C0				sta M0	
    20 8014 A9 05				lda #>SCREEN
    21 8016 85 C1				sta M1	
    22 8018 A0 00				ldy #$00
    23 801A			MAKE_SCREEN_ADDR_LOOP
    24 801A A5 C0				lda M0
    25 801C 99 00 10				sta SCREEN_LINE_ADDR_LOW,Y
    26 801F 18					clc			
    27 8020 69 30				adc #48
    28 8022 85 C0				sta M0			
    29 8024 A5 C1				lda M1			
    30 8026 99 20 10				sta SCREEN_LINE_ADDR_HIGH,Y
    31 8029 90 02				bcc NOSHA		
    32 802B E6 C1				inc M1			
    33 802D			NOSHA		
    34 802D C8			    iny			
    35 802E C0 20				cpy #32		
    36 8030 90 E8				bcc MAKE_SCREEN_ADDR_LOOP
    37
    38 8032 A9 00		  LDA #<FONT1
    39 8034 A0 30		  LDY #>FONT1
    40 8036 A2 00		  LDX #0
    41 8038 20 00 B0		  JSR INFLATE
    42 803B A9 00		  LDA #<FONT2
    43 803D A0 34		  LDY #>FONT2
    44 803F A2 01		  LDX #1
    45 8041 20 00 B0		  JSR INFLATE
    46
    47
    48 				    IFT USE_PLEX_DEF = 0 
    49 				      LDX #>:RamSizeCode+1
    50 				      LDY #$00
    51 				      STY NDX0
    52 				      STY NDX2
    53 				      LDA #$38
    54 				      STA NDX1
    55 				      LDA #$A8
    56 				      STA NDX3    
    57 				MLR_CRLOOP
    58 				      LDA (NDX2),Y
    59 				      STA (NDX0),Y
    60 				      INY
    61 				      BNE MLR_CRLOOP
    62 				      INC NDX1
    63 				      INC NDX3
    64 				      DEX
    65 				      BNE MLR_CRLOOP
    66 				    ELI USE_PLEX_DEF = 1
    67 8044 A9 00		      LDA #$00
    68 8046 A0 38		      LDY #$38
    69 8048 A2 03		      LDX #3
    70 804A 20 00 B0		      JSR INFLATE
    71 				    EIF
    72 				        
    73
    74
    75
    76
    77
    78 804D A9 7D		    LDA #<TITLE00DLI
    79 804F 8D 00 02		    STA VDSLST + 0
    80 8052 A9 82		    LDA #>TITLE00DLI
    81 8054 8D 01 02		    STA VDSLST + 1
    82 8057 A9 06		    LDA #<VBI_TITLE
    83 8059 8D 22 02		    STA VVBLKI + 0 
    84 805C A9 81		    LDA #>VBI_TITLE
    85 805E 8D 23 02		    STA VVBLKI + 1 
    86 8061 A9 00		    LDA #0
    87 8063 85 C0		    STA M0
    88 8065 85 15		    STA VBIDONE
    89 8067 A9 01		    LDA #$01
    90 8069 85 09		    STA $09
    91 806B			HOLDINGCONSOLKEY1    
    92 806B AD 1F D0		    LDA CONSOL
    93 806E C9 07		    CMP #7
    94 8070 D0 F9		    BNE HOLDINGCONSOLKEY1 
    95 				;    JSR :RMT_SILENCE
    96 8072 85 99		    STA $99
    97 8074 20 94 39		    JSR Clear_Sprite_Memory
    98 8077 20 D0 39		    JSR Clear_Screen
    99 807A A2 00		    LDX #0
   100 807C			Q1L
   101
   102 807C BD F8 82		    LDA CREDIT_TEXT,X    
   103 807F 9D 30 07		    STA SCREEN+560,X
   104 8082 E8			    INX        
   105 8083 E0 F0		    CPX #240
   106 8085 D0 F5		    BNE Q1L
   107
   108
   109 8087 A9 00		  LDA #<SCREEN
   110 8089 A0 05		  LDY #>SCREEN
   111 808B A2 02		  LDX #2
   112 808D 20 00 B0		  JSR INFLATE
   113
   114 				    
   115 8090 A9 CE		 	LDA #<(TITLE_DISPLAY_LIST)
   116 8092 8D 02 D4			STA DLISTL
   117 8095 A9 82			LDA #>(TITLE_DISPLAY_LIST)
   118 8097 8D 03 D4			STA DLISTH
   119 809A A9 10			LDA #>PMBANK
   120 809C 8D 07 D4			STA PMBASE
   121 809F A9 3E			LDA #62
   122 80A1 8D 00 D4			STA DMACTL         
   123 80A4 A9 FF			LDA #255
   124 80A6 85 C0		  STA M0
   125 80A8 A9 00		  LDA #0
   126 80AA 85 C1			STA M1
   127 80AC 85 C2			STA M2
   128 80AE A9 03			LDA #$03
   129 80B0 8D 1D D0			STA GRACTL
   130 80B3 A9 01			LDA #$01
   131 80B5 8D 1B D0			STA PRIOR
   132 				;	LDA #108
   133 				;	STA HPOSP0
   134 80B8 A9 03			LDA #3
   135 80BA 8D 08 D0			STA SIZEP0
   136 80BD 8D 09 D0			STA SIZEP1
   137 80C0 8D 0A D0			STA SIZEP2
   138 80C3 8D 0B D0			STA SIZEP3
   139 80C6 A9 10			LDA #$10
   140 80C8 8D 12 D0			STA COLPM0
   141 80CB 8D 13 D0			STA COLPM1
   142 80CE A9 80			LDA #$80
   143 80D0 8D 14 D0			STA COLPM2
   144 80D3 8D 15 D0			STA COLPM3
   145 80D6 A2 0B			LDX #11
   146 80D8			PMBKLP
   147 				;	LDA #248
   148 				;	STA PMBNK0+215,X
   149 				;	LDA #252
   150 				;	STA PMBNK1+138,X
   151 				;	STA PMBNK1+215,X
   152 				;	DEX
   153 				;	BPL PMBKLP
   154
   155 80D8 A9 00		  LDA #$00
   156 80DA 85 CE		  STA MX
   157 80DC 85 CF		  STA MY
   158 80DE A0 00		  LDY #0  
   159 80E0 A9 C0			LDA #192
   160 80E2 8D 0E D4			STA NMIEN
   161 80E5 A9 3E			LDA #$3E
   162 80E7 8D 00 D4			STA DMACTL             
   163
   164 80EA			TITLEHOLD
   165 80EA A5 C0			LDA M0
   166 80EC D0 FC			BNE TITLEHOLD
   167
   168 80EE			HOLDINGCONSOLKEY2
   169 80EE AD 1F D0		  LDA CONSOL
   170 80F1 C9 07		  CMP #7
   171 80F3 D0 F9		  BNE HOLDINGCONSOLKEY2 
   172 80F5 A9 08			LDA #08
   173 80F7 8D 1F D0			STA CONSOL
   174 80FA A9 00		  LDA #<FONT1
   175 80FC A0 30		  LDY #>FONT1
   176 80FE A2 00		  LDX #0 
   177 8100 20 00 B0		  JSR INFLATE 
   178 8103 4C 3F 85		  JMP INIT_GAME
   179 				    
   180 8106			VBI_TITLE
   181 8106 E6 14			INC FRAMECLOCKLO
   182 8108 D0 02			BNE NOCLTHI
   183 810A E6 13			INC FRAMECLOCKHI  
   184 810C			NOCLTHI
   185 810C A9 7D		  LDA #<TITLE00DLI
   186 810E 8D 00 02		  STA VDSLST+0
   187 8111 A9 82		  LDA #>TITLE00DLI
   188 8113 8D 01 02		  STA VDSLST+1
   189 8116 A5 CF		  LDA MY
   190 8118 49 01		  EOR #$01
   191 811A 85 CF		  STA MY
   192 811C 85 CE		  STA MX  
   193 811E 18			  CLC
   194 811F 69 04		  ADC #4
   195 				;  STA :TF_SWITCH
   196 8121 69 03		  ADC #3
   197 				;  STA :TL_SWITCH
   198 8123 A5 14		  LDA FRAMECLOCKLO
   199 8125 4A			  LSR @
   200 8126 B0 0F		  BCS NO_TITLE_TIME_DECREASE
   201 8128 A6 D1		  LDX TITLE_TIME
   202 812A CA			  DEX
   203 812B 86 D1		  STX TITLE_TIME
   204 812D F0 16		  BEQ CHANGE_TITLE_TEXT
   205 812F E0 F0		  CPX #240
   206 8131 B0 04		  BCS NO_CHECK_PHASE_HOLD 
   207 8133 A5 D2		  LDA PHASE_HOLD
   208 8135 D0 03		  BNE HOLD_SCREEN_FOR_SELECTION
   209 8137			NO_CHECK_PHASE_HOLD
   210 				  
   211 8137			NO_TITLE_TIME_DECREASE  
   212 8137 4C CD 81		  JMP TITLE_PHASE_DONE
   213 813A			HOLD_SCREEN_FOR_SELECTION
   214 813A A5 D2		  LDA PHASE_HOLD
   215 813C C9 FF		  CMP #255
   216 813E F0 47		  BEQ SHOW_OPTION_PHASE
   217 8140 C6 D2		  DEC PHASE_HOLD
   218 8142 4C CD 81		  JMP TITLE_PHASE_DONE
   219 				  
   220 8145			CHANGE_TITLE_TEXT  
   221 8145 A6 D0		  LDX TITLE_PHASE
   222 8147 E0 01		  CPX #1
   223 8149 F0 11		  BEQ NO_TITLE_CLEAR_TEXT
   224 814B E0 03		  CPX #3
   225 814D F0 0D		  BEQ NO_TITLE_CLEAR_TEXT
   226 814F A9 00		  LDA #0
   227 8151 8D 01 D0			STA HPOSP1
   228 8154 A2 00		  LDX #0
   229 8156			TITLE_CLEAR_TEXT_LOOP
   230 8156 9D 30 07		  STA SCREEN+560,X
   231 8159 CA			  DEX
   232 815A D0 FA		  BNE TITLE_CLEAR_TEXT_LOOP
   233 815C			NO_TITLE_CLEAR_TEXT
   234 815C A6 D0		  LDX TITLE_PHASE
   235 815E			TITLE_PHASE_ZERO
   236 815E E0 00		  CPX #0
   237 8160 D0 14		  BNE TITLE_PHASE_ONE
   238 8162 A2 01		  LDX #1
   239 8164 86 D0		  STX TITLE_PHASE
   240 8166 A2 00		  LDX #0
   241 8168			TITLE_CREDIT_LOOP  
   242 8168 BD F8 82		  LDA CREDIT_TEXT,X
   243 816B 9D 30 07		  STA SCREEN+560,X
   244 816E E8			  INX
   245 816F E0 F0		  CPX #240
   246 8171 90 F5		  BCC TITLE_CREDIT_LOOP    
   247 8173 4C CD 81		  JMP TITLE_PHASE_DONE 
   248 8176			TITLE_PHASE_ONE
   249 8176 E0 01		  CPX #1
   250 8178 D0 07		  BNE TITLE_PHASE_TWO
   251 817A A2 02		  LDX #2
   252 817C 86 D0		  STX TITLE_PHASE
   253 				 
   254 817E 4C CD 81		  JMP TITLE_PHASE_DONE
   255 8181			TITLE_PHASE_TWO
   256 8181 E0 03		  CPX #3
   257 8183 B0 35		  BCS SET_TITLE_PHASE_FOUR
   258 8185 F0 0D		  BEQ TITLE_OPTIONS_ALREADY_ONSCREEN 
   259 8187			SHOW_OPTION_PHASE
   260 				    
   261 8187 A2 00		  LDX #0
   262 8189			TITLE_OPTION_LOOP
   263 8189 BD E8 83		  LDA OPTION_TEXT,X
   264 818C 9D 30 07		  STA SCREEN+560,X
   265 818F E8			  INX
   266 8190 E0 F0		  CPX #240
   267 8192 90 F5		  BCC TITLE_OPTION_LOOP    
   268 8194			TITLE_OPTIONS_ALREADY_ONSCREEN 
   269 8194 A2 03		  LDX #3
   270 8196 86 D0		  STX TITLE_PHASE
   271 8198 A2 FE		  LDX #254
   272 819A 86 D2		  STX PHASE_HOLD
   273 819C A5 DF		  LDA OPTGAME
   274 819E 0A			  ASL @
   275 819F 0A			  ASL @
   276 81A0 0A			  ASL @
   277 81A1 0A			  ASL @
   278 81A2 18			  CLC
   279 81A3 69 D8		  ADC #<OPTION_TEXT_00
   280 81A5 85 CA		  STA NDX0
   281 81A7 A9 00		  LDA #0
   282 81A9 69 84		  ADC #>OPTION_TEXT_00
   283 81AB 85 CB		  STA NDX1
   284 81AD A0 0F		  LDY #15
   285 81AF			GAME_OPTION_LOOP  
   286 81AF B1 CA		  LDA (NDX0),Y
   287 81B1 99 DA 07		  STA SCREEN+730,Y
   288 81B4 88			  DEY
   289 81B5 10 F8		  BPL GAME_OPTION_LOOP 
   290 81B7 4C CD 81		  JMP TITLE_PHASE_DONE
   291 81BA			SET_TITLE_PHASE_FOUR
   292 81BA E0 04		  CPX #4
   293 81BC B0 07		  BCS TITLE_PHASE_RESET_ZERO
   294 81BE A2 04		  LDX #4
   295 81C0 85 D0		  STA TITLE_PHASE  
   296 81C2 4C CD 81		  JMP TITLE_PHASE_DONE    
   297 81C5			TITLE_PHASE_RESET_ZERO
   298 81C5 A2 00		  LDX #0
   299 81C7 86 D0		  STX TITLE_PHASE
   300 81C9 A2 08		  LDX #8
   301 81CB 86 D1		  STX TITLE_TIME  
   302 81CD			TITLE_PHASE_DONE
   303 81CD A6 D0		  LDX TITLE_PHASE
   304 81CF E0 03		  CPX #3
   305 81D1 F0 0A		  BEQ NO_TITLE_LUMA_INC
   306 81D3 A5 D1		  LDA TITLE_TIME
   307 81D5 C9 F0		  CMP #240
   308 81D7 90 04		  BCC NO_TITLE_LUMA_INC
   309 81D9 49 FF		  EOR #255
   310 81DB 29 0F		  AND #15  
   311 				;  STA :TITLE_TEXT_LUMA
   312 81DD			NO_TITLE_LUMA_INC
   313 81DD E0 02		  CPX #2
   314 81DF F0 08		  BEQ NO_TITLE_LUMA_DEC
   315 81E1 A5 D1		  LDA TITLE_TIME 
   316 81E3 F0 04		  BEQ NO_TITLE_LUMA_DEC
   317 81E5 C9 10		  CMP #16
   318 81E7 B0 00		  BCS NO_TITLE_LUMA_DEC
   319 				;  AND #15
   320 				;  STA :TITLE_TEXT_LUMA
   321 81E9			NO_TITLE_LUMA_DEC  
   322 				    
   323 81E9 A9 00			LDA #0
   324 				;	STA ZONDX
   325 81EB AD 1F D0			LDA CONSOL
   326 81EE 8D 32 18		  STA LAST_CONSOLE
   327 81F1 C9 07		  CMP #7
   328 81F3 D0 0A		  BNE NO_ALL_CONSOLE_UP
   329 81F5 A6 D2		  LDX PHASE_HOLD
   330 81F7 E0 F2		  CPX #242
   331 81F9 90 04		  BCC NO_ALL_CONSOLE_UP
   332 81FB A2 F2		  LDX #242
   333 81FD 86 D2		  STX PHASE_HOLD
   334 				 
   335 81FF			NO_ALL_CONSOLE_UP  
   336 81FF 29 01			AND #1
   337 8201 C9 01			CMP #1
   338 8203 F0 04			BEQ NO_START_PRESS
   339 8205 A9 00			LDA #0
   340 8207 85 C0			STA M0
   341 8209			NO_START_PRESS
   342 8209 A5 C1			LDA M1
   343 820B D0 49			BNE CONSOLHOLD
   344 820D AD 1F D0			LDA CONSOL
   345 8210 29 02		 	AND #2
   346 8212 C9 02			CMP #2
   347 8214 F0 31			BEQ NO_SELECT_PRESS
   348 8216 A5 D0		  LDA TITLE_PHASE
   349 8218 C9 03		  CMP #3
   350 821A F0 0F		  BEQ TITLE_PHASE_ALREADY_ON_SELECTION
   351 				  
   352 821C			GO_TITLE_PHASE_SELECTION
   353 821C A9 03		  LDA #3
   354 821E 85 D0		  STA TITLE_PHASE
   355 8220 A9 F0		  LDA #240
   356 8222 85 D1		  STA TITLE_TIME
   357 8224 A2 01		  LDX #1
   358 8226 86 D2		  STX PHASE_HOLD  
   359 8228 4C 87 81		  JMP SHOW_OPTION_PHASE 
   360 822B			TITLE_PHASE_ALREADY_ON_SELECTION
   361 822B A6 D2		  LDX PHASE_HOLD
   362 822D E0 F0		  CPX #240
   363 822F B0 25		  BCS CONSOLHOLD 
   364 8231 A2 FF		  LDX #255
   365 8233 86 D2		  STX PHASE_HOLD
   366 8235 A9 F0		  LDA #240
   367 8237 85 D1		  STA TITLE_TIME
   368 8239 A6 DF		  LDX OPTGAME
   369 823B E8			  INX
   370 823C E0 03		  CPX #3
   371 823E 90 02		  BCC NO_GAMEOPTION_ZERO
   372 8240 A2 00		  LDX #0
   373 8242			NO_GAMEOPTION_ZERO
   374 8242 86 DF		  STX OPTGAME
   375 8244			SELECT_PRESS_DELAY  
   376 8244 4C 87 81		  JMP SHOW_OPTION_PHASE
   377
   378 8247			NO_SELECT_PRESS
   379 8247 AD 1F D0			LDA CONSOL
   380 824A 29 04		 	AND #4
   381 824C C9 04			CMP #4   
   382 824E F0 06			BEQ NO_OPTION_PRESS
   383 8250 A5 D0		  LDA TITLE_PHASE
   384 8252 C9 03		  CMP #3
   385 8254 D0 C6		  BNE GO_TITLE_PHASE_SELECTION
   386
   387
   388
   389 8256			NO_OPTION_PRESS
   390
   391 8256			CONSOLHOLD
   392 8256 AD 1F D0			LDA CONSOL
   393 8259 C9 07			CMP #7
   394 825B D0 04			BNE NORESETCONSOL
   395 825D A9 00			LDA #0
   396 825F 85 C1			STA M1
   397 8261			NORESETCONSOL	
   398 8261 A9 00			LDA #0
   399 				;	STA SCREEN + 700
   400 8263 A5 C2			LDA M2
   401 8265 18				CLC
   402 8266 69 11			ADC #$11
   403 				;	STA SCREEN + 699
   404 8268 A2 0F			LDX #$0F
   405 826A D0 06			BNE SHOWTRIGSET2
   406 826C			STLOOP1
   407 				;	LDA SHOOT_TEXT1,X
   408 				;	STA SCREEN + 779,X
   409 826C CA				DEX
   410 826D 10 FD			BPL STLOOP1
   411 826F 4C 75 82			JMP TRIGTXTEND
   412 8272			SHOWTRIGSET2
   413 8272			STLOOP2
   414 				;	LDA SHOOT_TEXT2,X
   415 				;	STA SCREEN + 779,X
   416 8272 CA				DEX
   417 8273 10 FD			BPL STLOOP2
   418
   419 8275			TRIGTXTEND
   420
   421 8275			EXIT_TITLE
   422 8275 78				SEI
   423 8276 A9 00			LDA #$00
   424 8278 85 15			STA VBIDONE
   425 827A 4C 62 E4		  JMP XITVBV
   426 				  
   427 827D			TITLE00DLI
   428 827D 48			    PHA
   429 827E 86 FE		    STX DLIXSAV
   430 8280 84 FF		    STY DLIYSAV
   431 8282 A9 4A		    LDA #$4A
   432 8284 A0 00		    LDY #$00    
   433 8286 8D 16 D0		    STA COLPF0
   434 8289 8C 18 D0		    STY COLPF2
   435 828C A9 34		    LDA #>FONT2
   436 828E 8D 09 D4		    STA CHBASE
   437 8291 A2 00		    LDX #0
   438 8293			TITLE_LUMA_LOOP    
   439 8293 BD 08 85		    LDA TITLE_LUMA_LINES,X 
   440 8296 8D 0A D4		    STA WSYNC
   441 8299 8D 17 D0		    STA COLPF1
   442 829C 8D 0A D4		    STA WSYNC
   443 829F E8			    INX
   444 82A0 E0 37		    CPX #55
   445 82A2 90 EF		    BCC TITLE_LUMA_LOOP
   446 82A4 A9 B4		    LDA #<TITLE01DLI
   447 82A6 8D 00 02		    STA VDSLST+0
   448 82A9 A9 82		    LDA #>TITLE01DLI
   449 82AB 8D 01 02		    STA VDSLST+1    
   450 82AE A6 FE		  	LDX DLIXSAV
   451 82B0 A4 FF		  	LDY DLIYSAV
   452 82B2 68			  	PLA
   453 82B3 40			  	RTI
   454
   455 82B4			TITLE01DLI
   456 82B4 48			    PHA
   457 82B5 86 FE		    STX DLIXSAV
   458 82B7 84 FF		    STY DLIYSAV
   459 82B9 A9 00		    LDA #$00
   460 82BB A2 0C		    LDX #$0C    
   461 82BD A0 30		    LDY #>FONT1
   462 82BF 8D 18 D0		    STA COLPF2
   463 82C2 8E 17 D0		    STX COLPF1 
   464 82C5 8C 09 D4		    STY CHBASE   
   465 82C8 A6 FE		  	LDX DLIXSAV
   466 82CA A4 FF		  	LDY DLIYSAV
   467 82CC 68			  	PLA
   468 82CD 40			  	RTI
   469
   470
   471 82CE			TITLE_DISPLAY_LIST
   472 82CE 70 70 00 80 42 00 +   DTA 112,112,0,128,66,<SCREEN,>SCREEN,2,2,2,2,2,2,2,2,2,2,2,2,2,128,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,65,<TITLE_DISPLAY_LIST,>TITLE_DISPLAY_LIST
   473
   474
   475 82F8			TITLE_DATA
   476 				;  .BYTE "   A M O K B O T S   "   
   477 				;  .BYTE "                                        "
   478 82F8			CREDIT_TEXT
   479 82F8 00 00 00 00 00 00 +   .BYTE "             COPYRIGHT 2015             "
   480 8320 30 65 74 65 72 00 +   .BYTE "Peter J. Meyer           Lance Ringquist"
   481 8348 00 00 00 00 00 00 +   .BYTE "                                        "
   482 8370 00 00 00 00 00 00 +   .BYTE "          Press Start to Begin          "
   483 8398 00 00 00 00 00 00 +   .BYTE "                                        "
   484 83C0 00 00 00 00 00 30 +   .BYTE "     Play with Joystick Controller      "       
   485 83E8			OPTION_TEXT
   486 83E8 00 00 00 00 00 00 +   .BYTE "             COPYRIGHT 2015             "
   487 8410 00 00 00 00 00 00 +   .BYTE "                                        "
   488 8438 00 00 00 00 00 00 +   .BYTE "      Press Select for Game Type        "
   489 8460 00 00 00 00 00 00 +   .BYTE "                                        "
   490 8488 00 00 00 00 00 00 +   .BYTE "                                        "
   491 84B0 00 00 00 00 00 00 +   .BYTE "                                        "       
   492
   493
   494 				          
   495 84D8			OPTION_TEXT_00
   496 84D8 25 61 73 79 00 00 +   .BYTE "Easy            "
   497 84E8			OPTION_TEXT_01
   498 84E8 2E 6F 72 6D 61 6C +   .BYTE "Normal          "
   499 84F8			OPTION_TEXT_02
   500 84F8 23 68 61 6C 6C 65 +   .BYTE "Challenger      "
   501
   502
   503
   504
   505 8508			TITLE_LUMA_LINES
   506 8508 00 00 00 02 02 04 +   DTA $00,$00,$00,$02,$02,$04,$06,$04,$02,$00,$00,$00,$00,$00,$00,$00,$0C,$0A,$08,$0A,$0C,$0E,$0C,$0A,$08,$08,$0A,$0C,$0E,$0C,$0A,$08,$0A,$0C,$0E,$0C,$0A,$08,$0A,$0C,$0E,$0C,$0A,$08,$00,$00,$00,$02,$04,$06,$04,$02,$00,$00,$00
   507
   508 				;---
   509
   346 853F			  ICL "AmokbotsGame.ASM" 
Source: AmokbotsGame.ASM
     1
     2 853F			Init_Game
     3 853F A9 00		  LDA #0
     4 8541 8D 0E D4		  STA NMIEN
     5 8544 8D 00 D4		  STA DMACTL
     6 8547 A9 00		  LDA #<(GAME_DISPLAY_LIST)
     7 8549 8D 02 D4		  STA DLISTL
     8 854C A9 96		  LDA #>(GAME_DISPLAY_LIST)
     9 854E 8D 03 D4		  STA DLISTH
    10 8551 A9 42		  LDA #66
    11 8553 8D 18 D0		  STA COLPF2
    12 8556 A9 10		  LDA #>PMBANK
    13 8558 8D 07 D4		  STA PMBASE
    14 855B A9 03			LDA #$03
    15 855D 8D 1D D0			STA GRACTL
    16 8560 20 D0 39		  JSR Clear_Screen    
    17
    18 8563 A2 03		    LDX #3
    19 8565			CLEAR_CURR_SCORE_LOOP  
    20 8565 A9 00		    LDA #0
    21 8567 95 40		    STA SCORE,X 
    22 8569 CA			    DEX  
    23 856A 10 F9		    BPL CLEAR_CURR_SCORE_LOOP
    24 856C A9 05		    LDA #5
    25 856E 85 DD		    STA PLIVES
    26 8570 A9 01		    LDA #1
    27 8572 85 D3		    STA PLEVEL
    28
    29
    30 8574 A9 00		  LDA #0
    31 8576 85 D0		  STA ROOMNO      
    32 8578 A9 34			LDA #052
    33 857A 85 81			STA CHARPY
    34 857C A9 78		  LDA #120
    35 857E 85 80		  STA CHARPX
    36 8580 A9 00		  LDA #0
    37 8582 85 89		  STA PROJECTILE_STATUS
    38 8584 85 84		  STA CHARACTER_STATUS
    39
    40
    41 				  IFT CartridgeType = CartridgeStandard16K  
    42 8586 A2 03		    LDX #3
    43 8588			CLEAR_HI_SCORE_LOOP  
    44 8588 B5 48		    LDA SCOREH,X
    45 858A C9 A0		    CMP #$A0
    46 858C 90 04		    BCC NO_CLEAR_HI_SCORE_BYTE
    47 858E A9 00		    LDA #0
    48 8590 95 48		    STA SCOREH,X 
    49 8592			NO_CLEAR_HI_SCORE_BYTE  
    50 8592 CA			    DEX  
    51 8593 10 F3		    BPL CLEAR_HI_SCORE_LOOP
    52 				  EIF
    53 				    
    54 8595 20 41 94		  JSR :SILENCE
    55 8598 20 32 91		  JSR MAKE_NEW_LEVEL
    56
    57 				   
    58 859B A9 11			LDA #$11
    59 859D 8D 1B D0			STA PRIOR
    60 85A0 A9 27		  LDA #<Sprite_Multi_Plex
    61 85A2 8D 22 02		  STA VVBLKI + 0 
    62 85A5 A9 38		  LDA #>Sprite_Multi_Plex
    63 85A7 8D 23 02		  STA VVBLKI + 1
    64
    65 85AA			DRAW_NEW_ROOM
    66 85AA 20 9B 8E		  JSR Draw_Room  
    67 85AD A9 00		  LDA #0
    68 85AF 8D 30 18		  STA EXITFLAG
    69 85B2 8D 36 38		  STA FIRSTSPRITE
    70 85B5 8D 98 38		  STA VLASTSPRITENO
    71 85B8 8D 08 D0			STA SIZEP0
    72 85BB 8D 09 D0			STA SIZEP1
    73 85BE 8D 0A D0			STA SIZEP2
    74 85C1 8D 0B D0			STA SIZEP3
    75 85C4 8D 0C D0		  STA SIZEM
    76 85C7 85 DA		  STA PRESDELAY
    77 85C9 A2 01		  LDX #1
    78 85CB 20 EF 8C		  JSR SET_IRQ
    79 85CE A2 00		  LDX #0
    80 85D0 20 DF 8C		  JSR SetVBIAddr
    81 85D3 A9 08		  LDA #8
    82 85D5 8D 1F D0		  STA CONSOL
    83 85D8 A9 07		  LDA #7
    84 85DA 8D 32 18		  STA LAST_CONSOLE
    85 85DD 20 B1 3A		  JSR DISPLAY_INFO  
    86 85E0 A5 80		  LDA CHARPX
    87 85E2 85 82		  STA PRIORX
    88 85E4 8D 7C 10		  STA SPHOZNEXT+0
    89 85E7 A5 81		  LDA CHARPY
    90 85E9 85 83		  STA PRIORY
    91 85EB A5 81		  LDA CHARPY
    92 85ED 8D 90 10		  STA SPRITENVRT+0
    93 85F0 A9 3F		  LDA #63  
    94 85F2 8D 00 D4		  STA DMACTL
    95 85F5 A9 C0		  LDA #192
    96 85F7 8D 0E D4		  STA NMIEN
    97 				  
    98 85FA			EXIT_HOLD_LOOP          ;00 Holding                       04 Go Room Right
    99 85FA AE 30 18		  LDX EXITFLAG          ;01 Game Over                     05 Go Room Left
   100 85FD F0 FB		  BEQ EXIT_HOLD_LOOP    ;02 End Level                     06 Go Room Up
   101 				                        ;03 Return Immediately to Title   07 Go Room Down
   102 				                        
   103 85FF A9 00		    LDA #0
   104 8601 8D 00 D4		    STA DMACTL
   105 8604 8D 0E D4		    STA NMIEN                        
   106 				                        
   107 8607			CheckExitFlag
   108 8607 BD 10 86		      LDA EXIT_FLAG_JUMP_LO,X
   109 860A 48			      PHA
   110 860B BD 18 86		      LDA EXIT_FLAG_JUMP_HI,X
   111 860E 48			      PHA
   112 860F 60			      RTS    
   113 				    
   114 8610			EXIT_FLAG_JUMP_LO
   115 8610 85			      DTA >(EXIT_HOLD_LOOP-1)
   116 8611 86 86 86		      DTA >(SetGameOver-1),>(SetEndLevel-1),>(SetReturnTitle-1)
   117 8614 86 86 86 86		      DTA >(GoRoomRight-1),>(GoRoomLeft-1),>(GoRoomUp-1),>(GoRoomDown-1)
   118 8618			EXIT_FLAG_JUMP_HI
   119 8618 F9			      DTA <(EXIT_HOLD_LOOP-1)
   120 8619 1F 22 25		      DTA <(SetGameOver-1),<(SetEndLevel-1),<(SetReturnTitle-1)
   121 861C 28 38 48 58		      DTA <(GoRoomRight-1),<(GoRoomLeft-1),<(GoRoomUp-1),<(GoRoomDown-1)
   122 8620			SetGameOver
   123 8620 4C 00 80		    jmp INIT_TITLE
   124 				     
   125 8623			SetEndLevel
   126 8623 4C 3F 85		    jmp Init_Game
   127 				    
   128 8626			SetReturnTitle    
   129 8626 4C 00 80		    jmp INIT_TITLE
   130 				         
   131 8629			GoRoomRight
   132 8629 A5 D0				lda RoomNo
   133 862B 18					clc
   134 862C 69 01				adc #1
   135 				    IFT CartridgeType = CartridgeXEXDEMO
   136 				      AND #07
   137 				    EIF
   138 862E			SetLeadRight
   139 862E 85 D0				sta RoomNo
   140 8630 A9 2C				lda #44
   141 8632 85 80				STA CHARPX
   142 8634 85 82				STA priorx
   143 8636 4C 69 86				jmp EndRoomGoto
   144 8639			GoRoomLeft
   145 8639 A5 D0				lda RoomNo
   146 863B 38					sec
   147 863C E9 01				sbc #1
   148 863E			SetLeadLeft
   149 				    IFT CartridgeType = CartridgeXEXDEMO
   150 				      AND #07
   151 				    EIF		
   152 863E 85 D0		    sta RoomNo
   153
   154 8640 A9 CB				lda #203
   155 8642 85 80				sta CHARPX
   156 8644 85 82				sta PRIORX
   157 8646 4C 69 86				jmp EndRoomGoto
   158 8649			GoRoomUP
   159 8649 A5 D0				lda RoomNo    
   160 864B 38					sec 
   161 864C E9 08				SBC #ROOMSPERROW
   162 864E			SetLeadUp
   163 				    IFT CartridgeType = CartridgeXEXDEMO
   164 				;      AND #07
   165 				    EIF
   166 864E 85 D0				sta RoomNo
   167 8650 A9 DB				lda #219
   168 8652 85 81				sta charpy
   169 8654 85 83				sta priory
   170 8656 4C 69 86				jmp EndRoomGoto
   171 8659			GoRoomDown
   172 8659 A5 D0				lda RoomNo
   173 865B 18					clc
   174 865C			SetLeadDown
   175 865C 69 08		    ADC #ROOMSPERROW 
   176 				    IFT CartridgeType = CartridgeXEXDEMO
   177 				;      AND #07
   178 				    EIF
   179 865E 85 D0				sta RoomNo
   180 8660 A9 2E				lda #46
   181 8662 85 81				sta charpy
   182 8664 85 83				sta priory	
   183 8666 4C 69 86				jmp EndRoomGoto
   184 8669			NoRoomDown
   185
   186 8669			EndRoomGoto 
   187 				    IFT CartridgeType = CartridgeXEXDEMO
   188 				      LDA ROOMNO
   189 				      CMP #30
   190 				      BCS EndRoomGoto  
   191 				    EIF
   192 8669 4C AA 85		    JMP DRAW_NEW_ROOM 
   193
   194
   195 866C			HOLD_VBI
   196 866C 06 15		  ASL VBIDONE
   197 866E A5 14		  LDA FRAMECLOCKLO
   198 8670 F0 02		  BEQ NO_DEC_TIMER
   199 8672 C6 14		  DEC FRAMECLOCKLO
   200 8674			NO_DEC_TIMER
   201 8674 4C 3E 8C		  JMP PHASE_DONE_VBI  
   202
   203 				;------------------------------------------------------------------------------
   204 				; Game Verticle Blank Interupt Loop
   205 				;------------------------------------------------------------------------------
   206 8677			GAME_VBI
   207 				;    LDA #128
   208 				;    STA COLBAK    
   209 8677 85 15		    STA VBIDONE
   210 8679 E6 14		    INC FRAMECLOCKLO
   211 867B D0 02		    BNE INGAME_NOCLTHI
   212 867D E6 13		    INC FRAMECLOCKHI
   213 867F			INGAME_NOCLTHI         
   214 				;    TAX
   215 				;    STX SPRITENUM+16
   216 				;    TAX
   217 				;    STX SPRITENUM+17
   218 867F			NCCC    
   219
   220 867F A5 14		    LDA FRAMECLOCKLO
   221 8681 4A			    LSR @
   222 8682 90 03		    BCC PHASE_1_VBI
   223 8684 4C 39 88		    JMP PHASE_2_VBI
   224 8687			PHASE_1_VBI
   225 8687 A5 14		    LDA FRAMECLOCKLO
   226 8689 29 04		    AND #4
   227 868B 85 16		    STA RUNFRAME
   228 				    
   229 868D 24 D7		    BIT FFIELD_COUNT
   230 868F 50 37		    BVC FORCEFIELD_OFF1 
   231 				;    LDX #3
   232 8691			COPYFFL1
   233 8691 A9 33		    LDA #51  
   234 8693 8D 70 32		    STA FONT1+78*8+0 
   235 8696 8D 72 32		    STA FONT1+78*8+2 
   236 8699 8D 74 32		    STA FONT1+78*8+4 
   237 869C 8D 76 32		    STA FONT1+78*8+6 
   238 869F 8D 70 36		    STA FONT2+78*8+0 
   239 86A2 8D 72 36		    STA FONT2+78*8+2 
   240 86A5 8D 74 36		    STA FONT2+78*8+4 
   241 86A8 8D 76 36		    STA FONT2+78*8+6 
   242 86AB A9 CC		    LDA #204  
   243 86AD 8D 71 32		    STA FONT1+78*8+1 
   244 86B0 8D 73 32		    STA FONT1+78*8+3 
   245 86B3 8D 75 32		    STA FONT1+78*8+5 
   246 86B6 8D 77 32		    STA FONT1+78*8+7 
   247 86B9 8D 71 36		    STA FONT2+78*8+1 
   248 86BC 8D 73 36		    STA FONT2+78*8+3 
   249 86BF 8D 75 36		    STA FONT2+78*8+5 
   250 86C2 8D 77 36		    STA FONT2+78*8+7 
   251
   252 				;    DEX
   253 				;    BPL COPYFFL1
   254 86C5 4C CB 86		    JMP FORCE_FIELD_DONE1
   255 86C8			FORCEFIELD_OFF1    
   256 86C8 20 20 8E		    JSR FORCE_FIELD_OFF
   257 86CB			FORCE_FIELD_DONE1        
   258
   259 				    
   260 86CB A5 14		    LDA FRAMECLOCKLO
   261 86CD 29 07		    AND #7
   262 86CF D0 10		    BNE NO_VIDEO_ADJUST
   263 86D1 AD 14 D0		    LDA PAL
   264 86D4 C9 0E		    CMP #14
   265 86D6 F0 06		    BEQ IS_PAL_FRAME_0
   266 86D8 20 2D 8D		    JSR DO_FRAME_DELAY
   267 86DB 4C 3E 8C		    JMP PHASE_DONE_VBI 
   268 86DE			IS_PAL_FRAME_0
   269 86DE 20 2D 8D		    JSR DO_FRAME_DELAY     
   270 				    
   271 86E1			NO_VIDEO_ADJUST
   272 86E1 A6 D7		    LDX FFIELD_COUNT
   273 86E3 CA			    DEX
   274 86E4 10 02		    BPL NO_FORCEFIELD_RESET
   275 86E6 A2 7F		    LDX #127
   276 86E8			NO_FORCEFIELD_RESET    
   277 86E8 86 D7		    STX FFIELD_COUNT
   278
   279 				            
   280 86EA A5 84		    LDA CHARACTER_STATUS
   281 86EC F0 2E		    BEQ CHARACTER_STATUS_ZERO 
   282 86EE C9 01		    CMP #1
   283 86F0 D0 23		    BNE CHARACTER_STATUS_NOT_DYING 
   284 86F2 A5 14		    LDA FRAMECLOCKLO
   285 86F4 29 02		    AND #2
   286 86F6 4A			    LSR @
   287 86F7 18			    CLC
   288 86F8 69 11		    ADC #17
   289 86FA 8D 40 10		    STA SPRITENUM+0
   290 86FD A5 14		    LDA FRAMECLOCKLO
   291 86FF 29 0E		    AND #14
   292 8701 4A			    LSR @
   293 8702 18			    CLC
   294 8703 69 A8		    ADC #168
   295 8705 8D B8 10		    STA SETSP0COLOR+0 
   296 8708 A5 14		    LDA FRAMECLOCKLO
   297 870A 29 3C		    AND #60
   298 870C D0 04		    BNE NO_TEST_RESET
   299 870E A9 00		    LDA #0
   300 8710 85 84		    STA CHARACTER_STATUS
   301 8712			NO_TEST_RESET    
   302 8712 4C 2C 88		    JMP CHARACTER_STATUS_DONE
   303 8715			CHARACTER_STATUS_NOT_DYING
   304 8715 C9 02		    CMP #2
   305 8717 D0 03		    BNE CHARACTER_STATUS_ZERO
   306 				    
   307 8719 4C 2C 88		    JMP CHARACTER_STATUS_DONE
   308 871C			CHARACTER_STATUS_ZERO    
   309 871C A9 00		    LDA #0
   310 871E 8D 40 10		    STA SPRITENUM+0   
   311 8721 A9 BC		    LDA #188
   312 8723 8D B8 10		    STA SETSP0COLOR+0
   313 8726 A9 2C		    LDA #44
   314 8728 8D B9 10		    STA SETSP0COLOR+1
   315
   316
   317 				;    LDA CHARPY
   318 				;    SEC
   319 				;    SBC #1
   320 				;    CMP #16
   321 				;    BCS NQQQ
   322 				;    LDA #180
   323 872B			NQQQ
   324 				;    STA CHARPY    
   325 				    
   326 872B AD 10 D0		    LDA TRIG0
   327 872E D0 41		    BNE DO_JOY_VERT
   328 8730			HOLDING_TRIGGER
   329 8730 AD 00 D3		    LDA PORTA
   330 8733 29 0F		    AND #15
   331 8735 AA			    TAX
   332 8736 BD 94 9C		    LDA CHAR_SHOOT_DIR,X
   333 8739 8D 40 10		    STA SPRITENUM+0
   334 873C A5 89		    LDA PROJECTILE_STATUS 
   335 873E D0 2E		    BNE NO_BOLT_SET    
   336 8740 BD A0 9C		    LDA BOLT_DIR_IMAGE,X
   337 8743 F0 29		    BEQ NO_BOLT_SET
   338 8745 85 8A		    STA PROJECTILE_SPRITE
   339 8747 8A			    TXA
   340 8748 29 03		    AND #$03
   341 874A A8			    TAY
   342 874B B9 94 9C		    LDA MINUS_PLUS_BOLT,Y
   343 874E 18			    CLC
   344 874F 79 90 9C		    ADC MINUS_PLUS_STICK,Y
   345 8752 85 88		    STA PROJECTILE_DY
   346 8754 8A			    TXA
   347 8755 29 0C		    AND #$0C
   348 8757 4A			    LSR @
   349 8758 4A			    LSR @
   350 8759 A8			    TAY
   351 875A B9 94 9C		    LDA MINUS_PLUS_BOLT,Y
   352 875D 85 87		    STA PROJECTILE_DX    
   353 875F A5 80		    LDA CHARPX
   354 8761 85 85		    STA PROJECTILE_PX	 
   355 8763 A5 81		    LDA CHARPY
   356 8765 38			    SEC
   357 8766 E9 02		    SBC #2
   358 8768 85 86		    STA PROJECTILE_PY
   359 876A A9 01		    LDA #1
   360 876C 85 89		    STA PROJECTILE_STATUS
   361 876E			NO_BOLT_SET       
   362 876E 4C DE 87		    JMP JOYSET_END
   363 				    
   364 				 	
   365
   366 8771			DO_JOY_VERT
   367 8771 AD 00 D3				LDA PORTA	
   368 8774 29 03		    AND #$03
   369 8776 C9 03				CMP #$03
   370 8778 F0 2C				BEQ No_Char_Vert_Movement
   371 877A AA			    TAX
   372 				;   LDA TRIG0
   373 				;   BEQ FIRE_VERT
   374 877B A5 81		    LDA CHARPY
   375 877D 18			    CLC
   376 877E 7D 90 9C		    ADC :MINUS_PLUS_STICK,X
   377 8781 85 81				STA CHARPY
   378
   379 8783 C9 2C		    CMP #44
   380 8785 B0 08		    BCS NOT_UP_DOOR
   381 8787 A9 06		    LDA #06
   382 8789 8D 30 18		    STA EXITFLAG
   383 878C 4C 3E 8C		    JMP PHASE_DONE_VBI
   384 878F			NOT_UP_DOOR
   385 878F C9 DC		    CMP #220
   386 8791 85 81		    STA CHARPY
   387 8793 90 08		    BCC NOT_DOWN_DOOR
   388 8795 A9 07		    LDA #07
   389 8797 8D 30 18		    STA EXITFLAG
   390 879A 4C 3E 8C		    JMP PHASE_DONE_VBI
   391 879D			NOT_DOWN_DOOR    
   392 879D BD 83 9C		    LDA CHAR_VERT_BASE,X
   393 87A0 18			    CLC
   394 87A1 65 16		    ADC RUNFRAME
   395 87A3 8D 40 10		    STA SPRITENUM+0    
   396 				;   JMP DO_JOY_HOZ
   397 				;FIRE_VERT
   398 				;   LDA CHAR_VERT_FIRE,X
   399 				;   STA SPRITENUM+0
   400 				;   JMP DO_JOY_HOZ
   401 87A6			No_Char_Vert_Movement
   402
   403 87A6			DO_JOY_HOZ
   404 87A6 AD 00 D3		    LDA PORTA		
   405 87A9 29 0C		    AND #$0C
   406 87AB C9 0C		    CMP #$0C
   407 87AD F0 2F		    BEQ No_Char_Hoz_Movement
   408 87AF 4A			    LSR @
   409 87B0 4A			    LSR @
   410 87B1 AA			    TAX 
   411 				    
   412 				;		LDA TRIG0    
   413 				;   BEQ FIRE_HOZ    
   414 87B2 A5 80		    LDA CHARPX
   415 87B4 18			    CLC
   416 87B5 7D 90 9C		    ADC :MINUS_PLUS_STICK,X
   417 87B8 85 80		    STA CHARPX
   418 87BA C9 2C		    CMP #44
   419 87BC B0 08		    BCS NOT_LEFT_DOOR
   420 87BE A9 05		    LDA #05
   421 87C0 8D 30 18		    STA EXITFLAG
   422 87C3 4C 3E 8C		    JMP PHASE_DONE_VBI
   423 87C6			NOT_LEFT_DOOR    
   424 87C6 C9 CC		    CMP #204
   425 87C8 90 08		    BCC NOT_DOOR_RIGHT
   426 87CA A9 04		    LDA #04
   427 87CC 8D 30 18		    STA EXITFLAG
   428 87CF 4C 3E 8C		    JMP PHASE_DONE_VBI
   429 87D2			NOT_DOOR_RIGHT        
   430
   431 87D2 BD 86 9C		    LDA CHAR_HOZ_BASE,X
   432 87D5 18			    CLC
   433 87D6 65 16		    ADC RUNFRAME
   434 87D8 8D 40 10		    STA SPRITENUM+0
   435 87DB 4C DE 87		    JMP JOYSET_END
   436 				;FIRE_HOZ
   437 				;   LDA CHAR_HOZ_FIRE,X
   438 				;   STA SPRITENUM+0
   439 				;   JMP JOYSET_END
   440
   441 87DE			No_Char_Hoz_Movement
   442 87DE			JOYSET_END    
   443 87DE A6 81		    LDX CHARPY
   444 87E0 BC 48 3B		    LDY SPRITE_TABZONE+5,X    
   445 87E3 30 37		    BMI No_Char_Screen_Collide
   446
   447 				;    TAX 
   448 				;    LDA CHARPX
   449 				;    SEC
   450 				;    SBC #30
   451 				;    LSR @
   452 				;    LSR @
   453
   454 87E5 A6 80		    LDX CHARPX
   455 87E7 BD BE 9C		    LDA TAB4DIV+2,X
   456
   457 87EA 18			    CLC    
   458 87EB 79 00 10		    ADC :SCREEN_LINE_ADDR_LOW,Y
   459 87EE 85 CC		    STA NDX2
   460 87F0 A9 00		    LDA #0
   461 87F2 79 20 10		    ADC :SCREEN_LINE_ADDR_HIGH,Y
   462 87F5 85 CD		    STA NDX3
   463 87F7 A2 00		    LDX #0
   464 87F9 A0 00		    LDY #0
   465 87FB			Char_Collide_Loop
   466 87FB B1 CC		    LDA (NDX2),Y
   467 87FD F0 17		    BEQ Get_Next_CHARSCR_COLLIDE
   468 87FF C9 CE		    CMP #206
   469 8801 D0 0B		    BNE No_Touch_C206
   470 8803 24 D7		    BIT FFIELD_COUNT
   471 8805 A9 01		    LDA #1
   472 8807 85 84		    STA CHARACTER_STATUS   
   473 8809 A9 0E		    LDA #14
   474 880B 8D B8 10		    STA SETSP0COLOR+0
   475 880E			No_Touch_C206            
   476 880E A5 82		    LDA PRIORX
   477 8810 85 80		    STA CHARPX 
   478 8812 A5 83		    LDA PRIORY
   479 8814 85 81		    STA CHARPY
   480 8816			Get_Next_CHARSCR_COLLIDE    
   481 8816 E8			    INX
   482 8817 BC B0 9C		    LDY CHARSCR_COLLIDE_NEXT,X
   483 881A 10 DF		    BPL Char_Collide_Loop
   484 				    
   485 				    
   486 881C			No_Char_Screen_Collide    ; --------------------------------------------------------------------------
   487
   488
   489 881C A5 80		    LDA CHARPX
   490 881E 85 82		    STA PRIORX
   491 8820 8D 7C 10		    STA SPHOZNEXT+0
   492 8823 A5 81		    LDA CHARPY
   493 8825 85 83		    STA PRIORY
   494 8827 A5 81		    LDA CHARPY
   495 8829 8D 90 10		    STA SPRITENVRT+0
   496
   497 882C			CHARACTER_STATUS_DONE
   498
   499 882C A5 14		    LDA FRAMECLOCKLO
   500 882E 29 0C		    AND #12
   501 8830 4A			    LSR @
   502 8831 4A			    LSR @    
   503 8832 85 8F		    STA BOT_FRAME
   504 				    
   505 				;    LDA #68
   506 				;    STA COLBAK
   507
   508
   509 8834 A2 0A		    LDX #MAXROBOTS - 2
   510 8836 4C D1 89		    JMP BOT_LOGIC_LOOP
   511
   512
   513 				    
   514 8839			PHASE_2_VBI
   515 8839 24 D7		    BIT FFIELD_COUNT
   516 883B 50 37		    BVC FORCEFIELD_OFF2 
   517
   518 883D A9 CC		    LDA #204  
   519 883F 8D 70 32		    STA FONT1+78*8+0 
   520 8842 8D 72 32		    STA FONT1+78*8+2 
   521 8845 8D 74 32		    STA FONT1+78*8+4 
   522 8848 8D 76 32		    STA FONT1+78*8+6 
   523 884B 8D 70 36		    STA FONT2+78*8+0 
   524 884E 8D 72 36		    STA FONT2+78*8+2 
   525 8851 8D 74 36		    STA FONT2+78*8+4 
   526 8854 8D 76 36		    STA FONT2+78*8+6 
   527 8857 A9 33		    LDA #51  
   528 8859 8D 71 32		    STA FONT1+78*8+1 
   529 885C 8D 73 32		    STA FONT1+78*8+3 
   530 885F 8D 75 32		    STA FONT1+78*8+5 
   531 8862 8D 77 32		    STA FONT1+78*8+7 
   532 8865 8D 71 36		    STA FONT2+78*8+1 
   533 8868 8D 73 36		    STA FONT2+78*8+3 
   534 886B 8D 75 36		    STA FONT2+78*8+5 
   535 886E 8D 77 36		    STA FONT2+78*8+7
   536 8871 4C 77 88		    JMP FORCE_FIELD_DONE2        
   537 8874			FORCEFIELD_OFF2    
   538 8874 20 20 8E		    JSR FORCE_FIELD_OFF
   539 8877			FORCE_FIELD_DONE2        
   540 8877 A5 89		    LDA PROJECTILE_STATUS
   541 8879 D0 15		    BNE DO_PROJECTILE_MOVING
   542 887B A9 00		    LDA #0
   543 887D			CONTINUE_PROJECT_END    
   544 887D 8D 41 10		    STA SPRITENUM+1
   545 8880 8D 7D 10		    STA SPHOZNEXT+1
   546 8883 8D 91 10		    STA SPRITENVRT+1
   547 8886 4C 35 89		    JMP NO_PROJECTILE_MOVING
   548 8889			DO_PROJECTILE_END
   549 8889 A9 00		    LDA #0
   550 888B 85 89		    STA PROJECTILE_STATUS
   551 888D 4C 7D 88		    JMP CONTINUE_PROJECT_END
   552 8890			DO_PROJECTILE_MOVING    
   553 				  
   554 8890 A5 85		    LDA PROJECTILE_PX
   555 8892 18			    CLC
   556 8893 65 87		    ADC PROJECTILE_DX
   557 8895 C9 24		    CMP #36
   558 8897 90 F0		    BCC DO_PROJECTILE_END
   559 8899 C9 D4		    CMP #212
   560 889B B0 EC		    BCS DO_PROJECTILE_END
   561 889D 85 85		    STA PROJECTILE_PX
   562 889F 8D 7D 10		    STA SPHOZNEXT+1
   563
   564 88A2 A5 86		    LDA PROJECTILE_PY
   565 88A4 18			    CLC
   566 88A5 65 88		    ADC PROJECTILE_DY
   567 88A7 C9 28		    CMP #40
   568 88A9 90 DE		    BCC DO_PROJECTILE_END
   569 88AB C9 E0		    CMP #224
   570 88AD B0 DA		    BCS DO_PROJECTILE_END
   571 88AF 85 86		    STA PROJECTILE_PY  
   572 88B1 8D 91 10		    STA SPRITENVRT+1
   573 88B4 A5 8A		    LDA PROJECTILE_SPRITE
   574 88B6 8D 41 10		    STA SPRITENUM+1
   575 88B9 A0 0B		    LDY #MAXROBOTS-1
   576 88BB			PROJ_HIT_BOT_LOOP
   577 88BB A5 85		    LDA PROJECTILE_PX
   578 88BD 38			    SEC
   579 88BE F9 90 18		    SBC BOTPX,Y
   580 88C1 C9 04		    CMP #4
   581 88C3 90 04		    BCC CHECK_PROJ_BOT_HIT_VERT
   582 88C5 C9 FC		    CMP #252
   583 88C7 90 24		    BCC NO_HIT_BOT_PROJ
   584 88C9			CHECK_PROJ_BOT_HIT_VERT    
   585 88C9 A5 86		    LDA PROJECTILE_PY
   586 88CB 38			    SEC
   587 88CC F9 A0 18		    SBC BOTPY,Y
   588 88CF C9 08		    CMP #8
   589 88D1 90 04		    BCC HIT_BOT_PROJ
   590 88D3 C9 F8		    CMP #248
   591 88D5 90 16		    BCC NO_HIT_BOT_PROJ
   592 88D7			HIT_BOT_PROJ
   593 88D7 B9 70 18		    LDA BOTTYPE,Y
   594 88DA F0 11		    BEQ NO_HIT_BOT_PROJ
   595 88DC C9 0F		    CMP #15
   596 88DE B0 0D		    BCS NO_HIT_BOT_PROJ
   597 88E0 A9 0F		    LDA #15
   598 88E2 99 70 18		    STA BOTTYPE,Y
   599 88E5 A9 00		    LDA #0
   600 88E7 99 D0 18		    STA BOTD0,Y
   601 				         
   602 88EA 4C 89 88		    JMP DO_PROJECTILE_END
   603 				    
   604 88ED			NO_HIT_BOT_PROJ
   605 88ED 88			    DEY
   606 88EE 10 CB		    BPL PROJ_HIT_BOT_LOOP
   607
   608 88F0			PROJ_SCREEN_COLLIDE
   609 88F0 A6 86		    LDX PROJECTILE_PY
   610 88F2 BC 4B 3B		    LDY SPRITE_TABZONE+08,X
   611 88F5 30 38		    BMI No_Proj_Screen_Collide
   612 				;    TAX 
   613 				;    LDA PROJECTILE_PX
   614 				;    SEC
   615 				;    SBC #30
   616 				;    LSR @
   617 				;    LSR @
   618 88F7 A6 85		    LDX PROJECTILE_PX
   619 88F9 BD BE 9C		    LDA TAB4DIV+2,X
   620 88FC 18			    CLC    
   621 88FD 79 00 10		    ADC :SCREEN_LINE_ADDR_LOW,Y
   622 8900 85 CC		    STA NDX2
   623 8902 A9 00		    LDA #0
   624 8904 79 20 10		    ADC :SCREEN_LINE_ADDR_HIGH,Y
   625 8907 85 CD		    STA NDX3
   626 8909 A0 00		    LDY #0
   627 890B A2 00		    LDX #0    
   628 890D			Proj_Collide_Loop    
   629 890D B1 CC		    LDA (NDX2),Y
   630 890F F0 1E		    BEQ No_Proj_Screen_Collide
   631 				    
   632 8911 C9 40		    CMP #64
   633 8913 D0 04		    BNE No_Shoot_C64
   634 8915 A9 41		    LDA #65
   635 8917 D0 06		    BNE Shoot_Set_New_Byte
   636 8919			No_Shoot_C64    
   637 8919 C9 41		    CMP #65
   638 891B D0 07		    BNE No_Shoot_C65
   639 891D A9 00		    LDA #00
   640 891F			Shoot_Set_New_Byte
   641 891F 91 CC		    STA (NDX2),Y
   642 8921 4C 89 88		    JMP DO_PROJECTILE_END 
   643 8924			No_Shoot_C65
   644 8924 C9 CE		    CMP #206
   645 8926 D0 04		    BNE No_Shoot_C206
   646 8928 24 D7		    BIT FFIELD_COUNT
   647 892A 50 03		    BVC No_Proj_Screen_Collide 
   648 892C			No_Shoot_C206    
   649 892C 4C 89 88		    JMP DO_PROJECTILE_END    
   650 892F			No_Proj_Screen_Collide        
   651 892F E8			    INX
   652 8930 BC B7 9C		    LDY PROJSCR_COLLIDE_NEXT,X
   653 8933 10 D8		    BPL Proj_Collide_Loop
   654 8935			NO_PROJECTILE_MOVING    
   655
   656
   657 				    
   658 8935 A2 01		    LDX #1
   659 8937			NEXT_ENEMY_BULLTET    
   660 8937 B5 90		    LDA BOT_BOLT_PX,X
   661 8939 F0 31		    BEQ GO_SKIP_ENEMY_BOLT
   662 893B 18			    CLC
   663 893C 75 94		    ADC BOT_BOLT_DX,X
   664 893E C9 2C		    CMP #44
   665 8940 90 1E		    BCC DISABLE_ENEMY_BOLT
   666 8942 C9 CC		    CMP #204
   667 8944 B0 1A		    BCS DISABLE_ENEMY_BOLT
   668 8946 95 90		    STA BOT_BOLT_PX,X
   669 8948 9D 8A 10		    STA SPHOZNEXT+14,X
   670 894B A8			    TAY            ;2
   671 894C B9 C0 9C		    LDA TAB4DIV+4,Y  ;6
   672 894F 85 C6		    STA M6         ;7           
   673 8951 B5 92		    LDA BOT_BOLT_PY,X
   674 8953 F0 17		    BEQ GO_SKIP_ENEMY_BOLT
   675 8955 18			    CLC
   676 8956 75 96		    ADC BOT_BOLT_DY,X
   677 8958 C9 2C		    CMP #44
   678 895A 90 04		    BCC DISABLE_ENEMY_BOLT
   679 895C C9 DC		    CMP #220
   680 895E 90 0F		    BCC NO_DISABLE_ENEMY_BOLT
   681 8960			DISABLE_ENEMY_BOLT
   682 8960 A9 00		    LDA #0
   683 8962 95 90		    STA BOT_BOLT_PX,X
   684 8964 95 92		    STA BOT_BOLT_PY,X
   685 8966 9D 8A 10		    STA SPHOZNEXT+14,X
   686 8969 9D 9E 10		    STA SPRITENVRT+14,X
   687 896C			GO_SKIP_ENEMY_BOLT
   688 896C 4C C9 89		    JMP NO_MOVE_ENEMY_BOLT 
   689 896F			NO_DISABLE_ENEMY_BOLT        
   690 896F 95 92		    STA BOT_BOLT_PY,X
   691 8971 9D 9E 10		    STA SPRITENVRT+14,X          
   692 8974 A8			    TAY 
   693 8975 B9 4E 3B		    LDA SPRITE_TABZONE+11,Y
   694 8978 A8			    TAY   
   695 8979 A5 C6		    LDA M6    
   696 897B 18			    CLC
   697 897C 79 00 10		    ADC :SCREEN_LINE_ADDR_LOW,Y
   698 897F 85 CC		    STA NDX2
   699 8981 A9 00		    LDA #0
   700 8983 79 20 10		    ADC :SCREEN_LINE_ADDR_HIGH,Y
   701 8986 85 CD		    STA NDX3
   702 8988 A0 00		    LDY #0
   703 898A B1 CC		    LDA (NDX2),Y
   704 898C F0 0B		    BEQ NO_ENEMY_BOLT_SCREEN_COLLIDE
   705 898E C9 CE		    CMP #206
   706 8990 D0 04		    BNE No_Enemy_Bolt_C206
   707 8992 24 D7		    BIT FFIELD_COUNT
   708 8994 50 03		    BVC NO_ENEMY_BOLT_SCREEN_COLLIDE
   709 8996			No_Enemy_Bolt_C206
   710 8996 4C 60 89		    JMP DISABLE_ENEMY_BOLT
   711 				;    LDA #192
   712 				;    STA (NDX2),Y 
   713
   714
   715
   716 8999			NO_ENEMY_BOLT_SCREEN_COLLIDE        
   717 8999 AD 0A D2		    LDA RANDOM
   718 899C 09 0E		    ORA #14
   719 899E 9D C6 10		    STA SETSP0COLOR+14,X     
   720 89A1 B5 98		    LDA BOT_BOLT_IM,X
   721 89A3 9D 4E 10		    STA SPRITENUM+14,X
   722
   723
   724
   725 89A6 B5 90		    LDA BOT_BOLT_PX,X
   726 89A8 38			    SEC
   727 89A9 E5 80		    SBC CHARPX
   728 89AB C9 08		    CMP #08
   729 89AD 90 04		    BCC BOT_BOLT_CHAR_VERTICAL
   730 89AF C9 F8		    CMP #248
   731 89B1 90 16		    BCC BOT_BOLT_CHAR_NO_COLLIDE     
   732 89B3			BOT_BOLT_CHAR_VERTICAL
   733 89B3 B5 92		    LDA BOT_BOLT_PY,X
   734 89B5 38			    SEC
   735 89B6 E5 81		    SBC CHARPY
   736 89B8 C9 10		    CMP #16
   737 89BA 90 04		    BCC DO_BOT_BOLT_CHAR_COLLIDE
   738 89BC C9 F0		    CMP #240
   739 89BE 90 09		    BCC BOT_BOLT_CHAR_NO_COLLIDE
   740 89C0			DO_BOT_BOLT_CHAR_COLLIDE    
   741 89C0 A9 01		    LDA #1
   742 89C2 85 84		    STA CHARACTER_STATUS   
   743 89C4 A9 0E		    LDA #14
   744 89C6 8D B8 10		    STA SETSP0COLOR+0
   745 89C9			BOT_BOLT_CHAR_NO_COLLIDE
   746
   747
   748
   749 89C9			NO_MOVE_ENEMY_BOLT
   750 89C9 CA			    DEX
   751 89CA 30 03		    BMI ENEMY_BOLTS_DONE
   752 89CC 4C 37 89		    JMP NEXT_ENEMY_BULLTET
   753 				    
   754 89CF			ENEMY_BOLTS_DONE    
   755
   756 				    
   757
   758
   759
   760
   761 				;    LDA #166
   762 				;    STA COLBAK
   763 				  
   764 89CF A2 0B		    LDX #MAXROBOTS - 1
   765 89D1			BOT_LOGIC_LOOP
   766 				    ;LDA #0
   767 				    ;STA M4
   768 89D1 BC 70 18		    LDY BOTTYPE,X
   769 89D4 B9 DD 89		    LDA BOT_JUMP_LO,Y
   770 89D7 48			    PHA
   771 89D8 B9 ED 89		    LDA BOT_JUMP_HI,Y
   772 89DB 48			    PHA                      
   773 89DC 60			    RTS    
   774 				    
   775 				    
   776 89DD			BOT_JUMP_LO
   777 89DD 8B			      DTA >(BOT_TYPE_NULL-1)
   778 89DE 89 8A 8A 8A		      DTA >(BOT_TYPE_01-1),>(BOT_TYPE_02-1),>(BOT_TYPE_03-1),>(BOT_TYPE_04-1)
   779 89E2 8A 8A 8A 8A		      DTA >(BOT_TYPE_05-1),>(BOT_TYPE_06-1),>(BOT_TYPE_07-1),>(BOT_TYPE_08-1)
   780 89E6 8A 8A 8A 8A		      DTA >(BOT_TYPE_09-1),>(BOT_TYPE_10-1),>(BOT_TYPE_11-1),>(BOT_TYPE_12-1)      
   781 89EA 8A 8A 8A		      DTA >(BOT_TYPE_13-1),>(BOT_TYPE_14-1),>(BOT_DESTROY-1)      
   782 89ED			BOT_JUMP_HI
   783 89ED F4			      DTA <(BOT_TYPE_NULL-1)
   784 89EE FC 22 3C 57		      DTA <(BOT_TYPE_01-1),<(BOT_TYPE_02-1),<(BOT_TYPE_03-1),<(BOT_TYPE_04-1)
   785 89F2 71 8B A4 BD		      DTA <(BOT_TYPE_05-1),<(BOT_TYPE_06-1),<(BOT_TYPE_07-1),<(BOT_TYPE_08-1)
   786 89F6 DE E1 E4 E7		      DTA <(BOT_TYPE_09-1),<(BOT_TYPE_10-1),<(BOT_TYPE_11-1),<(BOT_TYPE_12-1)      
   787 89FA EA ED F0		      DTA <(BOT_TYPE_13-1),<(BOT_TYPE_14-1),<(BOT_DESTROY-1)      
   788 				      
   789 89FD			BOT_TYPE_01 ; Walking Robot, +4 When Walking
   790 89FD A5 14		    LDA FRAMECLOCKLO
   791 89FF 29 1E		    AND #30
   792 8A01 C9 10		    CMP #16
   793 8A03 D0 03		    BNE NO_01_CHANGE
   794 8A05 20 3D 8E		    JSR ROBOT_CHANGE_DIR_90
   795 8A08			NO_01_CHANGE
   796 8A08 A9 14		    LDA #20
   797
   798 8A0A BC B0 18		    LDY BOTDX,X
   799 8A0D D0 05		    BNE TYPE_01_WALK
   800 8A0F BC C0 18		    LDY BOTDY,X
   801 8A12 F0 02		    BEQ TYPE_01_NO_WALK
   802 8A14			TYPE_01_WALK
   803 8A14 A9 18		    LDA #24
   804 8A16			TYPE_01_NO_WALK
   805
   806 8A16 05 8F		    ORA BOT_FRAME
   807 8A18 9D 42 10		    STA SPRITENUM+2,X
   808 				    
   809 8A1B A9 88		    LDA #136
   810 8A1D 9D BA 10		    STA SETSP0COLOR+2,X     
   811 8A20 4C 74 8B		    JMP ROLL_BOT_XY
   812
   813 8A23			BOT_TYPE_02 ;Hovering Robot
   814 8A23 A5 14		    LDA FRAMECLOCKLO
   815 8A25 29 3E		    AND #62
   816 8A27 C9 28		    CMP #40
   817 8A29 D0 03		    BNE NO_02_CHANGE
   818 8A2B 20 3D 8E		    JSR ROBOT_CHANGE_DIR_90
   819 8A2E			NO_02_CHANGE
   820
   821 8A2E A9 68		    LDA #104
   822 8A30 9D BA 10		    STA SETSP0COLOR+2,X
   823 8A33 A5 8F		    LDA BOT_FRAME    
   824 8A35 09 1C		    ORA #28
   825 8A37 9D 42 10		    STA SPRITENUM+2,X     
   826
   827 8A3A 4C 74 8B		    JMP ROLL_BOT_XY
   828
   829 8A3D			BOT_TYPE_03 ;Stationary Sentry
   830 8A3D A9 38		    LDA #056
   831 8A3F 9D BA 10		    STA SETSP0COLOR+2,X     
   832 8A42 A5 8F		    LDA BOT_FRAME
   833 8A44 09 20		    ORA #32
   834 8A46 9D 42 10		    STA SPRITENUM+2,X             
   835 8A49 BD 90 18		    LDA BOTPX,X      
   836 8A4C 9D 7E 10		    STA SPHOZNEXT+2,X
   837 8A4F BD A0 18		    LDA BOTPY,X
   838 8A52 9D 92 10		    STA SPRITENVRT+2,X
   839
   840 8A55 4C F5 8B		    JMP BOT_TYPE_END
   841
   842 8A58			BOT_TYPE_04 ;Rolling Robot
   843 8A58 A5 14		    LDA FRAMECLOCKLO
   844 8A5A 29 1E		    AND #30
   845 8A5C C9 06		    CMP #06
   846 8A5E D0 03		    BNE NO_04_CHANGE
   847 8A60 20 56 8E		    JSR ROBOT_CHANGE_DIR_45
   848 8A63			NO_04_CHANGE
   849 8A63 A9 0A		    LDA #010
   850 8A65 9D BA 10		    STA SETSP0COLOR+2,X
   851 8A68 A5 8F		    LDA BOT_FRAME
   852 8A6A 09 24		    ORA #36
   853 8A6C 9D 42 10		    STA SPRITENUM+2,X         
   854
   855 8A6F 4C 74 8B		    JMP ROLL_BOT_XY   
   856
   857 8A72			BOT_TYPE_05 ;Insect Like Robot
   858 8A72 A5 14		    LDA FRAMECLOCKLO    
   859 8A74 29 0E		    AND #14
   860 8A76 C9 06		    CMP #06
   861 8A78 D0 03		    BNE NO_05_CHANGE
   862 8A7A 20 6E 8E		    JSR ROBOT_CHANGE_HEADING
   863 8A7D			NO_05_CHANGE
   864 8A7D A9 DA		    LDA #218
   865 8A7F 9D BA 10		    STA SETSP0COLOR+2,X
   866 8A82 A5 8F		    LDA BOT_FRAME
   867 8A84 09 28		    ORA #40
   868 8A86 9D 42 10		    STA SPRITENUM+2,X     
   869
   870 8A89 4C 3B 8B		    JMP HOVER_BOT_XY
   871
   872 8A8C			BOT_TYPE_06 ;Cyborg Head
   873 8A8C AD 0A D2		    LDA RANDOM
   874 8A8F C9 07		    CMP #07
   875 8A91 B0 03		    BCS NO_06_CHANGE
   876 8A93 20 56 8E		    JSR ROBOT_CHANGE_DIR_45
   877 8A96			NO_06_CHANGE
   878 8A96 A9 1E		    LDA #030
   879 8A98 9D BA 10		    STA SETSP0COLOR+2,X
   880 8A9B A5 8F		    LDA BOT_FRAME
   881 8A9D 09 2C		    ORA #44
   882 8A9F 9D 42 10		    STA SPRITENUM+2,X         
   883
   884 8AA2 4C 74 8B		    JMP ROLL_BOT_XY
   885
   886 8AA5			BOT_TYPE_07 ;Two Head Rolling Robot
   887 8AA5 AD 0A D2		    LDA RANDOM
   888 8AA8 C9 07		    CMP #07
   889 8AAA B0 03		    BCS NO_07_CHANGE
   890 8AAC 20 62 8E		    JSR ROBOT_CHANGE_DIANGLE
   891 8AAF			NO_07_CHANGE
   892
   893 8AAF A9 B8		    LDA #184
   894 8AB1 9D BA 10		    STA SETSP0COLOR+2,X
   895 8AB4 A5 8F		    LDA BOT_FRAME
   896 8AB6 09 30		    ORA #48
   897 8AB8 9D 42 10		    STA SPRITENUM+2,X         
   898
   899 8ABB 4C 3B 8B		    JMP HOVER_BOT_XY
   900
   901 				    
   902 8ABE			BOT_TYPE_08;Boss Robot
   903 8ABE AD 0A D2		    LDA RANDOM
   904 8AC1 29 06		    AND #6
   905 8AC3 85 C6		    STA M6
   906 				    
   907 8AC5 A5 14		    LDA FRAMECLOCKLO
   908 8AC7 29 0E		    AND #14
   909 8AC9 C5 C6		    CMP M6
   910 8ACB D0 03		    BNE NO_08_CHANGE
   911 8ACD 20 56 8E		    JSR ROBOT_CHANGE_DIR_45
   912 8AD0			NO_08_CHANGE
   913 8AD0 A9 78		    LDA #120
   914 8AD2 9D BA 10		    STA SETSP0COLOR+2,X
   915 8AD5 A5 8F		    LDA BOT_FRAME
   916 8AD7 09 34		    ORA #52
   917 8AD9 9D 42 10		    STA SPRITENUM+2,X         
   918
   919 8ADC 4C 3B 8B		    JMP HOVER_BOT_XY
   920 				    
   921 8ADF			BOT_TYPE_09
   922
   923 8ADF 4C F5 8B		    JMP BOT_TYPE_END
   924 8AE2			BOT_TYPE_10
   925
   926 8AE2 4C F5 8B		    JMP BOT_TYPE_END
   927 8AE5			BOT_TYPE_11
   928
   929 8AE5 4C F5 8B		    JMP BOT_TYPE_END
   930 8AE8			BOT_TYPE_12
   931
   932 8AE8 4C F5 8B		    JMP BOT_TYPE_END
   933 8AEB			BOT_TYPE_13
   934
   935 8AEB 4C F5 8B		    JMP BOT_TYPE_END
   936 8AEE			BOT_TYPE_14
   937
   938 8AEE 4C F5 8B		    JMP BOT_TYPE_END
   939 8AF1			BOT_DESTROY; 15    
   940 8AF1 BD D0 18		    LDA BOTD0,X
   941 8AF4 4A			    LSR @
   942 8AF5 18			    CLC
   943 8AF6 69 37		    ADC #55
   944 8AF8 9D 42 10		    STA SPRITENUM+2,X
   945 8AFB 38			    SEC
   946 8AFC E9 37		    SBC #55
   947 8AFE 49 07		    EOR #07
   948 8B00 09 08		    ORA #8
   949 8B02 9D BA 10		    STA SETSP0COLOR+2,X     
   950 8B05 BD 90 18		    LDA BOTPX,X
   951 8B08 9D 7E 10		    STA SPHOZNEXT+2,X
   952 8B0B BD A0 18		    LDA BOTPY,X
   953 8B0E 9D 92 10		    STA SPRITENVRT+2,X
   954 				    
   955 8B11 BD D0 18		    LDA BOTD0,X
   956 8B14 18			    CLC
   957 8B15 69 01		    ADC #1
   958 8B17 9D D0 18		    STA BOTD0,X
   959 8B1A C9 10		    CMP #16
   960 8B1C B0 03		    BCS REMOVE_BOT_FROM_ROOM
   961 				    
   962 8B1E 4C F5 8B		    JMP BOT_TYPE_END      
   963 8B21			REMOVE_BOT_FROM_ROOM
   964 8B21 A9 00		    LDA #0
   965 8B23 9D 90 18		    STA BOTPX,X
   966 8B26 9D A0 18		    STA BOTPY,X
   967 8B29 9D D0 18		    STA BOTD0,X
   968 8B2C 9D 70 18		    STA BOTTYPE,X    
   969 8B2F 9D BA 10		    STA SETSP0COLOR+2,X     
   970 8B32 9D 7E 10		    STA SPHOZNEXT+2,X
   971 8B35 9D 92 10		    STA SPRITENVRT+2,X
   972 8B38 4C F5 8B		    JMP BOT_TYPE_END
   973 				     
   974 8B3B			HOVER_BOT_XY
   975 8B3B BD 90 18		    LDA BOTPX,X
   976 8B3E 18			    CLC
   977 8B3F 7D B0 18		    ADC BOTDX,X
   978 8B42 C9 2E		    CMP #46
   979 8B44 B0 04		    BCS NOT_HOVER_LEFT
   980 8B46 A9 2E		    LDA #46
   981 8B48 D0 06		    BNE LOC_HOVER_HOZ
   982 8B4A			NOT_HOVER_LEFT    
   983 8B4A C9 CA		    CMP #202
   984 8B4C 90 02		    BCC LOC_HOVER_HOZ
   985 8B4E A9 CA		    LDA #202
   986 8B50			LOC_HOVER_HOZ
   987 8B50 9D 90 18		    STA BOTPX,X
   988 8B53 9D 7E 10		    STA SPHOZNEXT+2,X
   989 				    
   990 8B56 BD A0 18		    LDA BOTPY,X
   991 8B59 18			    CLC
   992 8B5A 7D C0 18		    ADC BOTDY,X
   993 8B5D C9 2E		    CMP #46
   994 8B5F B0 04		    BCS NOT_HOVER_TOP
   995 8B61 A9 2E		    LDA #46
   996 8B63 D0 06		    BNE LOC_HOVER_VRT
   997 8B65			NOT_HOVER_TOP    
   998 8B65 C9 D0		    CMP #208
   999 8B67 90 02		    BCC LOC_HOVER_VRT
  1000 8B69 A9 D0		    LDA #208
  1001 8B6B			LOC_HOVER_VRT
  1002 8B6B 9D A0 18		    STA BOTPY,X
  1003 8B6E 9D 92 10		    STA SPRITENVRT+2,X
  1004 8B71 4C F5 8B		    JMP BOT_TYPE_END
  1005
  1006 8B74			ROLL_BOT_XY
  1007 8B74 BD 90 18		    LDA BOTPX,X
  1008 8B77 85 8B		    STA BOT_PRIOR_X
  1009 8B79 18			    CLC
  1010 8B7A 7D B0 18		    ADC BOTDX,X
  1011 8B7D C9 2F		    CMP #47
  1012 8B7F B0 04		    BCS NOT_BOT_LEFT
  1013 8B81 A9 2F		    LDA #47
  1014 8B83 D0 06		    BNE LOC_BOT_HOZ
  1015 8B85			NOT_BOT_LEFT    
  1016 8B85 C9 C9		    CMP #201
  1017 8B87 90 02		    BCC LOC_BOT_HOZ
  1018 8B89 A9 C9		    LDA #201
  1019 8B8B			LOC_BOT_HOZ
  1020 8B8B 9D 90 18		    STA BOTPX,X
  1021 8B8E 9D 7E 10		    STA SPHOZNEXT+2,X
  1022 8B91 A8			    TAY            ;2
  1023 8B92 B9 C0 9C		    LDA TAB4DIV+4,Y  ;6
  1024 8B95 85 C5		    STA M5         ;7
  1025 				    
  1026 				;    SEC           ;2
  1027 				;    SBC #28       ;4
  1028 				;    LSR @         ;6
  1029 				;    LSR @         ;8
  1030 				;    STA M5        ;11
  1031 8B97 BD A0 18		    LDA BOTPY,X
  1032 8B9A 85 8C		    STA BOT_PRIOR_Y 
  1033 8B9C 18			    CLC
  1034 8B9D 7D C0 18		    ADC BOTDY,X
  1035 8BA0 C9 30		    CMP #48
  1036 8BA2 B0 04		    BCS NOT_BOT_TOP
  1037 8BA4 A9 30		    LDA #48
  1038 8BA6 D0 06		    BNE LOC_BOT_VRT
  1039 8BA8			NOT_BOT_TOP    
  1040 8BA8 C9 CE		    CMP #206
  1041 8BAA 90 02		    BCC LOC_BOT_VRT
  1042 8BAC A9 CE		    LDA #206
  1043 8BAE			LOC_BOT_VRT
  1044 8BAE 9D A0 18		    STA BOTPY,X
  1045 8BB1 9D 92 10		    STA SPRITENVRT+2,X
  1046 8BB4 A8			    TAY 
  1047 8BB5 B9 48 3B		    LDA SPRITE_TABZONE+5,Y
  1048 8BB8 A8			    TAY   
  1049 8BB9 B9 00 10		    LDA :SCREEN_LINE_ADDR_LOW,Y
  1050 8BBC 18			    CLC            
  1051 8BBD 65 C5		    ADC M5         
  1052 8BBF 85 CC		    STA NDX2
  1053 8BC1 A9 00		    LDA #0
  1054 8BC3 79 20 10		    ADC :SCREEN_LINE_ADDR_HIGH,Y
  1055 8BC6 85 CD		    STA NDX3
  1056 8BC8 A0 00		    LDY  #00
  1057 8BCA B1 CC		    LDA (NDX2),Y
  1058 8BCC D0 0C		    BNE BOT_DID_SCREEN_COLLIDE
  1059 8BCE A0 30		    LDY #48
  1060 8BD0 B1 CC		    LDA (NDX2),Y
  1061 8BD2 D0 06		    BNE BOT_DID_SCREEN_COLLIDE
  1062 8BD4 A0 60		    LDY #96
  1063 8BD6 B1 CC		    LDA (NDX2),Y
  1064 8BD8 F0 18		    BEQ NO_BOT_SCREEN_COLLIDE
  1065 8BDA			BOT_DID_SCREEN_COLLIDE
  1066 8BDA C9 CE		    CMP #206
  1067 8BDC D0 04		    BNE NO_BOT_FF_CHECK
  1068 8BDE 24 D7		    BIT FFIELD_COUNT
  1069 8BE0 50 10		    BVC NO_BOT_SCREEN_COLLIDE
  1070 8BE2			NO_BOT_FF_CHECK     
  1071 8BE2 A5 8B		    LDA BOT_PRIOR_X         
  1072 8BE4 9D 90 18		    STA BOTPX,X
  1073 8BE7 9D 7E 10		    STA SPHOZNEXT+2,X 
  1074 8BEA A5 8C		    LDA BOT_PRIOR_Y            
  1075 8BEC 9D A0 18		    STA BOTPY,X
  1076 8BEF 9D 92 10		    STA SPRITENVRT+2,X
  1077 				    
  1078 8BF2			NO_BOT_SCREEN_COLLIDE    
  1079 				    
  1080 				;SET_BOT_SPRITE   
  1081 				   
  1082 8BF2 BD 90 18		    LDA BOTPX,X
  1083
  1084 				    
  1085 8BF5			BOT_TYPE_END    
  1086 				    
  1087
  1088
  1089 				    
  1090 8BF5			BOT_TYPE_NULL    
  1091 8BF5 CA			    DEX
  1092 8BF6 CA			    DEX
  1093 8BF7 30 03		    BMI BOT_LOGIC_DONE 
  1094 8BF9 4C D1 89		    JMP BOT_LOGIC_LOOP
  1095 8BFC			BOT_LOGIC_DONE            
  1096
  1097 				                   
  1098
  1099 8BFC			DO_SOUNDS          
  1100 				;    LDX #$04
  1101 				;    STX COLBAK
  1102 8BFC A9 00		    LDA #$00
  1103 8BFE 85 CA		    STA NDX0
  1104 8C00			PLAY_SOUND_LOOP
  1105 8C00 B5 B8		    LDA SND_CHANNEL_IN_USE,X
  1106 				       
  1107 8C02 F0 36		    BEQ DEC_CHANNEL_INDEX
  1108 8C04 BD 38 18		    LDA SND_DELAY_TIME,X
  1109 8C07 DE 38 18		    DEC SND_DELAY_TIME,X
  1110 8C0A F0 2E		    BEQ DEC_CHANNEL_INDEX
  1111 8C0C BD 39 18		    LDA SND_DELAY_RATE,X
  1112 8C0F 9D 38 18		    STA SND_DELAY_TIME,X
  1113 8C12			GET_SOUND_PART_ADDRESS       
  1114 8C12 BC 30 18		    LDY SND_ADDR_LO,X
  1115 8C15 BD 31 18		    LDA SND_ADDR_HI,X
  1116 8C18 85 CB		    STA NDX1
  1117 8C1A B1 CA		    LDA (NDX0),Y
  1118 8C1C 9D 01 D2		    STA AUDC1,X
  1119 8C1F C8			    INY
  1120 8C20 B1 CA		    LDA (NDX0),Y
  1121 8C22 9D 00 D2		    STA AUDF1,X 
  1122 8C25 C8			    INY  ;+ 2 
  1123 8C26 98			    TYA  ;+ 2
  1124 8C27 9D 30 18		    STA SND_ADDR_LO,X
  1125 8C2A D0 03		    BNE NO_SND_INC_ADDR_HI
  1126 8C2C FE 31 18		    INC SND_ADDR_HI,X
  1127 8C2F			NO_SND_INC_ADDR_HI    
  1128 8C2F D6 B0		    DEC SND_LENGTH_LO,X
  1129 8C31 D0 07		    BNE DEC_CHANNEL_INDEX
  1130 8C33 A9 00		    LDA #0
  1131 8C35 95 B8		    STA SND_CHANNEL_IN_USE,X
  1132 8C37 9D 01 D2		    STA AUDC1,X 
  1133 8C3A			DEC_CHANNEL_INDEX
  1134 8C3A CA			    DEX
  1135 8C3B CA			    DEX
  1136 8C3C 10 C2		    BPL PLAY_SOUND_LOOP    
  1137
  1138 8C3E			PHASE_DONE_VBI
  1139
  1140 8C3E			PRESET_SPRITES
  1141 8C3E A9 00			lda #$00	 
  1142 8C40 8D F4 10			sta SPRITEUSE + 0		
  1143 8C43 8D F5 10			sta SPRITEUSE + 1		
  1144 8C46 8D F6 10			sta SPRITEUSE + 2		
  1145 8C49 8D F7 10			sta SPRITEUSE + 3		
  1146 8C4C 8D F8 10			sta SPRITEUSE + 4		
  1147 8C4F 8D F9 10			sta SPRITEUSE + 5		
  1148 8C52 8D FA 10			sta SPRITEUSE + 6		
  1149 8C55 8D FB 10			sta SPRITEUSE + 7		
  1150 8C58 8D FC 10			sta SPRITEUSE + 8				
  1151 8C5B 8D FD 10			sta SPRITEUSE + 9		
  1152 8C5E 8D FE 10			sta SPRITEUSE + 10		
  1153 8C61 8D FF 10			sta SPRITEUSE + 11		
  1154 8C64 8D 00 11			sta SPRITEUSE + 12		
  1155 8C67 8D 01 11			sta SPRITEUSE + 13		
  1156 8C6A 8D 02 11			sta SPRITEUSE + 14		
  1157 8C6D 8D 03 11			sta SPRITEUSE + 15		
  1158 8C70 8D 04 11			sta SPRITEUSE + 16		
  1159 8C73 8D 05 11			sta SPRITEUSE + 17		
  1160 8C76 8D 06 11			sta SPRITEUSE + 18		
  1161 8C79 8D 07 11		  sta SPRITEUSE + 19
  1162 8C7C 8D 08 11			sta SPRITEUSE + 20		
  1163 8C7F 8D 09 11			sta SPRITEUSE + 21		
  1164 8C82 8D 0A 11			sta SPRITEUSE + 22		
  1165 8C85 8D 0B 11			sta SPRITEUSE + 23		
  1166 8C88 8D 0C 11			sta SPRITEUSE + 24		
  1167 8C8B 8D 0D 11			sta SPRITEUSE + 25		
  1168 8C8E 8D 0E 11			sta SPRITEUSE + 26		
  1169 					;sta SPRITEUSE + 27		
  1170 					;sta SPRITEUSE + 28		
  1171 				  ;sta SPRITEUSE + 29		
  1172
  1173 						IFT SPRITEEXT = 2||SPRITEEXT = 3
  1174 				      LDY #19
  1175 				    ELI SPRITEEXT = 1
  1176 				      LDY #17
  1177 				    ELI SPRITEEXT = 0
  1178 8C91 A0 0F		      LDY #15
  1179 				    EIF
  1180 8C93 84 DC				STY CURRENTSPRITE                        
  1181 8C95			PRESET_LOOP	    	
  1182 8C95 A4 DC		    LDY CURRENTSPRITE         
  1183 8C97 BE 90 10		    LDX SPRITENVRT,Y       
  1184 8C9A BD 43 3B				LDA :SPRITE_TABZONE,X
  1185 8C9D 99 CC 10		    STA SPZONT,Y
  1186 8CA0 30 03				BMI IsZoneNeg
  1187 8CA2 BD 58 3B				LDA :SPRITE_TABZONE + SPRITELENGTH + 1,X
  1188 8CA5			IsZoneNeg    
  1189 8CA5 99 E0 10				STA SPZONB,Y
  1190 8CA8 30 17		    BMI PrepareNextNdx
  1191 8CAA 8A			    TXA    
  1192 8CAB BE 43 3C		    LDX :PLAYER_ADDR_LIST,Y        
  1193 8CAE 9D A1 38		    STA STORPLYR0ADDRLO,X          
  1194 8CB1 B9 40 10		    LDA SPRITENUM,Y    				
  1195 8CB4 A8			    TAY			
  1196 8CB5 B9 EF 9B				lda :SPADDRLO,Y
  1197 8CB8 9D 9E 38				sta LOADPLYRADDRLO,X
  1198 8CBB B9 39 9C				lda :SPADDRHI,Y
  1199 8CBE 9D 9F 38				sta LOADPLYRADDRHI,X
  1200 8CC1			PrepareNextNdx      
  1201 8CC1 C6 DC		    DEC	CURRENTSPRITE	 
  1202 8CC3 10 D0				BPL PRESET_LOOP
  1203
  1204
  1205
  1206 				;    LDA #0
  1207 				;    STA COLBAK
  1208
  1209 8CC5 46 15		    LSR VBIDONE
  1210 8CC7 78			    SEI
  1211 8CC8 4C 62 E4		    JMP XITVBV
  1212
  1213 8CCB			TOGGLE_PAUSE  
  1214 8CCB AD 4B 39		  LDA VBIADR + 0
  1215 8CCE C9 24		  CMP #<PauseVBI
  1216 8CD0 F0 04		  BEQ ALREADY_PAUSED
  1217 8CD2 A2 01		  LDX #1
  1218 8CD4 D0 09		  BNE SetVBIAddr
  1219
  1220 8CD6			ALREADY_PAUSED
  1221 8CD6 A2 00		  LDX #0
  1222 8CD8 F0 05		  BEQ SetVBIAddr
  1223
  1224 8CDA			SetMusicVBI  	    
  1225 8CDA A2 02		    LDX #2
  1226 8CDC 4C DF 8C		    JMP SetVBIAddr
  1227
  1228 8CDF			SetVBIAddr
  1229 8CDF BD F8 A0		    LDA VBI_ADDR_LO,X
  1230 8CE2 8D 4B 39		    STA :VBIADR + 0    	
  1231 8CE5 BD FB A0		    LDA VBI_ADDR_HI,X
  1232 8CE8 8D 4C 39		    STA :VBIADR + 1
  1233 8CEB			ExitVBISet
  1234 8CEB 20 41 94		    JSR :SILENCE
  1235 8CEE 60				  RTS
  1236
  1237 8CEF			SET_IRQ
  1238 8CEF BD F2 A0			LDA IRQ_LO,X
  1239 8CF2 8D 08 02			STA VKEYBD	
  1240 8CF5 BD F4 A0			LDA IRQ_HI,X
  1241 8CF8 8D 09 02			STA VKEYBD+1
  1242 8CFB BD F6 A0			LDA IRQ_EN_SET,X
  1243 8CFE 8D 0E D2			STA IRQEN
  1244 8D01 A9 00			LDA #0
  1245 8D03 85 DA			STA PRESDELAY 
  1246 8D05 60			  RTS        
  1247 				    
  1248 8D06			IRQ_KEYBOARD
  1249 				;  PHA    	  
  1250 8D06 8A			  TXA
  1251 8D07 48			  PHA 
  1252 8D08 A9 00			LDA #0
  1253 8D0A 8D 0E D2			STA IRQEN
  1254 8D0D AD 09 D2			lda KBCODE
  1255 8D10 C9 21			cmp #$21	
  1256 8D12 D0 07			bne No_Space_Bar
  1257 8D14 20 CB 8C			JSR :TOGGLE_PAUSE
  1258 8D17 A9 03		  LDA #3
  1259 8D19 85 DA		  STA PRESDELAY
  1260 8D1B			No_Space_Bar
  1261
  1262 8D1B A9 40			LDA #64
  1263 8D1D 8D 0E D2			STA IRQEN
  1264 8D20 68			  PLA
  1265 8D21 AA			  TAX 
  1266 8D22 68				PLA
  1267 8D23			IRQ_NULL
  1268 8D23 40				RTI
  1269
  1270 8D24			PauseVBI	       	
  1271 				;		lda KBCODE	
  1272 				;		cmp #$21	
  1273 				;		bne KEYOTHER
  1274 				;		lda SKCTL	
  1275 				;		and #$04	
  1276 				;		cmp #$04	
  1277 				;		bne KEYOTHER
  1278 				;KEYOTHER
  1279 8D24 A5 DA		    LDA PRESDELAY
  1280 8D26 F0 02		    BEQ No_Pause_Space_Delay
  1281 8D28 C6 DA		    DEC PRESDELAY 
  1282 8D2A			No_Pause_Space_Delay
  1283 8D2A 4C 3E 8C				jmp PRESET_SPRITES
  1284 				 
  1285 				 
  1286 8D2D			DO_FRAME_DELAY
  1287 				;    LDA #24
  1288 				;    STA COLBAK
  1289 				    
  1290 8D2D AD 0A D2		    LDA RANDOM
  1291 8D30 29 0F		    AND #15
  1292 8D32 C9 0C		    CMP #12
  1293 8D34 B0 0A		    BCS SKIP_NEW_BOT_PROJECTILE
  1294 8D36 AA			    TAX
  1295 8D37 BD 70 18		    LDA BOTTYPE,X
  1296 8D3A F0 04		    BEQ SKIP_NEW_BOT_PROJECTILE
  1297 8D3C C9 0C		    CMP #12
  1298 8D3E 90 03		    BCC DO_NEW_BOT_PROJECTILE
  1299 8D40			SKIP_NEW_BOT_PROJECTILE
  1300 8D40 4C D6 8D		    JMP NO_BOT_NEW_PROJECTILE
  1301 8D43			DO_NEW_BOT_PROJECTILE
  1302 8D43 BD A0 18		    LDA BOTPY,X  ;10
  1303 8D46 38			    SEC
  1304 8D47 E5 81		    SBC CHARPY   ;05
  1305 8D49 85 CF		    STA MY
  1306 8D4B 90 04		    BCC BOT_IS_POS_Y ;05 SHOOT UP CARRY STILL SET     
  1307 8D4D			BOT_IS_NEG_Y ;SHOOT_UP
  1308 8D4D A0 01		    LDY #1    
  1309 8D4F D0 04		    BNE CHECK_BOT_X 
  1310 8D51			BOT_IS_POS_Y ;SHOOT_DOWN
  1311 8D51 A0 05		    LDY #5
  1312 8D53 49 FF		    EOR #255
  1313 8D55			CHECK_BOT_X
  1314 8D55 85 C0		    STA M0
  1315 8D57 BD 90 18		    LDA BOTPX,X  ;10
  1316 8D5A 38			    SEC
  1317 8D5B E5 80		    SBC CHARPX   ;05
  1318 8D5D 85 CE		    STA MX
  1319 8D5F 90 1C		    BCC BOT_IS_POS_X ;05 SHOOT RIGHT CARRY STILL SET
  1320 8D61			BOT_IS_NEG_X ;SHOOT_LEFT
  1321 8D61 85 C1		    STA M1
  1322 8D63 C9 10		    CMP #16
  1323 8D65 90 32		    BCC GET_RANDOM_BOLT_DIRECTION    
  1324
  1325 8D67 A5 C0		    LDA M0
  1326 8D69 C9 14		    CMP #20
  1327 8D6B B0 04		    BCS NOT_NEAR_HOZ_ALLIGN_NEG_X
  1328 8D6D A0 07		    LDY #7
  1329 8D6F D0 28		    BNE GET_RANDOM_BOLT_DIRECTION
  1330 8D71			NOT_NEAR_HOZ_ALLIGN_NEG_X    
  1331 8D71 C0 01		    CPY #1
  1332 8D73 D0 04		    BNE SET_Y_6
  1333 8D75 A0 00		    LDY #0
  1334 8D77 F0 20		    BEQ GET_RANDOM_BOLT_DIRECTION
  1335 8D79			SET_Y_6
  1336 8D79 A0 06		    LDY #6
  1337 8D7B D0 1C		    BNE GET_RANDOM_BOLT_DIRECTION      
  1338 8D7D			BOT_IS_POS_X ;SHOOT_RIGHT
  1339 8D7D 49 FF		    EOR #255
  1340 8D7F 85 C1		    STA M1
  1341 8D81 C9 10		    CMP #16
  1342 8D83 90 14		    BCC GET_RANDOM_BOLT_DIRECTION    
  1343
  1344 8D85 A5 C0		    LDA M0
  1345 8D87 C9 14		    CMP #20
  1346 8D89 B0 04		    BCS NOT_NEAR_HOZ_ALLIGN_POS_X
  1347 8D8B A0 03		    LDY #3
  1348 8D8D D0 0A		    BNE GET_RANDOM_BOLT_DIRECTION
  1349 8D8F			NOT_NEAR_HOZ_ALLIGN_POS_X
  1350 8D8F C0 01		    CPY #1
  1351 8D91 D0 04		    BNE SET_Y_4
  1352 8D93 A0 02		    LDY #2
  1353 8D95 D0 02		    BNE GET_RANDOM_BOLT_DIRECTION
  1354 8D97			SET_Y_4    
  1355 8D97 A0 04		    LDY #4  
  1356 8D99			GET_RANDOM_BOLT_DIRECTION
  1357 8D99 84 C0		    STY M0
  1358 8D9B AD 0A D2		    LDA RANDOM
  1359 8D9E 29 0F		    AND #15    
  1360 8DA0 A8			    TAY
  1361 8DA1 A5 C0		    LDA M0
  1362 8DA3 18			    CLC
  1363 8DA4 79 E6 9D		    ADC BOT_SHOOT_RANDOM_CHANGE,Y
  1364 8DA7 29 07		    AND #7
  1365 8DA9 85 C0		    STA M0
  1366 8DAB A0 00		    LDY #0
  1367 8DAD A5 90		    LDA BOT_BOLT_PX + 0
  1368 8DAF F0 05		    BEQ SET_BOT_BOLT_POZ
  1369 8DB1 C8			    INY
  1370 8DB2 A5 91		    LDA BOT_BOLT_PX + 1
  1371 8DB4 D0 20		    BNE NO_BOT_NEW_PROJECTILE
  1372 8DB6			SET_BOT_BOLT_POZ    
  1373 8DB6 BD 90 18		    LDA BOTPX,X
  1374 8DB9 99 90 00		    STA BOT_BOLT_PX,Y
  1375 8DBC BD A0 18		    LDA BOTPY,X
  1376 8DBF 99 92 00		    STA BOT_BOLT_PY,Y
  1377 8DC2 A6 C0		    LDX M0
  1378 8DC4 BD 06 9E		    LDA Bolt_DirectionX,X
  1379 8DC7 99 94 00		    STA BOT_BOLT_DX,Y
  1380 8DCA BD 0E 9E		    LDA Bolt_DirectionY,X
  1381 8DCD 99 96 00		    STA BOT_BOLT_DY,Y 
  1382 8DD0 BD 16 9E		    LDA Bolt_Direction_Image,X 
  1383 8DD3 99 98 00		    STA BOT_BOLT_IM,Y     
  1384 8DD6			NO_BOT_NEW_PROJECTILE
  1385
  1386
  1387 8DD6 AD 1F D0		  	LDA CONSOL
  1388 8DD9 C9 07		    CMP #07
  1389 8DDB F0 06		    BEQ NoPressConsol
  1390 8DDD 8D 32 18		    STA LAST_CONSOLE
  1391 8DE0 4C EF 8D		    JMP SKIP_CHECK_CONSOL	
  1392 8DE3			NoPressConsol
  1393 8DE3 AD 32 18		    LDA LAST_CONSOLE
  1394 8DE6 C9 07		    CMP #7
  1395 8DE8 F0 05		    BEQ SKIP_CHECK_CONSOL     
  1396 8DEA A9 03		    LDA #03		
  1397 8DEC 8D 30 18				STA EXITFLAG                              
  1398 8DEF			SKIP_CHECK_CONSOL
  1399 8DEF A5 DA		    LDA PRESDELAY
  1400 8DF1 F0 02		    BEQ No_GAME_SPACE_Delay
  1401 8DF3 C6 DA		    DEC PRESDELAY
  1402 8DF5			No_GAME_SPACE_Delay     
  1403
  1404 8DF5 A2 0B		    LDX #MAXROBOTS - 1
  1405 8DF7			BOT_CHAR_COLLIDE_LOOP
  1406 8DF7 BD 90 18		    LDA BOTPX,X
  1407 8DFA 38			    SEC
  1408 8DFB E5 80		    SBC CHARPX
  1409 8DFD C9 09		    CMP #09
  1410 8DFF 90 04		    BCC BOT_CHAR_VERTICAL
  1411 8E01 C9 F7		    CMP #247
  1412 8E03 90 17		    BCC BOT_CHAR_NO_COLLIDE     
  1413 8E05			BOT_CHAR_VERTICAL
  1414 8E05 BD A0 18		    LDA BOTPY,X
  1415 8E08 38			    SEC
  1416 8E09 E5 81		    SBC CHARPY
  1417 8E0B C9 12		    CMP #18
  1418 8E0D 90 04		    BCC DO_BOT_CHAR_COLLIDE
  1419 8E0F C9 EE		    CMP #238
  1420 8E11 90 09		    BCC BOT_CHAR_NO_COLLIDE
  1421 8E13			DO_BOT_CHAR_COLLIDE    
  1422 8E13 A9 01		    LDA #1
  1423 8E15 85 84		    STA CHARACTER_STATUS   
  1424 8E17 A9 0E		    LDA #14
  1425 8E19 8D B8 10		    STA SETSP0COLOR+0
  1426 				    
  1427 8E1C			BOT_CHAR_NO_COLLIDE    
  1428 8E1C CA			    DEX
  1429 8E1D 10 D8		    BPL BOT_CHAR_COLLIDE_LOOP 
  1430 				    
  1431 				    
  1432 				    
  1433 				    
  1434 				;    LDA #00
  1435 				;    STA COLBAK
  1436 				    
  1437 				    
  1438 				    
  1439 				    
  1440 				    
  1441 8E1F 60			    RTS
  1442
  1443 8E20			FORCE_FIELD_OFF
  1444 8E20 A2 03		    LDX #3
  1445 8E22 A9 00		    LDA #0
  1446 8E24			ERASE_FIELD_LOOP    
  1447 8E24 9D 70 32		    STA FONT1+78*8+0,X 
  1448 8E27 9D 70 36		    STA FONT2+78*8+0,X 
  1449 8E2A 9D 74 32		    STA FONT1+78*8+4,X 
  1450 8E2D 9D 74 36		    STA FONT2+78*8+4,X 
  1451 8E30 CA			    DEX
  1452 8E31 10 F1		    BPL ERASE_FIELD_LOOP
  1453 8E33 60			    RTS
  1454
  1455
  1456
  1457 8E34			DO_STOP_ROBOT
  1458 8E34 A9 00		    LDA #00
  1459 8E36 9D B0 18		    STA BOTDX,X   
  1460 8E39 9D C0 18		    STA BOTDY,X
  1461 8E3C 60			    RTS
  1462
  1463 8E3D			ROBOT_CHANGE_DIR_90
  1464 8E3D AD 0A D2		    LDA RANDOM
  1465 8E40 29 07		    AND #7 
  1466 8E42 F0 F0		    BEQ DO_STOP_ROBOT
  1467 8E44 09 01		    ORA #1
  1468 8E46			SET_NEW_ROBOT_HEADING
  1469 8E46 29 07		    AND #7    
  1470 8E48 A8			    TAY    
  1471 8E49 B9 F6 9D		    LDA GetRandomDirectionX,Y
  1472 8E4C 9D B0 18		    STA BOTDX,X 
  1473 8E4F B9 FE 9D		    LDA GetRandomDirectionY,Y
  1474 8E52 9D C0 18		    STA BOTDY,X
  1475 8E55			CHANGE_DIR_90_DONE
  1476 8E55 60			    RTS
  1477
  1478 8E56			ROBOT_CHANGE_DIR_45
  1479 8E56 AD 0A D2		    LDA RANDOM
  1480 8E59 29 0F		    AND #15
  1481 8E5B C9 0C		    CMP #12
  1482 8E5D B0 D5		    BCS DO_STOP_ROBOT
  1483 8E5F 4C 46 8E		    JMP SET_NEW_ROBOT_HEADING    
  1484
  1485 8E62			ROBOT_CHANGE_DIANGLE
  1486 8E62 AD 0A D2		    LDA RANDOM
  1487 8E65 29 07		    AND #7 
  1488 8E67 F0 CB		    BEQ DO_STOP_ROBOT
  1489 8E69 29 06		    AND #6
  1490 8E6B 4C 46 8E		    JMP SET_NEW_ROBOT_HEADING
  1491 				    
  1492 8E6E			ROBOT_CHANGE_HEADING
  1493 8E6E BD F0 18		    LDA BOTD2,X
  1494 8E71 D0 0E		    BNE CHANGE_HEADING_NOT_00
  1495 8E73 AD 0A D2		    LDA RANDOM
  1496 8E76 29 07		    AND #7
  1497 8E78 A8			    TAY
  1498 8E79 09 80		    ORA #128
  1499 8E7B 9D F0 18		    STA BOTD2,X
  1500 8E7E 4C 46 8E		    JMP SET_NEW_ROBOT_HEADING
  1501 8E81			CHANGE_HEADING_NOT_00
  1502 8E81 AD 0A D2		    LDA RANDOM
  1503 8E84 30 01		    BMI DO_CHANGE_HEADING_45
  1504 8E86 60			    RTS
  1505 8E87			DO_CHANGE_HEADING_45    
  1506 8E87 29 03		    AND #3
  1507 8E89 A8			    TAY
  1508 8E8A BD F0 18		    LDA BOTD2,X
  1509 8E8D 18			    CLC
  1510 8E8E 79 90 9C		    ADC MINUS_PLUS_STICK,Y
  1511 8E91			BOT_HEADING_AFTER_SCREEN_EDGE
  1512 8E91 29 07		    AND #7
  1513 8E93 09 80		    ORA #128
  1514 8E95 9D F0 18		    STA BOTD2,X
  1515 8E98 4C 46 8E		    JMP SET_NEW_ROBOT_HEADING     
  1516
  1517
  1518 8E9B			Draw_Room
  1519 8E9B A2 04		    LDX #4
  1520 8E9D			Clear_Zone_loop
  1521 8E9D 95 D4		    STA :ZONEFN,X
  1522 8E9F CA			    DEX
  1523 8EA0 10 FB		    BPL Clear_Zone_loop
  1524 				;    STA APPEARCODE
  1525 				;    STA SEQNDX       
  1526 				;    STA SQUARERESETTIME
  1527 8EA2 20 D0 39		    JSR Clear_Screen
  1528 8EA5 20 20 8E		    JSR FORCE_FIELD_OFF			
  1529 				;		JSR Clear_Text_Lines    
  1530 8EA8 A9 FF				LDA #255
  1531 				;		STA TreasureInRoom
  1532 				;		sta DoorKeyRequire    
  1533 8EAA A9 00		    lda #$00
  1534 8EAC 8D 00 D4				sta DMACTL
  1535 				    
  1536 8EAF A9 2E				lda #$2E	
  1537 				;		sta SPRTSCRH	 
  1538
  1539
  1540
  1541 8EB1 A9 43		      LDA #67
  1542 8EB3 85 C8		      STA M8
  1543
  1544 8EB5 A4 D0		      LDY ROOMNO
  1545 8EB7 B9 00 19		      LDA ROOMDOORSET,Y
  1546 8EBA 29 0F		      AND #15
  1547 				      
  1548 8EBC 85 C5		      STA M5
  1549 8EBE			Check_Top_Open
  1550 8EBE 46 C5		      LSR M5 
  1551 8EC0 90 19		      BCC No_Top_Open
  1552 8EC2			Is_Top_Open
  1553 8EC2 A9 03		      LDA #03
  1554 8EC4 85 C7		      sta M7 
  1555 8EC6 A2 00		      LDX #0
  1556 8EC8 A0 0C		      LDY #12
  1557 8ECA 20 E9 39		      jsr DRAWHOZWALL
  1558 8ECD A9 21		      LDA #33
  1559 8ECF 85 C7		      sta M7
  1560 8ED1 A2 00		      LDX #0
  1561 8ED3 A0 0C		      LDY #12      
  1562 8ED5 20 E9 39		      jsr DRAWHOZWALL
  1563 8ED8 4C E6 8E		      JMP Check_Right_Open
  1564 8EDB			No_Top_Open
  1565 8EDB A9 03		      LDA #03
  1566 8EDD 85 C7		      sta M7
  1567 8EDF A2 00		      LDX #0
  1568 8EE1 A0 2A		      LDY #42      
  1569 8EE3 20 E9 39		      jsr DRAWHOZWALL
  1570 				      
  1571 				      
  1572 8EE6			Check_Right_Open
  1573 				      
  1574 8EE6 46 C5		      LSR M5
  1575 8EE8 90 19		      BCC No_Right_Open
  1576 8EEA			Is_Right_Open
  1577 8EEA A9 2C		      LDA #44
  1578 8EEC 85 C7		      sta M7 
  1579 8EEE A2 00		      LDX #0
  1580 8EF0 A0 06		      LDY #06
  1581 8EF2 20 03 3A		      jsr DRAWVRTWALL
  1582 8EF5 A9 2C		      LDA #44
  1583 8EF7 85 C7		      sta M7 
  1584 8EF9 A2 14		      LDX #20
  1585 8EFB A0 06		      LDY #06      
  1586 8EFD 20 03 3A		      jsr DRAWVRTWALL
  1587 8F00 4C 0E 8F		      JMP Check_Bottom_Open
  1588 8F03			No_Right_Open
  1589 8F03 A9 2C		      LDA #44
  1590 8F05 85 C7		      sta M7 
  1591 8F07 A2 00		      LDX #00
  1592 8F09 A0 1A		      LDY #26
  1593 8F0B 20 03 3A		      jsr DRAWVRTWALL
  1594
  1595 8F0E			Check_Bottom_Open
  1596
  1597 8F0E 46 C5		      LSR M5
  1598 8F10 90 19		      BCC No_Bottom_Open
  1599 8F12			Is_Bottom_Open
  1600 8F12 A9 03		      LDA #03
  1601 8F14 85 C7		      sta M7 
  1602 8F16 A2 1A		      LDX #26
  1603 8F18 A0 0C		      LDY #12
  1604 8F1A 20 E9 39		      jsr DRAWHOZWALL
  1605 8F1D A9 21		      LDA #33
  1606 8F1F 85 C7		      sta M7
  1607 8F21 A2 1A		      LDX #26
  1608 8F23 A0 0C		      LDY #12      
  1609 8F25 20 E9 39		      jsr DRAWHOZWALL
  1610 8F28 4C 36 8F		      JMP Check_Left_Open
  1611 8F2B			No_Bottom_Open
  1612 8F2B A9 03		      LDA #03
  1613 8F2D 85 C7		      sta M7
  1614 8F2F A2 1A		      LDX #26
  1615 8F31 A0 2A		      LDY #42      
  1616 8F33 20 E9 39		      jsr DRAWHOZWALL
  1617 8F36			Check_Left_Open      
  1618 8F36 46 C5		      LSR M5
  1619 8F38 90 19		      BCC No_Left_Open
  1620 8F3A			Is_Left_Open
  1621 8F3A A9 03		      LDA #03
  1622 8F3C 85 C7		      sta M7 
  1623 8F3E A2 00		      LDX #0
  1624 8F40 A0 06		      LDY #06
  1625 8F42 20 03 3A		      jsr DRAWVRTWALL
  1626 8F45 A9 03		      LDA #03
  1627 8F47 85 C7		      sta M7 
  1628 8F49 A2 14		      LDX #20
  1629 8F4B A0 06		      LDY #06      
  1630 8F4D 20 03 3A		      jsr DRAWVRTWALL
  1631 8F50 4C 5E 8F		      JMP Check_Open_Done
  1632 8F53			No_Left_Open
  1633 8F53 A9 03		      LDA #03
  1634 8F55 85 C7		      sta M7 
  1635 8F57 A2 00		      LDX #00
  1636 8F59 A0 1A		      LDY #26
  1637 8F5B 20 03 3A		      jsr DRAWVRTWALL
  1638 8F5E			Check_Open_Done
  1639 8F5E A5 D0		      LDA ROOMNO
  1640 8F60 4A			      LSR
  1641 8F61 4A			      LSR
  1642 8F62 4A			      LSR
  1643 8F63 4A			      LSR
  1644 8F64 A8			      TAY
  1645 				            
  1646 8F65			Get_Room_Address
  1647 8F65 A4 D0		    LDY ROOMNO
  1648 8F67 B9 00 19		    LDA ROOMDOORSET,Y
  1649 8F6A 29 F0		    AND #240
  1650 8F6C 4A			    LSR @
  1651 8F6D 4A			    LSR @
  1652 8F6E 4A			    LSR @ 
  1653 8F6F 4A			    LSR @
  1654 8F70 A8			    TAY		
  1655 8F71 B9 D2 A0		    lda :ROOM_PATTERN_ADDRLO,Y	
  1656 8F74 85 CC				sta NDX2		
  1657 8F76 B9 E2 A0				lda :ROOM_PATTERN_ADDRHI,Y	
  1658 8F79 85 CD				sta NDX3
  1659 8F7B A9 00				LDA #0
  1660 8F7D A0 05		    LDY #5
  1661 8F7F			ClearRobotTypeLoop
  1662 				;		STA MONSTERTYPE,Y
  1663 8F7F 88			    DEY
  1664 8F80 10 FD		    BPL ClearRobotTypeLoop
  1665 8F82 A9 00		    LDA #0
  1666 8F84 85 C1		    STA M1		
  1667 8F86			RoomAppearPart    
  1668 8F86 A9 E8				LDA #$E8
  1669 8F88 85 C0				STA M0
  1670 8F8A A0 00				LDY #$00		
  1671 8F8C 84 D2				STY ROOMNDX		
  1672 8F8E			Draw_Room_Loop
  1673 8F8E B1 CC				LDA (NDX2),Y	
  1674 8F90 C9 FF				CMP #RXX
  1675 8F92 D0 03		    BNE No_Draw_Room_Exit
  1676 8F94 4C 76 90				JMP Draw_Room_Done     
  1677
  1678 = 0001			SET = 01
  1679 = 0002			CHR = 02
  1680 = 0003			BLK = 03
  1681 = 0004			OUL = 04
  1682 = 0005			HLN = 05
  1683 = 0006			VLN = 06
  1684 = 0007			LDR = 07
  1685 = 0008			RBD = 08
  1686 = 0009			ZON = 09
  1687 = 000A			TRG = 10
  1688 = 000B			PLT = 11
  1689 = 000F			AED = 15
  1690 = 00FF			RXX = 255
  1691
  1692
  1693 8F97			No_Draw_Room_Exit
  1694 8F97 C8			      INY		
  1695 8F98 AA			      TAX
  1696 8F99 BD A2 8F		      LDA DRAW_ROOM_JUMP_LO,X
  1697 8F9C 48			      PHA
  1698 8F9D BD AE 8F		      LDA DRAW_ROOM_JUMP_HI,X
  1699 8FA0 48			      PHA               
  1700 8FA1			Do_Appear_Exit            
  1701 8FA1 60			      RTS
  1702 8FA2			DRAW_ROOM_JUMP_LO
  1703 8FA2 8F			      DTA >(Draw_Room_Loop-1)
  1704 8FA3 8F 8F 8F 8F 8F 8F +       DTA >(CT_01-1),>(CT_02-1),>(CT_03-1),>(CT_04-1),>(CT_05-1),>(CT_06-1),>(CT_07-1),>(CT_08-1),>(CT_09-1),>(CT_10-1)
  1705 8FAD 90			      DTA >(CT_11-1)
  1706 8FAE			DRAW_ROOM_JUMP_HI
  1707 8FAE 8D			      DTA <(Draw_Room_Loop-1)
  1708 8FAF B9 C0 DB E9 EF FB +       DTA <(CT_01-1),<(CT_02-1),<(CT_03-1),<(CT_04-1),<(CT_05-1),<(CT_06-1),<(CT_07-1),<(CT_08-1),<(CT_09-1),<(CT_10-1)
  1709 8FB9 43			      DTA <(CT_11-1)        
  1710
  1711
  1712 8FBA			CT_01 
  1713 				;    cmp #:SET ;Set Draw Char
  1714 				;    bne CT_02
  1715 8FBA B1 CC		    LDA (NDX2),Y
  1716 8FBC 85 C8		    STA M8
  1717 8FBE 4C 5F 90		    JMP Add2toNDX
  1718
  1719 8FC1			CT_02
  1720 				;		cmp #:CHR ;Put Tile Char
  1721 				;		bne CT_03 
  1722 8FC1 20 EE 90				JSR Get_Screen_Positions		
  1723 8FC4 BD 00 10				lda SCREEN_LINE_ADDR_LOW,X
  1724 8FC7 18					clc	
  1725 8FC8 65 C7				adc M7	
  1726 8FCA 85 CA				sta NDX0
  1727 8FCC BD 20 10				lda SCREEN_LINE_ADDR_HIGH,X
  1728 8FCF 69 00				adc #$00	
  1729 8FD1 85 CB				sta NDX1	
  1730 8FD3 B1 CC				lda (NDX2),Y	
  1731 8FD5 A0 00				ldy #$00
  1732 8FD7 91 CA				sta (NDX0),Y	
  1733 8FD9 4C 6B 90				jmp Add4toNDX	
  1734
  1735 8FDC			CT_03		
  1736 				;   cmp #:BLK ;Draw_Block
  1737 				;		bne CT_04
  1738 8FDC 20 EE 90				JSR Get_Screen_Positions
  1739 8FDF B1 CC				lda (NDX2),Y	
  1740 8FE1 20 F8 90				jsr Get_Rectangle_Dimensions	
  1741 8FE4 20 2B 3A				jsr DRAWBLOCK		
  1742 8FE7 4C 6B 90				jmp Add4toNDX
  1743
  1744 8FEA			CT_04
  1745 				;		cmp #:OUL; OutLine
  1746 				;		bne CT_05
  1747 8FEA 20 0B 91		 		JSR Draw_Room_Outline
  1748 8FED 4C 58 90				JMP IncNDX
  1749
  1750 8FF0			CT_05
  1751 				;		cmp #:HLN; Horizontal Line
  1752 				;		bne CT_06
  1753 8FF0 20 EE 90				JSR Get_Screen_Positions
  1754 8FF3 B1 CC				lda (NDX2),Y
  1755 8FF5 A8					tay
  1756 8FF6 20 E9 39				jsr DRAWHOZWALL
  1757 8FF9 4C 6B 90		    JMP Add4toNDX
  1758 8FFC			CT_06
  1759 				;		cmp #:VLN; Verticle Line
  1760 				;		bne CT_07
  1761 8FFC 20 EE 90				JSR Get_Screen_Positions
  1762 8FFF B1 CC				lda (NDX2),Y
  1763 9001 A8					tay
  1764 9002 20 03 3A				jsr DRAWVRTWALL
  1765 9005 4C 6B 90		    JMP Add4toNDX
  1766 9008			CT_07 
  1767 				;		cmp #:LDR; Locked Door
  1768 				;		bne CT_08
  1769 9008 B1 CC				lda (NDX2),Y		
  1770 				;    STA DoorKeyRequire
  1771 900A AA					TAX
  1772 				;		LDA DoorStatus,X
  1773 900B F0 05				BEQ DoorIsLocked
  1774 900D A9 0B				lda #11
  1775 900F 4C 6D 90				jmp AddRoomInstrNDX
  1776 9012			DoorIsLocked
  1777 9012 4C 5F 90		    JMP Add2toNDX
  1778 9015			CT_08 		
  1779 				;   cmp #:RBD; Robot Data
  1780 				;		bne CT_09
  1781 				;		jsr Get_Robot_Data
  1782 9015 A9 10				lda #16
  1783 9017 4C 6D 90				jmp AddRoomInstrNDX
  1784 901A			CT_09
  1785 				;    cmp #:ZON; Set Special Zone
  1786 				;    bne CT_10
  1787 901A A2 00		    LDX #0
  1788 901C			Copy_Zone_Data_loop
  1789 901C B1 CC		    LDA (NDX2),Y
  1790 				 ;   STA :ZONEFN,X
  1791 901E E8			    INX
  1792 901F C8			    INY
  1793 9020 E0 05		    CPX #5
  1794 9022 90 F8		    BCC Copy_Zone_Data_loop
  1795 9024 A9 06		    LDA #6
  1796 9026 4C 6D 90		    jmp AddRoomInstrNDX 
  1797
  1798 9029			CT_10
  1799 				;    cmp #:TRG ; Trigger Start. 
  1800 				;    BNE CT_11
  1801 9029 A6 D0		    LDX ROOMNO
  1802 				 ;   LDA ROOMSTATUS,X
  1803 902B 30 12		    BMI AppearTriggered
  1804 902D A2 00		    LDX #0
  1805 902F			CopyAppearDataLoop
  1806 				;    lda (NDX2),Y
  1807 				;    sta APPEARROOM,X
  1808 				;    CMP #:AED
  1809 902F B0 09		    BCS CopyAppearEnd
  1810 9031 E8			    INX
  1811 9032 E0 20		    CPX #32
  1812 9034 B0 04		    BCS CopyAppearEnd 
  1813 9036 C8			    INY
  1814 9037 4C 2F 90		    JMP CopyAppearDataLoop 
  1815 903A			CopyAppearEnd    
  1816 903A E8			    INX
  1817 903B 8A			    TXA
  1818 				;    LDA #1
  1819 903C 4C 6D 90		    JMP AddRoomInstrNDX
  1820 903F			AppearTriggered
  1821 903F A9 01		    LDA #1
  1822 9041 4C 6D 90		    JMP AddRoomInstrNDX
  1823 				     
  1824 9044			CT_11    
  1825 				 ;   CMP #:PLT; 25;Set Color Palette
  1826 				 ;   BNE CT_12
  1827 9044 B1 CC		    LDA (NDX2),Y
  1828 9046 29 07		    AND #7
  1829 9048 AA			    TAX
  1830 				   
  1831 9049 BD B4 9D		    LDA :PALETTE_COLOR_0,X
  1832 				;    STA :COLPF0
  1833 904C BD B4 9D		    LDA :PALETTE_COLOR_1,X
  1834 				;    STA :COLPF1
  1835 904F BD B4 9D		    LDA :PALETTE_COLOR_2,X
  1836 				;    STA :COLPF2
  1837 9052 BD B4 9D		    LDA :PALETTE_COLOR_3,X
  1838 				;    STA :COLPF3
  1839
  1840 9055 4C 5F 90		    JMP Add2toNDX 
  1841
  1842 9058			IncNDX
  1843 9058 E6 D2		    INC ROOMNDX
  1844 905A A4 D2		    LDY ROOMNDX
  1845 905C 4C 8E 8F		    JMP Draw_Room_Loop     
  1846 				    
  1847 905F			Add2toNDX
  1848 905F A9 02				LDA #$02    
  1849 9061 D0 0A		    BNE AddRoomInstrNDX
  1850 9063			Add3toNDX
  1851 9063 A9 03				LDA #$03
  1852 9065 D0 06		    BNE AddRoomInstrNDX
  1853 9067			Add5toNDX
  1854 9067 A9 05				LDA #$05
  1855 9069 D0 02		    BNE AddRoomInstrNDX
  1856 906B			Add4toNDX
  1857 906B A9 04				lda #$04
  1858 906D			AddRoomInstrNDX
  1859 906D 18					CLC		
  1860 906E 65 D2				ADC ROOMNDX	
  1861 9070 85 D2				STA ROOMNDX    	
  1862 9072 A8					TAY		
  1863 9073 4C 8E 8F				JMP Draw_Room_Loop	
  1864 9076			Draw_Room_Done
  1865 9076 A0 0F		    LDY #15
  1866 9078			ResetMultiPlexLoop
  1867 9078 BE 43 3C		    LDX PLAYER_ADDR_LIST,Y
  1868 907B A9 00		    LDA #0
  1869 907D 9D 9E 38		    STA LOADPLYRADDRLO,X
  1870 9080 A9 30		    LDA #>font1
  1871 9082 9D 9F 38		    STA LOADPLYRADDRHI,X
  1872 9085 A9 80		    LDA #128
  1873 9087 9D A1 38		    STA STORPLYR0ADDRLO,X
  1874 908A A9 13		    LDA #>MIBANK
  1875 908C 9D A2 38		    STA STORPLYR0ADDRHI,X
  1876 908F 88			    DEY
  1877 9090 10 E6		    BPL ResetMultiPlexLoop
  1878 9092 20 99 90		    JSR Get_Robot_Data
  1879 9095 20 94 39		 		JSR CLEAR_SPRITE_MEMORY
  1880 9098 60			    RTS
  1881
  1882
  1883
  1884 9099			Get_Robot_Data
  1885 9099 A4 D0		    LDY ROOMNO
  1886 909B A2 0B		    LDX #11    
  1887 909D A9 80		    LDA #<ROOMBOTTYP0
  1888 909F 85 CA		    STA NDX0
  1889 90A1 A9 19		    LDA #>ROOMBOTTYP0
  1890 90A3 85 CB		    STA NDX1
  1891 90A5 A9 C0		    LDA #<ROOMBOTLOC0
  1892 90A7 85 CC		    STA NDX2
  1893 90A9 A9 1C		    LDA #>ROOMBOTLOC0
  1894 90AB 85 CD		    STA NDX3
  1895
  1896 90AD			Get_Robot_Data_Loop
  1897 90AD A4 D0		    LDY ROOMNO
  1898 90AF B1 CA		    LDA (NDX0),Y
  1899 90B1 29 0F		    AND #15
  1900 90B3 9D 70 18		    STA BOTTYPE,X
  1901 90B6 B1 CC		    LDA (NDX2),Y
  1902 90B8 85 C0		    STA M0
  1903 90BA 29 0F		    AND #15
  1904 90BC A8			    TAY
  1905 90BD B9 B4 9D		    LDA START_POSITION_HOZ,Y
  1906 90C0 9D 90 18		    STA BOTPX,X
  1907 90C3 A5 C0		    LDA M0
  1908 90C5 4A			    LSR @
  1909 90C6 4A			    LSR @
  1910 90C7 4A			    LSR @
  1911 90C8 4A			    LSR @
  1912 90C9 A8			    TAY
  1913 90CA B9 C4 9D		    LDA START_POSITION_VRT,Y
  1914 90CD 9D A0 18		    STA BOTPY,X
  1915
  1916 90D0 A5 CA		    LDA NDX0
  1917 90D2 18			    CLC
  1918 90D3 69 40		    ADC #$40
  1919 90D5 85 CA		    STA NDX0
  1920 90D7 A5 CB		    LDA NDX1
  1921 90D9 69 00		    ADC #0
  1922 90DB 85 CB		    STA NDX1
  1923
  1924 90DD A5 CC		    LDA NDX2
  1925 90DF 18			    CLC
  1926 90E0 69 40		    ADC #$40
  1927 90E2 85 CC		    STA NDX2
  1928 90E4 A5 CD		    LDA NDX3
  1929 90E6 69 00		    ADC #0
  1930 90E8 85 CD		    STA NDX3
  1931
  1932 90EA CA			    DEX
  1933 				    
  1934 90EB 10 C0		    BPL Get_Robot_Data_Loop
  1935 90ED 60			    RTS
  1936
  1937
  1938 90EE			Get_Screen_Positions
  1939 90EE B1 CC				lda (NDX2),Y	
  1940 90F0 85 C7				sta M7		
  1941 90F2 C8					iny
  1942 90F3 B1 CC				lda (NDX2),Y
  1943 90F5 AA					tax		
  1944 90F6 C8					iny
  1945 90F7 60					RTS
  1946 				    
  1947 90F8			Get_Rectangle_Dimensions	
  1948 90F8 18			  	clc
  1949 90F9 A8					tay			
  1950 90FA 29 0F				and #$0F
  1951 90FC 69 01				adc #$01
  1952 90FE 85 C6				sta M6	
  1953 9100 98					tya			
  1954 9101 4A					lsr @		
  1955 9102 4A					lsr @		
  1956 9103 4A					lsr @			
  1957 9104 4A					lsr @			
  1958 9105 18					clc				
  1959 9106 69 01				adc #$01	
  1960 9108 85 C9				sta M9		
  1961 910A 60					rts				
  1962
  1963 				    
  1964 910B			Draw_Room_Outline
  1965 910B A0 29				ldy #41
  1966 910D A5 C8				lda M8
  1967 910F			Outline_Top_loop
  1968 910F 99 03 05				sta SCREEN + 0003,Y
  1969 9112 99 E3 09		   	sta SCREEN + 1251,Y	
  1970 9115 88					dey			
  1971 9116 10 F7				bpl Outline_Top_loop
  1972 9118 A2 19				LDX #25
  1973 911A			Outline_Side_Loop
  1974 911A BD 00 10				lda SCREEN_LINE_ADDR_LOW,X
  1975 911D 85 CA				sta NDX0
  1976 911F BD 20 10				lda SCREEN_LINE_ADDR_HIGH,X
  1977 9122 85 CB				sta NDX1
  1978 9124 A5 C8				LDA M8
  1979 9126 A0 03				ldy #03
  1980 9128 91 CA				sta (NDX0),Y
  1981 912A A0 2C				ldy #44
  1982 912C 91 CA				sta (NDX0),Y
  1983 912E CA					dex		
  1984 912F D0 E9				bne Outline_Side_Loop	
  1985 9131 60					rts		
  1986 				    
  1987
  1988 9132			MAKE_NEW_LEVEL
  1989 				        
  1990 9132			MAKE_ROOM_MAZE
  1991 9132 A0 3F		    LDY #63
  1992 9134 A9 00		    LDA #0
  1993 9136			CLEAR_ROOMSET_LOOP
  1994 9136 99 00 19		    STA ROOMDOORSET,Y
  1995 9139 99 00 1A		    STA BUFFER+000, Y
  1996 913C 99 40 1A		    STA BUFFER+064, Y
  1997 913F 99 80 1A		    STA BUFFER+128, Y
  1998 9142 99 C0 1A		    STA BUFFER+192, Y
  1999 9145 88			    DEY 
  2000 9146 10 EE		    BPL CLEAR_ROOMSET_LOOP
  2001 9148 A9 1C		    LDA #28
  2002 914A 85 D0		    STA ROOMNO
  2003 914C A2 00		    LDX #0 ;X WILL BE INDEX BUFFER
  2004 914E 9D 00 1A		    STA BUFFER,X
  2005 9151 E8			    INX      
  2006 				      
  2007 9152 AD 0A D2		  LDA RANDOM
  2008 9155 29 03		  AND #3
  2009 9157 A8			  TAY
  2010 9158 B9 4F 93		  LDA ROOMMAKE_DIRECTION_ADD,Y
  2011 915B 85 87		  STA DX
  2012 915D A9 00		  LDA #0
  2013 915F 85 88		  STA DY
  2014
  2015 9161			MAKE_ROOMMAZE_LOOP
  2016 9161 A4 D0		  LDY ROOMNO
  2017 9163 A9 0F		  LDA #15
  2018 9165 85 C3		  STA M3
  2019 9167 B9 00 19		  LDA ROOMDOORSET,Y
  2020 916A 85 C2		  STA M2
  2021 916C 98			  TYA
  2022 916D 18			  CLC 
  2023 916E 65 87		  ADC DX
  2024 9170 A8			  TAY
  2025 9171 B9 00 19		  LDA ROOMDOORSET,Y
  2026 9174 D0 4E		  BNE GOTO_FIND_NEW_START_POINT
  2027 9176 85 C3		  STA M3 
  2028
  2029 9178			CHECK_MAKE_MOVE_LEFT
  2030 9178 A5 87		  LDA DX
  2031 917A C9 FF		  CMP #255
  2032 917C D0 21		  BNE CHECK_MAKE_MOVE_RIGHT 
  2033 				; MOVING LEFT  
  2034 917E A5 D0		  LDA ROOMNO
  2035 9180 29 07		  AND #7
  2036 9182 C9 00		  CMP #0 
  2037 9184 F0 3E		  BEQ GOTO_FIND_NEW_START_POINT
  2038 				;  LDA M3
  2039 				;  BNE GOTO_FIND_NEW_START_POINT
  2040 9186 A5 C2		  LDA M2
  2041 9188 29 08		  AND #8
  2042 918A D0 38		  BNE GOTO_FIND_NEW_START_POINT 
  2043 				;       IF P1&8=0 AND P2=64
  2044 				;         POKE TC+X+Y,P1!8
  2045 				;         POKE TC+X+DX+Y,P2!2
  2046 918C A5 C3		  LDA M3
  2047 918E 09 02		  ORA #2
  2048 9190 99 00 19		  STA ROOMDOORSET,Y
  2049 9193 A4 D0		  LDY ROOMNO
  2050 9195 A5 C2		  LDA M2
  2051 9197 09 08		  ORA #8
  2052 9199 99 00 19		  STA ROOMDOORSET,Y
  2053 				    
  2054 919C 4C 0D 92		  JMP ADD_ROOMMAKE_POINT 
  2055
  2056 919F			CHECK_MAKE_MOVE_RIGHT
  2057 919F C9 01		  CMP #1
  2058 91A1 D0 24		  BNE CHECK_MAKE_MOVE_UP
  2059
  2060 91A3 A5 D0		  LDA ROOMNO
  2061 91A5 29 07		  AND #7 
  2062 91A7 C9 07		  CMP #7
  2063 91A9 F0 19		  BEQ GOTO_FIND_NEW_START_POINT
  2064 				;  LDA M3
  2065 				;  BNE GOTO_FIND_NEW_START_POINT
  2066 91AB A5 C2		  LDA M2
  2067 91AD 29 02		  AND #2
  2068 91AF D0 13		  BNE GOTO_FIND_NEW_START_POINT 
  2069
  2070 91B1 A5 C3		  LDA M3
  2071 91B3 09 08		  ORA #8
  2072 91B5 99 00 19		  STA ROOMDOORSET,Y
  2073 91B8 A4 D0		  LDY ROOMNO
  2074 91BA A5 C2		  LDA M2
  2075 91BC 09 02		  ORA #2
  2076 91BE 99 00 19		  STA ROOMDOORSET,Y
  2077 91C1 4C 0D 92		  JMP ADD_ROOMMAKE_POINT
  2078 91C4			GOTO_FIND_NEW_START_POINT
  2079 91C4 4C 47 92		  JMP FIND_NEW_START_POINT    
  2080 91C7			MAKE_NOT_AT_RIGHT
  2081
  2082
  2083 91C7			CHECK_MAKE_MOVE_UP
  2084 91C7 C9 F8		  CMP #248
  2085 91C9 D0 1F		  BNE CHECK_MAKE_MOVE_DOWN
  2086 				  
  2087 91CB A5 D0		  LDA ROOMNO
  2088 91CD C9 08		  CMP #8
  2089 91CF 90 76		  BCC FIND_NEW_START_POINT
  2090 				;  LDA M3
  2091 				;  BNE FIND_NEW_START_POINT
  2092 91D1 A5 C2		  LDA M2
  2093 91D3 29 01		  AND #1
  2094 91D5 D0 70		  BNE FIND_NEW_START_POINT
  2095
  2096 91D7 A5 C3		  LDA M3
  2097 91D9 09 04		  ORA #4
  2098 91DB 99 00 19		  STA ROOMDOORSET,Y
  2099 91DE A4 D0		  LDY ROOMNO
  2100 91E0 A5 C2		  LDA M2
  2101 91E2 09 01		  ORA #1
  2102 91E4 99 00 19		  STA ROOMDOORSET,Y 
  2103 				   
  2104 91E7 4C 0D 92		  JMP ADD_ROOMMAKE_POINT
  2105 91EA			MAKE_NOT_AT_TOP
  2106
  2107 91EA			CHECK_MAKE_MOVE_DOWN
  2108 91EA C9 08		  CMP #8
  2109 91EC D0 1F		  BNE NO_MAKE_MOVE_DOWN
  2110 91EE A5 D0		  LDA ROOMNO
  2111 91F0 C9 38		  CMP #56
  2112 91F2 B0 53		  BCS FIND_NEW_START_POINT
  2113 				;  LDA M3
  2114 				;  BNE FIND_NEW_START_POINT
  2115 91F4 A5 C2		  LDA M2
  2116 91F6 29 04		  AND #4
  2117 91F8 D0 4D		  BNE FIND_NEW_START_POINT
  2118 				  
  2119 91FA A5 C3		  LDA M3
  2120 91FC 09 01		  ORA #1
  2121 91FE 99 00 19		  STA ROOMDOORSET,Y
  2122 9201 A4 D0		  LDY ROOMNO
  2123 9203 A5 C2		  LDA M2
  2124 9205 09 04		  ORA #4
  2125 9207 99 00 19		  STA ROOMDOORSET,Y
  2126 				   
  2127 920A 4C 0D 92		  JMP ADD_ROOMMAKE_POINT
  2128 920D			NO_MAKE_MOVE_DOWN
  2129 				      
  2130 920D			ADD_ROOMMAKE_POINT
  2131 920D A5 D0		      LDA ROOMNO      
  2132 920F 18			      CLC
  2133 9210 65 87		      ADC DX
  2134 9212 85 D0		      STA ROOMNO
  2135 9214 9D 00 1A		      STA BUFFER,X
  2136 9217 E8			      INX      
  2137
  2138 9218 E0 FE		      CPX #254
  2139 921A B0 2B		      BCS FIND_NEW_START_POINT
  2140
  2141 921C AD 0A D2		      LDA RANDOM
  2142 921F C9 40		      CMP #64
  2143 9221 B0 21		      BCS NO_MAKE_DIRCHANGE
  2144 9223			GET_MAKE_DIR_AGAIN
  2145 9223 A5 87		      LDA DX
  2146 9225 C9 01		      CMP #1
  2147 9227 F0 10		      BEQ DIRCHANGE_VERT
  2148 9229 C9 FF		      CMP #255
  2149 922B F0 0C		      BEQ DIRCHANGE_VERT
  2150 922D			DIRCHANGE_HOZ
  2151 922D AD 0A D2		      LDA RANDOM
  2152 9230 29 02		      AND #2
  2153 9232 A8			      TAY
  2154 9233 B9 50 93		      LDA ROOMMAKE_DIRECTION_ADD + 1,Y
  2155 9236 4C 42 92		      JMP SET_NEW_DIRCHANGE                         
  2156 9239			DIRCHANGE_VERT
  2157 9239 AD 0A D2		      LDA RANDOM
  2158 923C 29 02		      AND #2
  2159 923E A8			      TAY
  2160 923F B9 4F 93		      LDA ROOMMAKE_DIRECTION_ADD + 0,Y
  2161 9242			SET_NEW_DIRCHANGE       
  2162 9242 85 87		      STA DX      
  2163 9244			NO_MAKE_DIRCHANGE
  2164 9244 4C 61 91		      JMP MAKE_ROOMMAZE_LOOP            
  2165
  2166 9247			FIND_NEW_START_POINT
  2167 9247 86 C3		    STX M3
  2168 9249 E0 00		    CPX #00
  2169 924B D0 03		    BNE DATA_STILL_IN_BUFFER
  2170 924D 4C 2E 93		    JMP BUFFER_NDX_0
  2171 9250			DATA_STILL_IN_BUFFER    
  2172 9250 A9 FF		    LDA #255
  2173 9252 E0 7F		    CPX #127
  2174 9254 B0 1A		    BCS SAVE_START_POINT_RANDOM_MASK
  2175 9256 A9 7F		    LDA #127
  2176 9258 E0 3F		    CPX #63
  2177 925A B0 14		    BCS SAVE_START_POINT_RANDOM_MASK
  2178 925C A9 3F		    LDA #63
  2179 925E E0 1F		    CPX #31
  2180 9260 B0 0E		    BCS SAVE_START_POINT_RANDOM_MASK
  2181 9262 A9 1F		    LDA #31
  2182 9264 E0 0F		    CPX #15
  2183 9266 B0 08		    BCS SAVE_START_POINT_RANDOM_MASK
  2184 9268 A9 0F		    LDA #15  
  2185 926A E0 01		    CPX #1
  2186 926C B0 02		    BCS SAVE_START_POINT_RANDOM_MASK
  2187 926E A9 01		    LDA #1
  2188 9270			SAVE_START_POINT_RANDOM_MASK    
  2189 9270 85 C5		    STA M5    
  2190 9272 A0 0F		    LDY #15
  2191 9274			FIND_ANOTHER_START_POINT
  2192 9274 88			    DEY
  2193 9275 10 04		    BPL NO_TRIES_START_POINT_0
  2194
  2195 9277 A9 00		    LDA #0
  2196 9279 F0 09		    BEQ FOUND_NEW_START_POINT 
  2197 927B			NO_TRIES_START_POINT_0    
  2198 927B AD 0A D2		    LDA RANDOM
  2199 927E 25 C5		    AND M5
  2200 9280 C5 C3		    CMP M3
  2201 9282 B0 F0		    BCS FIND_ANOTHER_START_POINT
  2202 9284			FOUND_NEW_START_POINT
  2203 9284 A8			    TAY              
  2204 9285 84 C2		    STY M2        
  2205 9287 B9 00 1A		    LDA BUFFER,Y    
  2206 928A 85 D0		    STA ROOMNO    
  2207 928C AD 0A D2		    LDA RANDOM
  2208 928F 29 03		    AND #3
  2209 9291 85 C1		    STA M1
  2210 9293 85 C3		    STA M3
  2211 9295 A9 00		    LDA #0
  2212 9297 85 87		    STA DX  
  2213
  2214 9299			REPEAT_START_POINT_FIND_DIRECTION
  2215 9299 A4 D0		    LDY ROOMNO
  2216 929B A5 C1		    LDA M1
  2217 929D			TRY_NEW_START_UP
  2218 929D C9 00		    CMP #0
  2219 929F D0 13		    BNE TRY_NEW_START_RIGHT
  2220 92A1 B9 00 19		    LDA ROOMDOORSET,Y
  2221 92A4 29 01		    AND #1   
  2222 92A6 D0 57		    BNE TRY_NEW_START_DONE 
  2223 92A8 C0 08		    CPY #8
  2224 92AA 90 53		    BCC TRY_NEW_START_DONE
  2225 92AC B9 F8 18		    LDA ROOMDOORSET-8,Y
  2226 92AF D0 4E		    BNE TRY_NEW_START_DONE 
  2227 92B1 4C 45 93		    JMP NEW_START_POINT_SUCCESSFUL 
  2228
  2229 92B4			TRY_NEW_START_RIGHT    
  2230 92B4 C9 01		    CMP #1    
  2231 92B6 D0 16		    BNE TRY_NEW_START_DOWN
  2232 92B8 B9 00 19		    LDA ROOMDOORSET,Y
  2233 92BB 29 02		    AND #2
  2234 92BD D0 40		    BNE TRY_NEW_START_DONE
  2235 92BF 98			    TYA
  2236 92C0 29 07		    AND #7
  2237 92C2 C9 07		    CMP #7
  2238 92C4 F0 39		    BEQ TRY_NEW_START_DONE
  2239 92C6 B9 01 19		    LDA ROOMDOORSET+1,Y
  2240 92C9 D0 34		    BNE TRY_NEW_START_DONE 
  2241 92CB 4C 45 93		    JMP NEW_START_POINT_SUCCESSFUL 
  2242 				    
  2243 				    
  2244 92CE			TRY_NEW_START_DOWN
  2245 92CE C9 02		    CMP #2    
  2246 92D0 D0 13		    BNE TRY_NEW_START_LEFT
  2247 92D2 B9 00 19		    LDA ROOMDOORSET,Y
  2248 92D5 29 04		    AND #4
  2249 92D7 D0 26		    BNE TRY_NEW_START_DONE
  2250 92D9 C0 38		    CPY #56
  2251 92DB B0 22		    BCS TRY_NEW_START_DONE
  2252 92DD B9 08 19		    LDA ROOMDOORSET+8,Y
  2253 92E0 D0 1D		    BNE TRY_NEW_START_DONE    
  2254 92E2 4C 45 93		    JMP NEW_START_POINT_SUCCESSFUL 
  2255 				    
  2256 				    
  2257 92E5			TRY_NEW_START_LEFT    
  2258 92E5 C9 03		    CMP #3
  2259 92E7 D0 16		    BNE NO_TRY_NEW_START_LEFT
  2260 92E9 B9 00 19		    LDA ROOMDOORSET,Y
  2261 92EC 29 08		    AND #8
  2262 92EE D0 0F		    BNE TRY_NEW_START_DONE
  2263 92F0 98			    TYA
  2264 92F1 29 07		    AND #7
  2265 92F3 C9 00		    CMP #0
  2266 92F5 F0 08		    BEQ TRY_NEW_START_DONE
  2267 92F7 B9 FF 18		    LDA ROOMDOORSET-1,Y
  2268 92FA D0 03		    BNE TRY_NEW_START_DONE 
  2269 92FC 4C 45 93		    JMP NEW_START_POINT_SUCCESSFUL         
  2270 92FF			NO_TRY_NEW_START_LEFT
  2271
  2272 92FF			TRY_NEW_START_DONE    
  2273 92FF A5 C1		    LDA M1
  2274 9301 18			    CLC
  2275 9302 69 01		    ADC #1
  2276 9304 29 03		    AND #3
  2277 9306 85 C1		    STA M1
  2278 9308 C5 C3		    CMP M3
  2279 930A D0 8D		    BNE REPEAT_START_POINT_FIND_DIRECTION
  2280 930C			DO_SHRINK_BUFFER_CHECK
  2281 				;    LDY ROOMNO
  2282 				;    LDA ROOMDOORSET,Y
  2283 				;    ORA #240
  2284 				;    STA ROOMDOORSET,Y
  2285 				;    LDA #255
  2286 				;    STA M1
  2287 930C			DO_SHRINK_BUFFER  
  2288 930C A4 C2		    LDY M2
  2289 930E 86 C3		    STX M3    
  2290 9310			REPEAT_SHRINK_BUFFER
  2291 9310 B9 01 1A		    LDA BUFFER + 1, Y
  2292 9313 99 00 1A		    STA BUFFER + 0, Y
  2293 9316 C8			    INY
  2294 9317 C4 C3		    CPY M3
  2295 9319 90 F5		    BCC REPEAT_SHRINK_BUFFER
  2296 931B			SHRINK_BUFFER_DONE
  2297 931B A9 00		    LDA #0
  2298 931D 9D 00 1A		    STA BUFFER,X
  2299 9320 CA			    DEX
  2300 9321 E0 FF		    CPX #255
  2301 9323 F0 09		    BEQ BUFFER_NDX_0
  2302 9325 E0 00		    CPX #0
  2303 9327 F0 05		    BEQ BUFFER_NDX_0
  2304 9329 A4 D0		    LDY ROOMNO
  2305
  2306 				 ;   LDA ROOMDOORSET,Y 
  2307 				 ;   NOP
  2308 				 ;   NOP
  2309 				 ;   NOP
  2310 				 ;   AND #15
  2311 				 ;   STA ROOMDOORSET,Y 
  2312
  2313
  2314 932B 4C 47 92		    JMP FIND_NEW_START_POINT
  2315 932E			BUFFER_NDX_0
  2316 932E A9 00		    LDA #0
  2317 9330 85 D0		    STA ROOMNO 
  2318 9332 A0 3F		    LDY #63
  2319 9334			RANDOMIZE_CENTER_LOOP
  2320 9334 AD 0A D2		    LDA RANDOM
  2321 9337 29 F0		    AND #240
  2322 9339 19 00 19		    ORA ROOMDOORSET,Y
  2323 933C 99 00 19		    STA ROOMDOORSET,Y
  2324 933F 88			    DEY
  2325 9340 10 F2		    BPL RANDOMIZE_CENTER_LOOP        
  2326 9342 4C 53 93		    JMP PUT_ROBOTS    
  2327 9345			NEW_START_POINT_SUCCESSFUL    
  2328 9345 A4 C1		    LDY M1
  2329 9347 B9 4F 93		    LDA ROOMMAKE_DIRECTION_ADD,Y
  2330 934A 85 87		    STA DX
  2331 				;    CLC
  2332 				;    ADC ROOMNO
  2333 				;    TAY
  2334 				;    LDA ROOMDOORSET,Y
  2335 				;    CMP #13
  2336 				;    BCS DO_SHRINK_BUFFER
  2337 				;    CMP #7
  2338 				;    BEQ DO_SHRINK_BUFFER
  2339 				;    CMP #11
  2340 				;    BEQ DO_SHRINK_BUFFER
  2341 				;    CPX #15
  2342 				;    BCS NO_BUFFER_CHECK_LOW
  2343 				    ;CMP #0
  2344 				    ;BNE DO_SHRINK_BUFFER
  2345 934C			NO_BUFFER_CHECK_LOW             
  2346 934C 4C 61 91		    JMP MAKE_ROOMMAZE_LOOP 
  2347 934F			ROOMMAKE_DIRECTION_ADD
  2348 934F F8 01 08 FF		    DTA 248,001,008,255
  2349 9353			PUT_ROBOTS
  2350 				  
  2351 9353 A9 3F		    LDA #63
  2352 9355 85 C0		    STA M0    
  2353 9357			MAKE_LEVEL_LOOP
  2354 9357 A4 C0		    LDY M0
  2355 				;    LDA RANDOM
  2356 				;    STA ROOMDOORSET,Y
  2357 9359 A2 0B		    LDX #11    
  2358 935B A9 80		    LDA #<ROOMBOTTYP0
  2359 935D 85 CA		    STA NDX0
  2360 935F A9 19		    LDA #>ROOMBOTTYP0
  2361 9361 85 CB		    STA NDX1
  2362 9363 A9 C0		    LDA #<ROOMBOTLOC0
  2363 9365 85 CC		    STA NDX2
  2364 9367 A9 1C		    LDA #>ROOMBOTLOC0
  2365 9369 85 CD		    STA NDX3
  2366 936B A9 00		    LDA #0
  2367 936D 85 C3		    STA M3    
  2368 936F AD 0A D2		    LDA RANDOM
  2369 9372 29 70		    AND #112
  2370 9374 85 C1		    STA M1
  2371 9376 AD 0A D2		    LDA RANDOM
  2372 9379 29 70		    AND #112
  2373 937B 85 C2		    STA M2
  2374 937D AD 0A D2		    LDA RANDOM
  2375 9380 29 0F		    AND #15
  2376 9382 85 C4		    STA M4
  2377 9384 85 C5		    STA M5
  2378 9386			MAKE_ROBOT_LOOP
  2379 9386 AD 0A D2		    LDA RANDOM
  2380 9389 29 07		    AND #07  
  2381 938B F0 F9		    BEQ MAKE_ROBOT_LOOP
  2382 				;    CLC
  2383 				;    ADC #1
  2384 938D 91 CA		    STA (NDX0),Y
  2385 938F A5 CA		    LDA NDX0
  2386 9391 18			    CLC
  2387 9392 69 40		    ADC #$40
  2388 9394 85 CA		    STA NDX0
  2389 9396 A5 CB		    LDA NDX1
  2390 9398 69 00		    ADC #0
  2391 939A 85 CB		    STA NDX1
  2392 939C			ROBOT_SPREAD_AGAIN
  2393 939C AD 0A D2		    LDA RANDOM
  2394 939F 29 0F		    AND #15
  2395 93A1 C5 C4		    CMP M4
  2396 93A3 F0 F7		    BEQ ROBOT_SPREAD_AGAIN
  2397 93A5 85 C4		    STA M4
  2398 93A7 18			    CLC
  2399 93A8 65 C3		    ADC M3
  2400 93AA 91 CC		    STA (NDX2),Y
  2401 93AC			ROBOT_ROW_AGAIN
  2402 93AC A5 C3		    LDA M3
  2403 93AE 18			    CLC
  2404 93AF 69 10		    ADC #16
  2405 93B1 85 C3		    STA M3
  2406 93B3 29 7F		    AND #127
  2407 93B5 C5 C1		    CMP M1
  2408 93B7 F0 F3		    BEQ ROBOT_ROW_AGAIN
  2409 93B9 C5 C2		    CMP M2
  2410 93BB F0 EF		    BEQ ROBOT_ROW_AGAIN      
  2411 93BD A5 CC		    LDA NDX2
  2412 93BF 18			    CLC
  2413 93C0 69 40		    ADC #$40
  2414 93C2 85 CC		    STA NDX2
  2415 93C4 A5 CD		    LDA NDX3
  2416 93C6 69 00		    ADC #0
  2417 93C8 85 CD		    STA NDX3
  2418 93CA CA			    DEX
  2419 93CB 10 B9		    BPL MAKE_ROBOT_LOOP
  2420 93CD C6 C0		    DEC M0
  2421 93CF 10 86		    BPL MAKE_LEVEL_LOOP
  2422 				    
  2423 				    
  2424 93D1 A9 00		    LDA #0
  2425 93D3 8D 33 18		    STA Num_Bosses
  2426 				    
  2427 				    
  2428 93D6 AD 33 18		    LDA Num_Bosses
  2429 93D9 85 C0		    STA M0
  2430 93DB			BOSS_ROBOT_LOOP
  2431 93DB AD 0A D2		    LDA RANDOM
  2432 93DE AA			    TAX
  2433 93DF A9 08		    LDA #8
  2434 93E1 9D 80 1A		    STA ROOMBOTTYP4,X
  2435 93E4 C6 C0		    DEC M0
  2436 93E6 10 F3		    BPL BOSS_ROBOT_LOOP
  2437 				    
  2438 				    
  2439 				    
  2440 				    
  2441 				    
  2442 93E8 A9 00		    LDA #0
  2443 93EA 85 D0		    STA ROOMNO     
  2444 93EC 60			    RTS 
  2445 				 
  2446 				; POKE 106,180:GRAPHICS 0:POKE 82,0:POSITION 1,8
  2447 				; OPEN #1,4,0,"D:ROOMTEST.FNT":BGET #1,48128,1024:CLOSE #1:POKE 756,188
  2448 				; W=DPEEK(88):BUFFER=47104:BI=BUFFER:TC=W+16
  2449 				; X=4:Y=120
  2450 				; FOR I=0 TO 7
  2451 				;   FOR J=0 TO 7
  2452 				;     POKE TC+I+40*J,64
  2453 				;   NEXT J
  2454 				; NEXT I
  2455 				; DX=-1:DY=0
  2456 				; REPEAT 
  2457 				;   REPEAT 
  2458 				;     P1=PEEK(TC+X+Y)
  2459 				;     P2=79
  2460 				;     IF DX=0 AND DY=-40
  2461 				;       IF Y>=0 THEN P2=PEEK(TC+X+Y+DY)
  2462 				;       IF P1&1=0 AND P2=64
  2463 				;         POKE TC+X+Y,P1!1
  2464 				;         POKE TC+X+Y+DY,P2!4
  2465 				;       ENDIF 
  2466 				;     ENDIF 
  2467 				;     IF DX=0 AND DY=40
  2468 				;       IF Y<=280 THEN P2=PEEK(TC+X+Y+DY)
  2469 				;       IF P1&4=0 AND P2=64
  2470 				;         POKE TC+X+Y,P1!4
  2471 				;         POKE TC+X+Y+DY,P2!1
  2472 				;       ENDIF 
  2473 				;     ENDIF 
  2474 				;     IF DX=-1 AND DY=0
  2475 				;       IF X>=0 THEN P2=PEEK(TC+X+DX+Y)
  2476 				;       IF P1&8=0 AND P2=64
  2477 				;         POKE TC+X+Y,P1!8
  2478 				;         POKE TC+X+DX+Y,P2!2
  2479 				;       ENDIF 
  2480 				;     ENDIF 
  2481 				;     IF DX=1 AND DY=0
  2482 				;       IF X<=7 THEN P2=PEEK(TC+X+DX+Y)
  2483 				;       IF P1&2=0 AND P2=64
  2484 				;         POKE TC+X+Y,P1!2
  2485 				;         POKE TC+X+DX+Y,P2!8
  2486 				;       ENDIF 
  2487 				;     ENDIF
  2488 				;     R=PEEK(53770)
  2489 				;     IF R>=64
  2490 				;       D=PEEK(53770)&1
  2491 				;       IF X>=0 AND X<=7 AND Y>=0 AND Y<=280
  2492 				;       ENDIF 
  2493 				;       IF DX=0
  2494 				;         IF D=0 THEN DX=1:DY=0
  2495 				;         IF D=1 THEN DX=-1:DY=0
  2496 				;       ELSE 
  2497 				;         IF D=0 THEN DX=0:DY=-40
  2498 				;         IF D=1 THEN DX=0:DY=40
  2499 				;       ENDIF 
  2500 				;     ENDIF 
  2501 				;   UNTIL X<0 OR X>7 OR Y<0 OR Y>280 OR BI>=BUFFER+255    
  2502 				;     X=X+DX
  2503 				;     Y=Y+DY
  2504 				;     P=PEEK(TC+X+Y)
  2505 				;     IF BI<BUFFER+255 AND X>=0 AND Y>=0 AND X<=7 AND Y<=280
  2506 				;       POKE BI,X+16*(Y/40)
  2507 				;       BI=BI+1
  2508 				;     ENDIF    
  2509 				;   IF BI>BUFFER
  2510 				;     REPEAT 
  2511 				;       N=0
  2512 				;       REPEAT 
  2513 				;         NI=BUFFER+PEEK(53770):N=N+1
  2514 				;       UNTIL N>9 OR NI<BI
  2515 				;       IF N>9 THEN NI=BUFFER
  2516 				;       X=PEEK(NI)&15:Y=((PEEK(NI)&240)/16)*40:P=PEEK(TC+X+Y)
  2517 				;       M=PEEK(53770)&3:N=M:F=0:DX=0:DY=0
  2518 				;       REPEAT 
  2519 				;         IF M=0 AND P&1=0 AND Y>0 THEN F=1:DX=0:DY=-40
  2520 				;         IF M=1 AND P&2=0 AND X<7 THEN F=2:DX=1:DY=0
  2521 				;         IF M=2 AND P&4=0 AND X>0 THEN F=4:DX=0:DY=40
  2522 				;         IF M=3 AND P&8=0 AND Y<280 THEN F=8:DX=-1:DY=0
  2523 				;         IF F>0
  2524 				;           P1=PEEK(TC+X+DX+Y+DY)
  2525 				;           IF P1>64 THEN F=0
  2526 				;         ENDIF 
  2527 				;         IF F=0 THEN M=(M+1)&3
  2528 				;       UNTIL N=M OR F>0
  2529 				;       IF BI>BUFFER
  2530 				;         IF BI>NI THEN FOR O=NI TO BI:POKE O,PEEK(O+1):NEXT O
  2531 				;         IF BI>BUFFER THEN POKE BI,0:BI=BI-1
  2532 				;         IF NI>BUFFER THEN NI=NI-1
  2533 				;       ENDIF 
  2534 				;     UNTIL F>0 OR BI<=BUFFER
  2535 				;   UNTIL BI<=BUFFER
  2536 				    
  2537
  2538 				     
  2539 				        
  2540 93ED			START_SOUND
  2541 93ED 85 C0		    STA M0
  2542 93EF A5 BC		    LDA NX_SND_CHNL
  2543 93F1 0A			    ASL @    
  2544 93F2 A8			    TAY
  2545 93F3 A5 C0		    LDA M0
  2546 93F5 99 39 18		    STA SND_DELAY_RATE,Y
  2547 93F8 BD FE A0		    LDA START_SOUND_ADDR_LO,X
  2548 93FB 99 30 18		    STA SND_ADDR_LO,Y 
  2549 93FE BD 0B A1		    LDA START_SOUND_ADDR_HI,X
  2550 9401 99 31 18		    STA SND_ADDR_HI,Y         
  2551 9404 BD 18 A1		    LDA START_SOUND_LENGTH_LO,X
  2552 9407 F0 22		    BEQ PLAY_SOUND_ERROR 
  2553 9409 30 20		    BMI PLAY_SOUND_ERROR 
  2554 940B 99 B0 00		    STA SND_LENGTH_LO,Y 
  2555 940E A9 00		    LDA #0
  2556 9410 99 B1 00		    STA SND_LENGTH_HI,Y         
  2557 				    
  2558 				  
  2559 9413 A9 01		    LDA #$01
  2560 9415 99 38 18		    STA SND_DELAY_TIME,Y
  2561 9418 99 B8 00		    STA SND_CHANNEL_IN_USE,Y
  2562 941B A5 BC		    LDA NX_SND_CHNL
  2563 941D 18			    CLC
  2564 941E 69 01		    ADC #1
  2565 9420 C9 03		    CMP #3
  2566 9422 90 05		    BCC NO_SND_CHNL_RESET
  2567 9424 A9 00		    LDA #0
  2568 9426 8D 08 D2		    STA AUDCTL
  2569 9429			NO_SND_CHNL_RESET    
  2570 9429 85 BC		    STA NX_SND_CHNL
  2571 942B			PLAY_SOUND_ERROR
  2572 942B 60			    RTS
  2573 				    
  2574 942C			STOP_SOUND
  2575 942C 98			    TYA
  2576 942D 0A			    ASL @
  2577 942E A8			    TAY
  2578 942F A9 00		    LDA #0
  2579 9431 99 B8 00		    STA SND_CHANNEL_IN_USE,Y
  2580 9434 99 B0 00		    STA SND_LENGTH_LO,Y
  2581 9437 99 B1 00		    STA SND_LENGTH_HI,Y
  2582 943A 99 01 D2		    STA AUDC1,Y
  2583 943D 99 00 D2		    STA AUDF1,Y    
  2584 9440 60			    RTS
  2585
  2586 9441			SILENCE
  2587 9441 A9 00		    LDA #0
  2588 9443 8D 08 D2		    STA AUDCTL
  2589 9446 8D 0F D2		    STA SKCTL
  2590 9449 8D 1A D0		    STA COLBAK
  2591 944C A0 07		    LDY #7
  2592 944E			NEXT_SILENCE    
  2593 944E 99 B0 00		    STA SND_LENGTH_LO,Y
  2594 9451 99 B1 00		    STA SND_LENGTH_HI,Y
  2595 9454 99 B8 00		    STA SND_CHANNEL_IN_USE,Y
  2596 9457 99 30 18		    STA SND_ADDR_LO,Y
  2597 945A 99 31 18		    STA SND_ADDR_HI,Y
  2598 945D 99 38 18		    STA SND_DELAY_TIME,Y 
  2599 9460 99 01 D2		    STA AUDC1,Y
  2600 9463 99 00 D2		    STA AUDF1,Y
  2601 9466 88			    DEY
  2602 9467 10 E5		    BPL NEXT_SILENCE
  2603 9469 A9 03		    LDA #3
  2604 946B 8D 0F D2		    STA SKCTL
  2605 946E 60			    RTS     
  2606 				       
  2607 946F			    ORG $9500
  2608
  2609 9500			SB_DLI
  2610 9500 48			    PHA
  2611 9501 A9 D0		    LDA #$D0
  2612 9503 8D 18 D0		    STA COLPF2
  2613 9506 A9 0A		    LDA #10
  2614 9508 8D 17 D0		    STA COLPF1
  2615 950B A9 30		    LDA #>font1
  2616 950D 85 D6		    STA CHARSHIFT
  2617 950F 8D 09 D4		    STA CHBASE       
  2618 9512 A9 19		    LDA #<PT_DLI
  2619 9514 8D 00 02		    STA VDSLST + 0
  2620 				;    LDA #>PT_DLI
  2621 				;    STA VDSLST + 1
  2622 9517 68			    PLA
  2623 9518 40			    RTI
  2624
  2625 9519			PT_DLI
  2626 9519 48			    PHA
  2627 951A A9 3C		    LDA #<PF_DLI
  2628 951C 8D 00 02		    STA VDSLST + 0
  2629 				 ;   LDA #>PF_DLI
  2630 				 ;   STA VDSLST + 1
  2631 951F A9 54		    LDA #$54
  2632 9521 8D 16 D0		    STA COLPF0
  2633 9524 A9 26		    LDA #$26
  2634 9526 8D 17 D0		    STA COLPF1
  2635 9529 A9 B8		    LDA #$B8
  2636 952B 8D 18 D0		    STA COLPF2
  2637 952E A9 7C		    LDA #124
  2638 9530 8D 19 D0		    STA COLPF3
  2639 9533 A9 01		    LDA #1
  2640 9535 85 D5		    STA LINESHIFT
  2641 9537 8D 05 D4		    STA VSCROL
  2642 953A 68			    PLA
  2643 953B 40			    RTI
  2644
  2645
  2646 953C			PF_DLI
  2647 953C 48			    PHA
  2648 953D 84 FF		    STY DLIYSAV
  2649 953F A5 D5				LDA LINESHIFT
  2650 9541 8D 0A D4		    STA WSYNC
  2651 9544 A4 D6		    LDY CHARSHIFT    
  2652 9546 8D 05 D4				STA VSCROL
  2653 9549 8C 09 D4		    STY CHBASE
  2654 954C 49 07		    EOR #7
  2655 954E 85 D5				STA LINESHIFT 
  2656 9550 98					TYA
  2657 9551 49 04		    EOR #4
  2658 9553 85 D6				STA CHARSHIFT  
  2659 				      
  2660 9555 A4 D8		    LDY ZONDX
  2661 9557 C0 1A		    CPY #26
  2662 9559 B0 46		    BCS Last_PF_Line
  2663 955B 86 FE		    STX DLIXSAV
  2664
  2665 				    
  2666 955D BE 10 11		    LDX SPSRC0,Y
  2667 9560 BD 68 10		    LDA SPRITENHOZ,X
  2668 9563 8D 00 D0		    STA HPOSP0
  2669 9566 BD B8 10		    LDA SETSP0COLOR,X
  2670 9569 8D 12 D0		    STA COLPM0
  2671 				           
  2672 956C BE 2C 11		    LDX SPSRC1,Y
  2673 956F BD 68 10		    LDA SPRITENHOZ,X
  2674 9572 8D 01 D0		    STA HPOSP1
  2675 9575 BD B8 10		    LDA SETSP0COLOR,X
  2676 9578 8D 13 D0		    STA COLPM1
  2677 				            
  2678 957B BE 48 11		    LDX SPSRC2,Y
  2679 957E BD 68 10		    LDA SPRITENHOZ,X
  2680 9581 8D 02 D0		    STA HPOSP2
  2681 9584 BD B8 10		    LDA SETSP0COLOR,X
  2682 9587 8D 14 D0		    STA COLPM2
  2683 				            
  2684 958A BE 64 11		    LDX SPSRC3,Y
  2685 958D BD 68 10		    LDA SPRITENHOZ,X
  2686 9590 8D 03 D0		    STA HPOSP3
  2687 9593 BD B8 10		    LDA SETSP0COLOR,X
  2688 9596 8D 15 D0		    STA COLPM3
  2689 				     
  2690 9599 E6 D8		    INC ZONDX
  2691
  2692 959B A4 FF		    LDY DLIYSAV        
  2693 959D A6 FE		    LDX dlixsav
  2694 959F 68					PLA
  2695 95A0 40					rti
  2696
  2697 95A1			Last_PF_Line
  2698 95A1 4C 4D 39		    JMP Clear_Plex_Sprites
  2699
  2700 95A4			    ORG $9600
  2701
  2702 9600			GAME_DISPLAY_LIST
  2703 9600 70 F0 60 C3 40 04 +     DTA 112,240,96,195,<SCRTXT,>SCRTXT,$A0
  2704 				    
  2705 9607 E4 00 05		       dta $e4,a(screen)
  2706 960A 84 A4 84 A4 84 A4 + :12    dta $84,$a4
  2707 9622 84 24		       dta $84,$24    
  2708 9624 41 00 96		       dta $41,a(GAME_DISPLAY_LIST)
  2709 				    
  2710 				    
  2711 				   
  2712 9627 00 18 18 18 00 3C + P000 dta 0,24,24,24,0,60,60,60,60,60,24,0,24,24,24,24,24,24,24,24
  2713 963B 00 18 18 19 02 3C + P001 dta 0,24,24,25,2,60,56,56,56,24,24,0,24,24,24,24,24,24,24,24
  2714 964F 00 18 18 18 00 3F + P002 dta 0,24,24,24,0,63,56,56,24,24,24,0,24,24,24,24,24,24,24,24
  2715 9663 00 18 18 18 00 3C + P003 dta 0,24,24,24,0,60,58,57,24,24,24,0,24,24,24,24,24,24,24,24
  2716 9677 00 18 18 18 00 3C + P004 dta 0,24,24,24,0,60,62,58,26,26,26,0,24,24,24,24,24,24,24,24
  2717 968B 00 18 18 98 40 3C + P005 dta 0,24,24,152,64,60,28,28,28,24,24,0,24,24,24,24,24,24,24,24
  2718 969F 00 18 18 18 00 FC + P006 dta 0,24,24,24,0,252,28,28,28,24,24,0,24,24,24,24,24,24,24,24
  2719 96B3 00 18 18 18 00 3C + P007 dta 0,24,24,24,0,60,92,156,28,24,24,0,24,24,24,24,24,24,24,24
  2720 96C7 00 58 58 58 40 5C + P008 dta 0,88,88,88,64,92,124,28,24,24,24,0,24,24,24,24,24,24,24,24
  2721 96DB 00 18 18 18 00 18 + P009 dta 0,24,24,24,0,24,57,90,92,56,24,24,24,24,28,20,36,194,2,2
  2722 96EF 00 18 18 1A 02 3E + P010 dta 0,24,24,26,2,62,60,124,88,88,24,56,56,40,40,40,40,12,4,4
  2723 9703 00 18 18 18 00 18 + P011 dta 0,24,24,24,0,24,156,90,58,28,24,24,24,24,56,40,36,67,64,64
  2724 9717 00 18 18 18 02 1A + P012 dta 0,24,24,24,2,26,30,60,120,88,88,24,24,56,56,104,72,76,4,4
  2725 972B 00 18 18 18 00 18 + P013 dta 0,24,24,24,0,24,24,56,62,24,24,24,24,24,24,24,24,24,56,40
  2726 973F 00 18 18 58 40 7C + P014 dta 0,24,24,88,64,124,60,62,26,26,24,28,28,20,20,20,20,48,32,32
  2727 9753 00 18 18 18 00 18 + P015 dta 0,24,24,24,0,24,24,28,124,24,24,24,24,24,24,24,24,24,28,20
  2728 9767 00 18 18 18 40 58 + P016 dta 0,24,24,24,64,88,120,60,30,26,26,24,24,28,28,22,18,50,32,32
  2729 977B 00 18 18 18 00 3C + P017 dta 0,24,24,24,0,60,126,90,90,90,24,0,24,24,60,36,36,36,36,0
  2730 978F 18 24 24 24 3C 42 + P018 dta 24,36,36,36,60,66,129,165,165,165,102,24,36,36,66,90,90,90,90,36
  2731 97A3 00 26 26 22 FA FA + P019 dta 0,38,38,34,250,250,34,39,39,0,0,0,151,151,181,181,183,182,246,246
  2732 97B7 00 18 3C 1E 3C 18 + P020 dta 0,24,60,30,60,24,60,118,90,90,90,24,24,255,255,195,195,129,195,195
  2733 97CB 00 18 3C 66 3C 18 + P021 dta 0,24,60,102,60,24,60,118,90,90,90,24,24,255,255,195,195,129,195,195
  2734 97DF 00 18 3C 78 3C 18 + P022 dta 0,24,60,120,60,24,60,110,90,90,90,24,24,255,255,195,195,129,195,195
  2735 97F3 00 18 3C 66 3C 18 + P023 dta 0,24,60,102,60,24,60,118,90,90,90,24,24,255,255,195,195,129,195,195
  2736 9807 00 18 3C 1E 3C 1A + P024 dta 0,24,60,30,60,26,62,118,90,88,88,27,219,255,255,193,131,195,192,0
  2737 981B 00 18 3C 66 3C 18 + P025 dta 0,24,60,102,60,24,62,118,122,90,24,24,27,255,255,195,193,131,195,192
  2738 982F 00 18 3C 78 3C 58 + P026 dta 0,24,60,120,60,88,124,110,90,26,26,24,216,255,255,195,131,193,195,3
  2739 9843 00 18 3C 66 3C 18 + P027 dta 0,24,60,102,60,24,124,110,94,90,24,216,219,255,255,131,195,193,3,3
  2740 9857 00 0E 08 08 1C 3E + P028 dta 0,14,8,8,28,62,119,127,62,62,28,62,127,85,127,0,0,0,0,0
  2741 986B 00 1C 08 08 1C 3E + P029 dta 0,28,8,8,28,62,123,127,62,62,28,62,127,107,127,0,0,0,0,0
  2742 987F 00 1C 08 08 1C 3E + P030 dta 0,28,8,8,28,62,119,127,62,62,28,62,127,107,127,0,0,0,0,0
  2743 9893 00 38 08 08 1C 3E + P031 dta 0,56,8,8,28,62,111,127,62,62,28,62,127,85,127,0,0,0,0,0
  2744 98A7 00 3C 5A BD BD BD + P032 dta 0,60,90,189,189,189,66,60,16,24,24,16,60,60,24,126,126,129,255,255
  2745 98BB 00 3C 42 BF BF BF + P033 dta 0,60,66,191,191,191,66,60,16,24,24,8,60,60,48,126,126,48,255,255
  2746 98CF 00 3C 42 BD BD BD + P034 dta 0,60,66,189,189,189,90,60,8,24,24,8,60,60,24,126,126,12,255,255
  2747 98E3 00 3C 42 FD FD FD + P035 dta 0,60,66,253,253,253,66,60,8,24,24,16,60,60,6,126,126,195,255,255
  2748 98F7 00 18 3C 3C 72 72 + P036 dta 0,24,60,60,114,114,126,255,255,255,147,255,201,255,189,189,169,153,129,195
  2749 990B 00 18 3C 3C 66 66 + P037 dta 0,24,60,60,102,102,126,255,255,255,185,255,157,255,189,189,149,153,129,195
  2750 991F 00 18 3C 3C 4E 4E + P038 dta 0,24,60,60,78,78,126,255,255,255,201,255,147,255,189,189,169,153,129,195
  2751 9933 00 18 3C 3C 66 66 + P039 dta 0,24,60,60,102,102,126,255,255,255,157,255,185,255,189,189,149,153,129,195
  2752 9947 00 01 02 64 A4 BC + P040 dta 0,1,2,100,164,188,24,26,154,145,255,153,89,88,24,188,164,100,2,1
  2753 995B 00 81 42 24 24 3C + P041 dta 0,129,66,36,36,60,24,24,90,203,255,219,90,24,24,60,36,36,66,129
  2754 996F 00 80 40 26 25 3D + P042 dta 0,128,64,38,37,61,24,88,89,153,255,137,154,26,24,61,37,38,64,128
  2755 9983 00 42 24 24 24 3C + P043 dta 0,66,36,36,36,60,24,153,153,153,126,145,153,153,24,60,36,36,36,66
  2756 9997 00 00 00 00 7E FB + P044 dta 0,0,0,0,126,251,153,185,251,231,231,255,255,66,126,60,0,0,0,0
  2757 99AB 00 00 00 00 7E FB + P045 dta 0,0,0,0,126,251,185,153,251,239,231,255,255,66,126,60,0,0,0,0
  2758 99BF 00 00 00 00 7E FB + P046 dta 0,0,0,0,126,251,221,155,253,247,231,255,255,90,66,126,60,0,0,0
  2759 99D3 00 00 00 00 7E FB + P047 dta 0,0,0,0,126,251,155,221,251,231,231,255,255,90,66,126,60,0,0,0
  2760 99E7 00 00 E7 E7 A5 E7 + P048 dta 0,0,231,231,165,231,231,102,60,24,60,255,153,153,219,24,60,122,255,219
  2761 99FB 00 00 E0 AE EE EA + P049 dta 0,0,224,174,238,234,238,110,60,24,248,191,153,217,27,24,60,118,255,182
  2762 9A0F 00 00 E7 E7 E7 A5 + P050 dta 0,0,231,231,231,165,231,102,60,24,24,60,255,153,153,219,60,110,255,109
  2763 9A23 00 00 07 75 77 57 + P051 dta 0,0,7,117,119,87,119,118,60,24,31,253,153,155,216,24,60,94,255,219
  2764 9A37 0E 08 0E 08 1C 3E + P052 dta 14,8,14,8,28,62,115,115,127,127,62,28,28,28,28,20,127,85,85,127
  2765 9A4B 1C 08 1C 08 1C 3E + P053 dta 28,8,28,8,28,62,121,121,127,127,62,28,28,28,62,42,127,85,107,127
  2766 9A5F 38 08 38 08 1C 3E + P054 dta 56,8,56,8,28,62,103,103,127,127,62,28,28,28,62,20,127,107,107,127
  2767 9A73 14 08 1C 08 1C 3E + P055 dta 20,8,28,8,28,62,79,79,127,127,62,28,28,28,62,42,127,107,85,127
  2768 9A87 00 00 00 00 44 00 + P056 dta 0,0,0,0,68,0,40,40,108,16,56,16,108,40,40,0,68,0,0,0
  2769 9A9B 00 00 00 44 44 00 + P057 dta 0,0,0,68,68,0,40,170,108,56,40,56,108,170,40,0,68,68,0,0
  2770 9AAF 00 44 44 44 44 28 + P058 dta 0,68,68,68,68,40,170,170,108,56,56,56,108,170,170,40,68,68,68,68
  2771 9AC3 00 44 44 44 44 00 + P059 dta 0,68,68,68,68,0,170,130,40,16,40,16,40,130,170,0,68,68,68,68
  2772 9AD7 00 44 44 44 44 28 + P060 dta 0,68,68,68,68,40,130,40,68,16,56,16,68,40,130,40,68,68,68,68
  2773 9AEB 00 44 44 44 44 28 + P061 dta 0,68,68,68,68,40,170,170,68,0,0,0,68,170,170,40,68,68,68,68
  2774 9AFF 00 44 44 00 44 28 + P062 dta 0,68,68,0,68,40,130,130,0,0,16,0,0,130,130,40,68,0,68,68
  2775 9B13 00 44 00 44 00 00 + P063 dta 0,68,0,68,0,0,130,0,0,40,0,40,0,0,130,0,0,68,0,68
  2776 9B27 00 00 00 00 00 18 + P064 dta 0,0,0,0,0,24,24,0,0,24,24,0,0,24,24,0,0,0,0,0
  2777 9B3B 00 00 00 00 00 C0 + P065 dta 0,0,0,0,0,192,192,0,0,24,24,0,0,3,3,0,0,0,0,0
  2778 9B4F 00 00 00 00 00 00 + P066 dta 0,0,0,0,0,0,0,0,0,219,219,0,0,0,0,0,0,0,0,0
  2779 9B63 00 00 00 00 00 03 + P067 dta 0,0,0,0,0,3,3,0,0,24,24,0,0,192,192,0,0,0,0,0
  2780 9B77 00 00 00 00 00 00 + P068 dta 0,0,0,0,0,0,0,0,24,24,24,24,0,0,0,0,0,0,0,0
  2781 9B8B 00 00 00 00 00 00 + P069 dta 0,0,0,0,0,0,0,0,48,24,12,6,0,0,0,0,0,0,0,0
  2782 9B9F 00 00 00 00 00 00 + P070 dta 0,0,0,0,0,0,0,0,0,60,60,0,0,0,0,0,0,0,0,0
  2783 9BB3 00 00 00 00 00 00 + P071 dta 0,0,0,0,0,0,0,0,12,24,48,96,0,0,0,0,0,0,0,0
  2784 9BC7 00 00 18 3C 7E 7E + P072 dta 0,0,24,60,126,126,255,255,255,231,231,255,255,255,126,126,60,24,0,0
  2785 9BDB 00 00 00 00 3E 22 + P073 dta 0,0,0,0,62,34,54,54,28,16,16,16,16,28,16,28,0,0,0,0
  2786
  2787 9BEF			SPADDRLO 
  2788 9BEF 27 3B 4F 63 77 8B +   DTA <P000,<P001,<P002,<P003,<P004,<P005,<P006,<P007,<P008,<P009,<P010,<P011,<P012,<P013,<P014,<P015,<P016,<P017,<P018,<P019
  2789 9C03 B7 CB DF F3 07 1B +   DTA <P020,<P021,<P022,<P023,<P024,<P025,<P026,<P027,<P028,<P029,<P030,<P031,<P032,<P033,<P034,<P035,<P036,<P037,<P038,<P039
  2790 9C17 47 5B 6F 83 97 AB +   DTA <P040,<P041,<P042,<P043,<P044,<P045,<P046,<P047,<P048,<P049,<P050,<P051,<P052,<P053,<P054,<P055,<P056,<P057,<P058,<P059
  2791 9C2B D7 EB FF 13 27 3B +   DTA <P060,<P061,<P062,<P063,<P064,<P065,<P066,<P067,<P068,<P069,<P070,<P071,<P072,<P073
  2792 9C39			SPADDRHI 
  2793 9C39 96 96 96 96 96 96 +   DTA >P000,>P001,>P002,>P003,>P004,>P005,>P006,>P007,>P008,>P009,>P010,>P011,>P012,>P013,>P014,>P015,>P016,>P017,>P018,>P019
  2794 9C4D 97 97 97 97 98 98 +   DTA >P020,>P021,>P022,>P023,>P024,>P025,>P026,>P027,>P028,>P029,>P030,>P031,>P032,>P033,>P034,>P035,>P036,>P037,>P038,>P039
  2795 9C61 99 99 99 99 99 99 +   DTA >P040,>P041,>P042,>P043,>P044,>P045,>P046,>P047,>P048,>P049,>P050,>P051,>P052,>P053,>P054,>P055,>P056,>P057,>P058,>P059
  2796 9C75 9A 9A 9A 9B 9B 9B +   DTA >P060,>P061,>P062,>P063,>P064,>P065,>P066,>P067,>P068,>P069,>P070,>P071,>P072,>P073
  2797
  2798 9C83			CHAR_VERT_BASE
  2799 9C83 00 0C 0A		    DTA 000,012,010
  2800 9C86			CHAR_HOZ_BASE
  2801 9C86 00 09 0B		    DTA 000,009,011
  2802 9C89			CHAR_VERT_FIRE
  2803 9C89 00 02 04		    DTA 000,002,004
  2804 9C8C			CHAR_HOZ_FIRE
  2805 9C8C 00 01 03 00		    DTA 000,001,003,000
  2806 9C90			MINUS_PLUS_STICK
  2807 9C90 00 01 FF 00		    DTA 000,001,255,000
  2808 9C94			MINUS_PLUS_BOLT
  2809 9C94 00 04 FC 00		    DTA 000,004,252,000                    
  2810 = 9C94			CHAR_SHOOT_DIR = *-4
  2811 				;          DR  UR  R       DL  UL  L       D   U
  2812 				;      04  05  06  07  08  09  10  11  12  13  14  15
  2813 9C98 00 03 01 02 00 07 +    DTA 000,003,001,002,000,007,005,006,000,004,008,000 
  2814 = 9CA0			BOLT_DIR_IMAGE = *-4
  2815 9CA4 00 41 43 42 00 43 +    DTA 000,065,067,066,000,067,065,066,000,064,064,000 
  2816 				;    JMP Clear_Plex_Sprites
  2817 9CB0			CHARSCR_COLLIDE_NEXT
  2818 9CB0 00 01 30 31 60 61 +   DTA 00,01,48,49,96,97,255
  2819 9CB7			PROJSCR_COLLIDE_NEXT
  2820 9CB7 00 01 30 31 FF	  DTA 00,01,48,49,255
  2821 9CBC			TAB4DIV
  2822 9CBC 00 00 00 00 00 00 + 	DTA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
  2823 9CDC 00 00 00 00 01 01 +   DTA 00,00,00,00,01,01,01,01,02,02,02,02,03,03,03,03,04,04,04,04,05,05,05,05,06,06,06,06,07,07,07,07,08,08,08,08,09,09,09,09
  2824 9D04 0A 0A 0A 0A 0B 0B + 	DTA 10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19
  2825 9D2C 14 14 14 14 15 15 + 	DTA 20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29
  2826 9D54 1E 1E 1E 1E 1F 1F + 	DTA 30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39
  2827 9D7C 28 28 28 28 29 29 +   DTA 40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47
  2828 9DA4 2F 2F 2F 2F 2F 2F +   DTA 47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47
  2829
  2830
  2831
  2832
  2833 9DB4			PALETTE_COLOR_0
  2834 9DB4			PALETTE_COLOR_1
  2835 9DB4			PALETTE_COLOR_2
  2836 9DB4			PALETTE_COLOR_3
  2837
  2838 9DB4			START_POSITION_HOZ
  2839 9DB4 30 38 3C 48 50 64 +   DTA 48,56,60, 72,80, 100,104, 120,128,  144,148, 168,174, 188,194,200 
  2840 9DC4			START_POSITION_VRT
  2841 9DC4 34 40 5C 60 64 68 +   DTA 52,64, 92,96,100, 104,108,112, 144,148,152, 156,160,164, 190,204 ;
  2842
  2843 				;       0   1   2   3   4    5   6   7   8   9
  2844
  2845 9DD4			BOT_BASE_START
  2846 9DD4 17 13 1B 1F 23 27 +   DTA 023,019,027,031,035, 039,043,047,051
  2847 9DDD			BOT_BASE_COLOR
  2848 9DDD 88 88 68 38 0A DA +   DTA 136,136,104,056,010, 218,030,184,120
  2849 9DE6			BOT_SHOOT_RANDOM_CHANGE
  2850 9DE6 FF FF FF FF FF 00 +   DTA 255,255,255,255,255,000,000,000,000,000,000,001,001,001,001,001
  2851 9DF6			GetRandomDirectionX
  2852 9DF6 FF 00 01 01 01 00 +   dta 255,000,001,001,001,000,255,255
  2853 9DFE			GetRandomDirectionY
  2854 9DFE FF FF FF 00 01 01 +   dta 255,255,255,000,001,001,001,000 
  2855 9E06			Bolt_DirectionX
  2856 9E06 FC 00 04 04 04 00 +   dta 252,000,004,004,004,000,252,252
  2857 9E0E			Bolt_DirectionY
  2858 9E0E FC FC FC 00 04 04 +   dta 252,252,252,000,004,004,004,000 
  2859 9E16			Bolt_Direction_Image
  2860 9E16 45 44 47 46 45 44 +   dta 69,68,71,70,69,68,71,70
  2861
  2862
  2863 				;SET = 01
  2864 				;CHR = 02
  2865 				;BLK = 03
  2866 				;OUL = 04
  2867 				;HLN = 05
  2868 				;VLN = 06
  2869 				;LDR = 07
  2870 				;RBD = 08
  2871 				;ZON = 09
  2872 				;TRG = 10
  2873 				;PLT = 11
  2874 				;AED = 15
  2875 				;RXX = 255
  2876
  2877
  2878 				;      L  U  R  D  A 
  2879 				;X  X  X  X  X  X  X
  2880 				;   1  1  1  1  1  1 
  2881 				;   32 16 08 04 02 01
  2882 9E1E			ROOM_PATTERN_00 
  2883 9E1E 01 40 05 04 14 28 +     DTA SET,64, HLN,04,20,40, HLN,04,06,40, VLN,09,1,24, VLN,38,1,24, SET,68, HLN,04,06,06, HLN,21,06,06, HLN,38,06,06, HLN,04,20,06, HLN,21,20,06, HLN,38,20,06,  RXX ;**********
  2884 9E4B			ROOM_PATTERN_01
  2885 9E4B 01 40 05 04 14 28 +     DTA SET,64, HLN,04,20,40, HLN,04,06,40, VLN,14,07,12, VLN,33,07,12, SET,68, HLN,10,06,05, HLN,33,06,05, HLN,10,20,05, HLN,33,20,05,  RXX ;********** 
  2886 9E70			ROOM_PATTERN_02
  2887 9E70 01 40 05 04 14 28 +     DTA SET,64, HLN,04,20,40, HLN,04,06,40, SET,67, SET,68, HLN,21,06,06, HLN,21,20,06, VLN,09,06,14, VLN,38,06,14, RXX
  2888 9E8F			ROOM_PATTERN_03
  2889 9E8F 01 43 06 0F 00 06 +     DTA SET,67, VLN,15,00,06,  VLN,32,00,06, VLN,15,20,06,  VLN,32,20,06, SET,68,  HLN,04,06,05, HLN,39,06,05, HLN,04,20,05, HLN,39,20,05, SET,64, HLN,16,06,16, HLN,16,20,16,    RXX
  2890 9EBE			ROOM_PATTERN_04
  2891 9EBE 01 44 05 0F 0D 05 +     DTA SET,68, HLN,15,13,05, HLN,28,13,05, VLN,14,06,14, VLN,33,06,14, SET,64, HLN,20,13,08,  SET,206, HLN,04,06,10,  HLN,04,20,10, HLN,34,06,10,  HLN,34,20,10, RXX  
  2892 9EE9			ROOM_PATTERN_05
  2893 9EE9 01 40 05 0F 0D 12 +     DTA SET,64, HLN,15,13,18, VLN,14,07,12, VLN,33,07,12, SET,67,  HLN,03,06,12,  HLN,03,20,12,  HLN,33,06,12,  HLN,33,20,12,    RXX ;**********
  2894 9F0A			ROOM_PATTERN_06
  2895 9F0A 01 44 05 0A 06 05 +     DTA SET,68, HLN,10,06,05, HLN,10,20,05, HLN,33,06,05, HLN,33,20,05, VLN,09,06,14, VLN,38,06,14, RXX
  2896 9F25			ROOM_PATTERN_07
  2897 9F25 01 40 05 0F 0D 12 +     DTA SET,64, HLN,15,13,18, SET,68, HLN,09,06,05, HLN,09,20,05, HLN,34,06,05, HLN,34,20,05, VLN,14,06,14, VLN,33,06,14, RXX
  2898 9F46			ROOM_PATTERN_08
  2899 9F46 01 44 05 0A 06 0B +     DTA SET,68, HLN,10,06,11, HLN,10,20,11, HLN,27,06,11, HLN,27,20,11, VLN,09,06,04, VLN,38,06,04, VLN,09,16,04, VLN,38,16,04, VLN,21,06,04, VLN,26,06,04, VLN,21,16,04, VLN,26,16,04, RXX
  2900 9F79			ROOM_PATTERN_09
  2901 9F79 01 44 05 04 06 0B +     DTA SET,68, HLN,04,06,11, HLN,04,20,11, HLN,33,06,11, HLN,33,20,11, VLN,09,06,04, VLN,38,06,04, VLN,09,16,04, VLN,38,16,04, SET,67, HLN,14,13,20, SET,206, HLN,15,06,18,  HLN,15,20,18, VLN,09,11,04,  VLN,38,11,04, RXX
  2902 9FB4			ROOM_PATTERN_10
  2903 9FB4 01 40 05 04 14 28 +     DTA SET,64, HLN,04,20,40, HLN,04,06,40, VLN,14,07,12, VLN,33,07,12,  SET,68, HLN,04,06,11, HLN,04,20,11, HLN,33,06,11, HLN,33,20,11, RXX
  2904 9FD9			ROOM_PATTERN_11
  2905 9FD9 01 40 05 04 14 28 +     DTA SET,64, HLN,04,20,40, HLN,04,06,40, VLN,09,07,12, VLN,38,07,12, SET,68, HLN,10,06,11, HLN,10,20,11, HLN,27,06,11, HLN,27,20,11, RXX
  2906 9FFE			ROOM_PATTERN_12
  2907 9FFE 01 43 06 0F 00 06 +     DTA SET,67,  VLN,15,0,06,  VLN,32,0,06, VLN,15,0,20,  VLN,32,0,20, SET,68, HLN,21,06,06, HLN,04,20,06, HLN,04,06,06, HLN,38,20,06, HLN,38,06,06, SET,64, HLN,16,06,16, HLN,16,20,16,  RXX
  2908 A031			ROOM_PATTERN_13
  2909 A031 01 CE 05 04 14 28 +   DTA SET,206, HLN,04,20,40, HLN,04,06,40, VLN,09,1,24, VLN,38,1,24, SET,68, HLN,04,06,06, HLN,21,06,06, HLN,38,06,06, HLN,04,20,06, HLN,21,20,06, HLN,38,20,06,  RXX ;**********
  2910 A05E			ROOM_PATTERN_14
  2911 A05E 01 40 05 0F 06 12 +    DTA SET,64, HLN,15,06,18, HLN,15,20,18, SET,68, HLN,10,06,05, HLN,10,20,05, HLN,33,06,05, HLN,33,20,05, SET,67, VLN,09,06,14, VLN,38,06,14, SET,206, HLN,04,06,05,  HLN,04,20,05, HLN,39,06,05,  HLN,39,20,05, VLN,14,01,04,  VLN,33,01,04, VLN,14,21,04,  VLN,33,21,04, RXX 
  2912 A0A7			ROOM_PATTERN_15
  2913 A0A7 01 40 05 0F 0D 12 +   DTA SET,64, HLN,15,13,18, SET,68, VLN,14,07,16, VLN,33,07,16,  SET,206, HLN,04,06,40,  HLN,04,20,40, VLN,14,01,04,  VLN,33,01,04, VLN,14,21,04,  VLN,33,21,04, RXX
  2914 				  
  2915
  2916 				  ;DTA SET,67, HLN,03,00,42, HLN,03,06,42, HLN,03,13,42, HLN,03,20,42, HLN,03,26,42, VLN,03,00,25, VLN,09,00,25, VLN,15,00,25, VLN,21,00,25, VLN,26,00,25, VLN,32,00,25, VLN,38,00,25, VLN,44,00,25, RXX ;**********
  2917 				 
  2918 				  ;DTA 00,00,00,00
  2919 				  
  2920
  2921 A0D2			ROOM_PATTERN_ADDRLO
  2922 A0D2 1E 4B 70 8F BE E9 +     	DTA <ROOM_PATTERN_00,<ROOM_PATTERN_01,<ROOM_PATTERN_02,<ROOM_PATTERN_03,<ROOM_PATTERN_04,<ROOM_PATTERN_05,<ROOM_PATTERN_06,<ROOM_PATTERN_07,<ROOM_PATTERN_08,<ROOM_PATTERN_09
  2923 A0DC B4 D9 FE 31 5E A7	      DTA <ROOM_PATTERN_10,<ROOM_PATTERN_11,<ROOM_PATTERN_12,<ROOM_PATTERN_13,<ROOM_PATTERN_14,<ROOM_PATTERN_15
  2924 A0E2			ROOM_PATTERN_ADDRHI      
  2925 A0E2 9E 9E 9E 9E 9E 9E +     	DTA >ROOM_PATTERN_00,>ROOM_PATTERN_01,>ROOM_PATTERN_02,>ROOM_PATTERN_03,>ROOM_PATTERN_04,>ROOM_PATTERN_05,>ROOM_PATTERN_06,>ROOM_PATTERN_07,>ROOM_PATTERN_08,>ROOM_PATTERN_09
  2926 A0EC 9F 9F 9F A0 A0 A0	      DTA >ROOM_PATTERN_10,>ROOM_PATTERN_11,>ROOM_PATTERN_12,>ROOM_PATTERN_13,>ROOM_PATTERN_14,>ROOM_PATTERN_15
  2927 				      
  2928 A0F2			IRQ_LO
  2929 A0F2 23 06		  DTA <IRQ_NULL, <IRQ_KEYBOARD
  2930 A0F4			IRQ_HI
  2931 A0F4 8D 8D		  DTA >IRQ_NULL, >IRQ_KEYBOARD
  2932 A0F6			IRQ_EN_SET
  2933 A0F6 00 40		  DTA 00,64  
  2934
  2935 A0F8			VBI_ADDR_LO
  2936 A0F8 77 24 6C		  DTA <:GAME_VBI, <:PauseVBI, <:HOLD_VBI
  2937 A0FB			VBI_ADDR_HI
  2938 A0FB 86 8D 86		  DTA >:GAME_VBI, >:PauseVBI, >:HOLD_VBI
  2939
  2940 A0FE			START_SOUND_ADDR_LO
  2941 A0FE 31 71 C3 03 43 83 +     DTA <EXPLOSION_SOUND_DATA, <BOLT_SOUND_DATA, <DESTROY_1_DATA, <DESTROY_2_DATA,<DESTROY_3_DATA,<DOOR_OPEN_SOUND,<GET_POWERUP_SOUND_DATA,<LEVEL_COMPLETE_SOUND_DATA,<CONV_SOUND_DTA,00,00,00,00
  2942 A10B			START_SOUND_ADDR_HI
  2943 A10B A1 A1 A1 A2 A2 A2 +     DTA >EXPLOSION_SOUND_DATA, >BOLT_SOUND_DATA, >DESTROY_1_DATA, >DESTROY_2_DATA,>DESTROY_3_DATA,>DOOR_OPEN_SOUND,>GET_POWERUP_SOUND_DATA,>LEVEL_COMPLETE_SOUND_DATA,>CONV_SOUND_DTA,00,00,00,00
  2944 A118			START_SOUND_LENGTH_LO
  2945 A118 20 29 20 20 20 18 +     DTA <EXPLOSION_SOUND_SIZE/2 ,<BOLT_SOUND_SIZE/2 ,<DESTROY_1_SIZE/2 ,<DESTROY_2_SIZE/2 ,<DESTROY_3_SIZE/2 ,<DOOR_OPEN_SIZE/2, <GET_POWERUP_SOUND_SIZE/2 ,<LEVEL_COMPLETE_SOUND_SIZE/2 ,<CONV_SOUND_SIZE/2 ,02,02,02,02
  2946 A125			START_SOUND_LENGTH_HI    
  2947 A125 00 00 00 00 00 00 +     DTA 00,00,00,00,00,00,00,00,00,00,00,00
  2948 				    
  2949 A131			SOUND_EFFECT_DATA
  2950 				  
  2951 A131			EXPLOSION_SOUND_DATA  
  2952 A131 8F FE 8F F8 8E F0 +   DTA $8F,$FE,$8F,$F8,$8E,$F0,$8E,$E8,$8D,$F8,$8D,$F0,$8C,$E8,$8C,$E0
  2953 A141 8B F0 8B E8 8A E0 +   DTA $8B,$F0,$8B,$E8,$8A,$E0,$8A,$D8,$89,$E8,$89,$E0,$88,$D8,$88,$D0
  2954 A151 87 E0 87 D8 86 D0 +   DTA $87,$E0,$87,$D8,$86,$D0,$86,$C8,$85,$D8,$85,$D2,$84,$CA,$84,$C4
  2955 A161 83 D2 83 CA 83 C4 +   DTA $83,$D2,$83,$CA,$83,$C4,$82,$BE,$82,$CA,$82,$C4,$81,$BE,$81,$B8
  2956 = 0040			EXPLOSION_SOUND_SIZE = *- EXPLOSION_SOUND_DATA
  2957
  2958 A171			BOLT_SOUND_DATA  
  2959 A171 AF 00 AF 01 AF 02 +   DTA $AF,$00,$AF,$01,$AF,$02,$00,$03,$AE,$04,$00,$05,$AD,$06,$AD,$07
  2960 A181 AC 08 AC 09 AC 0A +   DTA $AC,$08,$AC,$09,$AC,$0A,$00,$0C,$AB,$0E,$00,$10,$AA,$12,$AA,$14
  2961 A191 A9 16 A9 18 A9 1A +   DTA $A9,$16,$A9,$18,$A9,$1A,$00,$1C,$A8,$1E,$00,$20,$A7,$24,$A7,$28
  2962 A1A1 A6 2C A6 30 A6 34 +   DTA $A6,$2C,$A6,$30,$A6,$34,$00,$38,$A5,$3C,$00,$40,$A4,$44,$A4,$48
  2963 A1B1 A3 4C A3 50 A3 54 +   DTA $A3,$4C,$A3,$50,$A3,$54,$00,$58,$A2,$5C,$00,$60,$A1,$64,$A1,$68,$00,$6C
  2964 = 0052			BOLT_SOUND_SIZE = *- BOLT_SOUND_DATA  
  2965
  2966 A1C3			DESTROY_1_DATA  
  2967 A1C3 6F 29 6F 28 6E 27 +   DTA $6F,$29,$6F,$28,$6E,$27,$6E,$26,$6D,$25,$6D,$26,$6C,$27,$6C,$28
  2968 A1D3 6B 29 6B 28 6A 27 +   DTA $6B,$29,$6B,$28,$6A,$27,$6A,$26,$69,$25,$69,$26,$68,$27,$68,$28
  2969 A1E3 67 29 67 28 66 27 +   DTA $67,$29,$67,$28,$66,$27,$66,$26,$65,$25,$65,$26,$64,$27,$64,$28
  2970 A1F3 63 29 63 28 62 27 +   DTA $63,$29,$63,$28,$62,$27,$62,$26,$61,$25,$61,$26,$61,$27,$61,$28
  2971 = 0040			DESTROY_1_SIZE =*-DESTROY_1_DATA  
  2972
  2973 A203			DESTROY_2_DATA
  2974 A203 2F 08 2F 09 2E FF +   DTA $2F,$08,$2F,$09,$2E,$FF,$2E,$0B,$2D,$0C,$2D,$0B,$2C,$0A,$2C,$09
  2975 A213 2B 08 2B 09 2A 0A +   DTA $2B,$08,$2B,$09,$2A,$0A,$2A,$0B,$29,$0C,$29,$0B,$28,$0A,$28,$09
  2976 A223 27 08 27 09 26 0A +   DTA $27,$08,$27,$09,$26,$0A,$26,$0B,$25,$0C,$25,$0B,$24,$0A,$24,$09
  2977 A233 21 08 21 09 22 0A +   DTA $21,$08,$21,$09,$22,$0A,$22,$0B,$21,$0C,$21,$0B,$21,$0A,$21,$09
  2978 = 0040			DESTROY_2_SIZE =*-DESTROY_2_DATA
  2979
  2980 A243			DESTROY_3_DATA
  2981 A243 8F 18 8F 1C 8E 20 +   DTA $8F,$18,$8F,$1C,$8E,$20,$8E,$24,$8D,$28,$8D,$24,$8C,$20,$8C,$1C
  2982 A253 8B 18 8B 1C 8A 20 +   DTA $8B,$18,$8B,$1C,$8A,$20,$8A,$24,$89,$28,$89,$24,$88,$20,$88,$1C
  2983 A263 87 18 87 1C 86 20 +   DTA $87,$18,$87,$1C,$86,$20,$86,$24,$85,$28,$85,$24,$84,$20,$84,$1C
  2984 A273 83 18 83 1C 82 20 +   DTA $83,$18,$83,$1C,$82,$20,$82,$24,$81,$28,$81,$24,$81,$20,$81,$1C
  2985 = 0040			DESTROY_3_SIZE =*-DESTROY_3_DATA
  2986 				    
  2987 A283			DOOR_OPEN_SOUND
  2988 A283 85 07 8A 06 8F 05 +   DTA $85,$07,$8A,$06,$8F,$05,$8F,$04,$8F,$03,$8F,$02,$8F,$01,$8F,$00
  2989 A293 AF 29 2F 0B AF 2A +   DTA $AF,$29,$2F,$0B,$AF,$2A,$2F,$0C,$AE,$2B,$2D,$0D,$AC,$2C,$2B,$0E
  2990 A2A3 AA 2D 29 0F A8 2E +   DTA $AA,$2D,$29,$0F,$A8,$2E,$27,$10,$A6,$2F,$25,$11,$A4,$30,$22,$12
  2991 = 0030			DOOR_OPEN_SIZE =*-DOOR_OPEN_SOUND
  2992
  2993 A2B3			GET_POWERUP_SOUND_DATA  
  2994 A2B3 AF 5A CF 59 AE 58 +   DTA $AF,$5A,$CF,$59,$AE,$58,$CE,$57,$AD,$56,$CD,$55,$AC,$54,$CC,$53,$AB,$52,$CB,$51
  2995 A2C7 AA 50 CA 4F A9 4E +   DTA $AA,$50,$CA,$4F,$A9,$4E,$C9,$4D,$A8,$4C,$C8,$4B,$A7,$4A,$C7,$49,$A6,$52,$C6,$47
  2996 A2DB A5 46 C5 3B A5 44 +   DTA $A5,$46,$C5,$3B,$A5,$44,$C4,$43,$A4,$42,$C4,$41,$A4,$40,$C3,$3F,$A2,$3E,$C1,$3D
  2997 = 003C			GET_POWERUP_SOUND_SIZE = *-GET_POWERUP_SOUND_DATA
  2998
  2999
  3000
  3001 A2EF			LEVEL_COMPLETE_SOUND_DATA
  3002 A2EF AF 04 AF 03 AF 02 +   DTA $AF,004,$AF,003,$AF,002,$AF,001,$AF,000, $AE,014,$AE,013,$AE,012,$AE,011,$AE,010
  3003 A303 AC 18 AC 17 AC 16 +   DTA $AC,024,$AC,023,$AC,022,$AC,021,$AC,020, $AA,034,$AA,033,$AA,032,$AA,031,$AA,030
  3004 A317 A8 2C A8 2B A8 2A +   DTA $A8,044,$A8,043,$A8,042,$A8,041,$A8,040, $A6,054,$A6,053,$A6,052,$A6,051,$A6,050
  3005 A32B A5 40 A5 3F A5 3E +   DTA $A5,064,$A5,063,$A5,062,$A5,061,$A5,060, $A4,074,$A4,073,$A4,072,$A4,071,$A4,070
  3006 A33F A3 54 A3 53 A3 52 +   DTA $A3,084,$A3,083,$A3,082,$A3,081,$A3,080, $A2,094,$A2,093,$A2,092,$A2,091,$A2,090
  3007 A353 A2 68 A2 67 A2 66 +   DTA $A2,104,$A2,103,$A2,102,$A2,101,$A2,100, $A1,114,$A1,113,$A1,112,$A1,111,$A1,110
  3008 = 0078			LEVEL_COMPLETE_SOUND_SIZE =*-LEVEL_COMPLETE_SOUND_DATA
  3009
  3010 A367			CONV_SOUND_DTA  
  3011 A367 4A 08 4A 06 48 04 +   DTA $4A,008,$4A,006,$48,004,$48,002, $47,007,$47,005,$46,003,$46,001
  3012 A377 45 06 45 05 44 03 +   DTA $45,006,$45,005,$44,003,$44,002, $43,005,$43,004,$43,002,$43,000 
  3013 A387 42 04 42 03 42 01 +   DTA $42,004,$42,003,$42,001,$42,000, $41,003,$41,002,$41,001,$41,000        
  3014 = 0030			CONV_SOUND_SIZE = *-CONV_SOUND_DTA  
  3015 				    
  3016 A397			ENEMY_DESTROY_SOUND_EFFECT
  3017 A397 02 04 02 02 03 04 +   DTA 2,4,2,2,3,4,3  
  3018 				               
   347 				  IFT USE_PLEX_DEF = 0
   348 				  ORG $A7FF
   349 				  DTA $FF
   350 				  OPT F-
   351 				  ORG $3800
   352 				  OPT F+H-
   353 				  ICL "MULTIPLEX_MONO_8W.ASM"
   354 				  ORG $3FFF
   355 				  DTA $FF
   356 				  OPT F-  
   357 				  ELI USE_PLEX_DEF >=1
   358 A39E			     ORG $AFFF
   359 AFFF FF			     DTA $FF
   360 				     OPT F-
   361 				  EIF
   362 B000			  ORG $B000
   363 				  OPT F+H-
   364 B000			  ICL "INFLATE_16K.ASM"
Source: INFLATE_16K.ASM
     1 				; inflate - uncompress data stored in the DEFLATE format
     2 				; by Piotr Fusik <fox@scene.pl>
     3 				; Last modified: 2007-06-17
     4
     5 				; Compile with xasm (http://xasm.atari.org/), mads (http://mads.atari8.info) for example:
     6 				; xasm inflate.asm /l /d:inflate=$b700 /d:inflate_data=$b900 /d:inflate_zp=$f0
     7 				; mads inflate.asm /l /d:inflate=$b700 /d:inflate_data=$b900 /d:inflate_zp=$f0
     8 				; inflate is 509 bytes of code and initialized data
     9 				; inflate_data is 764 bytes of uninitialized data
    10 				; inflate_zp is 10 bytes on page zero
    11
    12 = 0070			inflate_zp	= $70
    13 = 0D00			inflate_data	= $0D00
    14 = 0001			INFLATE_FORMAT = 1
    15 				; Pointer to compressed data
    16 = 0070			inputPointer                    equ	inflate_zp    ; 2 bytes
    17
    18 				; Pointer to uncompressed data
    19 = 0072			outputPointer                   equ	inflate_zp+2  ; 2 bytes
    20
    21 				; Local variables
    22
    23 = 0074			getBit_buffer                   equ	inflate_zp+4  ; 1 byte
    24
    25 = 0075			getBits_base                    equ	inflate_zp+5  ; 1 byte
    26 = 0075			inflateStoredBlock_pageCounter  equ	inflate_zp+5  ; 1 byte
    27
    28 = 0076			inflateCodes_sourcePointer      equ	inflate_zp+6  ; 2 bytes
    29 = 0076			inflateDynamicBlock_lengthIndex equ	inflate_zp+6  ; 1 byte
    30 = 0077			inflateDynamicBlock_lastLength	equ	inflate_zp+7  ; 1 byte
    31 = 0077			inflateDynamicBlock_tempCodes   equ	inflate_zp+7  ; 1 byte
    32
    33 = 0078			inflateCodes_lengthMinus2       equ	inflate_zp+8  ; 1 byte
    34 = 0078			inflateDynamicBlock_allCodes    equ	inflate_zp+8  ; 1 byte
    35
    36 = 0079			inflateCodes_primaryCodes       equ	inflate_zp+9  ; 1 byte
    37
    38 				  IFT INFLATE_FORMAT = 1
    39 = 007A			inflateDynamicBlock_headerBase  equ inflate_zp+10 ;4 bytes last unused
    40 				  EIF 
    41
    42 				; Argument values for getBits
    43 = 0081			GET_1_BIT                       equ	$81
    44 = 0082			GET_2_BITS                      equ	$82
    45 = 0084			GET_3_BITS                      equ	$84
    46 = 0088			GET_4_BITS                      equ	$88
    47 = 0090			GET_5_BITS                      equ	$90
    48 = 00A0			GET_6_BITS                      equ	$a0
    49 = 00C0			GET_7_BITS                      equ	$c0
    50
    51 				; Maximum length of a Huffman code
    52 = 000F			MAX_CODE_LENGTH                 equ	15
    53
    54 				; Huffman trees
    55 = 0010			TREE_SIZE                       equ	MAX_CODE_LENGTH+1
    56 = 0000			PRIMARY_TREE                    equ	0
    57 = 0010			DISTANCE_TREE                   equ	TREE_SIZE
    58
    59 				; Alphabet
    60 = 0020			LENGTH_SYMBOLS                  equ	1+29+2
    61 = 001E			DISTANCE_SYMBOLS                equ	30
    62 = 003E			CONTROL_SYMBOLS                 equ	LENGTH_SYMBOLS+DISTANCE_SYMBOLS
    63 = 013E			TOTAL_SYMBOLS                   equ	256+CONTROL_SYMBOLS 
    64
    65
    66 				; Uncompress DEFLATE stream starting from the address stored in inputPointer
    67 				; to the memory starting from the address stored in outputPointer
    68
    69 				;      OPT F+H-
    70 B000			INFLATE
    71 B000 85 72		  STA Outputpointer
    72 B002 84 73		  STY Outputpointer+1
    73 B004 BD 2F B2		  LDA COMPRESS_ADDRESS_LOW,X
    74 B007 85 70		  STA inputPointer+0
    75 B009 BD 39 B2		  LDA COMPRESS_ADDRESS_HIGH,X
    76 B00C 85 71		  STA inputPointer+1
    77 B00E A0 03		  LDY #3
    78 B010			Set_Inflate_Addr_Loop
    79 B010 B9 2B B2		  LDA inflateDynamicBlock_init,Y 
    80 B013 99 7A 00		  STA inflateDynamicBlock_headerBase,Y
    81 B016 88			  DEY 
    82 B017 10 F7		  BPL Set_Inflate_Addr_Loop 
    83
    84
    85 B019 A0 00 84 74			mvy	#0	getBit_buffer
    86 B01D			inflate_blockLoop
    87 				; Get a bit of EOF and two bits of block type
    88 				;	ldy	#0
    89 B01D 84 75			sty	getBits_base
    90 B01F A9 84			lda	#GET_3_BITS
    91 B021 20 D1 B1			jsr	getBits
    92 B024 4A				lsr	@
    93 B025 08				php
    94 B026 AA				tax
    95 B027 D0 27			bne	inflateCompressedBlock
    96
    97 				; Copy uncompressed block
    98 				;	ldy	#0
    99 B029 84 74			sty	getBit_buffer
   100 B02B 20 DA B1			jsr	getbyte
   101 B02E AA			  tax
   102 B02F 20 DA B1		  jsr getbyte
   103 B032 20 DA B1			jsr	getbyte
   104 B035 AA			  tax
   105 B036 20 DA B1		  jsr getbyte
   106 B039 85 75			sta	inflateStoredBlock_pageCounter
   107 				;	jmp	inflateStoredBlock_firstByte
   108 B03B B0 08			bcs	inflateStoredBlock_firstByte
   109 B03D			inflateStoredBlock_copyByte
   110 B03D 20 DA B1			jsr	getByte
   111 B040			inflateStoreByte
   112 B040 20 03 B2			jsr	storeByte
   113 B043 90 75			bcc	inflateCodes_loop
   114 B045			inflateStoredBlock_firstByte
   115 B045 E8				inx
   116 B046 D0 F5			bne	inflateStoredBlock_copyByte
   117 B048 E6 75			inc	inflateStoredBlock_pageCounter
   118 B04A D0 F1			bne	inflateStoredBlock_copyByte
   119
   120 B04C			inflate_nextBlock
   121 B04C 28				plp
   122 B04D 90 CE			bcc	inflate_blockLoop
   123 B04F 60				rts
   124
   125 B050			inflateCompressedBlock
   126
   127 				; Decompress a block with fixed Huffman trees:
   128 				; :144 dta 8
   129 				; :112 dta 9
   130 				; :24  dta 7
   131 				; :6   dta 8
   132 				; :2   dta 8 ; codes with no meaning
   133 				; :30  dta 5+DISTANCE_TREE
   134 				;	ldy	#0
   135 B050			inflateFixedBlock_setCodeLengths
   136 B050 A9 04			lda	#4
   137 B052 C0 90			cpy	#144
   138 B054 2A				rol	@
   139 B055 99 00 0D			sta	literalSymbolCodeLength,y
   140 B058 C0 3E			cpy	#CONTROL_SYMBOLS
   141 B05A B0 0D			bcs	inflateFixedBlock_noControlSymbol
   142 B05C A9 15			lda	#5+DISTANCE_TREE
   143 B05E C0 20			cpy	#LENGTH_SYMBOLS
   144 B060 B0 04			bcs	inflateFixedBlock_setControlCodeLength
   145 B062 C0 18			cpy	#24
   146 B064 69 F2			adc	#2-DISTANCE_TREE
   147 B066			inflateFixedBlock_setControlCodeLength
   148 B066 99 00 0E			sta	controlSymbolCodeLength,y
   149 B069			inflateFixedBlock_noControlSymbol
   150 B069 C8				iny
   151 B06A D0 E4			bne	inflateFixedBlock_setCodeLengths
   152 B06C A9 20 85 79			mva	#LENGTH_SYMBOLS	inflateCodes_primaryCodes
   153
   154 B070 CA				dex
   155 B071 F0 44			beq	inflateCodes
   156
   157 				; Decompress a block reading Huffman trees first
   158
   159 				; Build the tree for temporary codes
   160 B073 20 16 B1			jsr	buildTempHuffmanTree
   161
   162 				; Use temporary codes to get lengths of literal/length and distance codes
   163 B076 A2 00			ldx	#0
   164 				;	sec
   165 B078			inflateDynamicBlock_decodeLength
   166 B078 08				php
   167 B079 86 76			stx	inflateDynamicBlock_lengthIndex
   168 				; Fetch a temporary code
   169 B07B 20 92 B1			jsr	fetchPrimaryCode
   170 				; Temporary code 0..15: put this length
   171 B07E AA				tax
   172 B07F 10 14			bpl	inflateDynamicBlock_verbatimLength
   173 				; Temporary code 16: repeat last length 3 + getBits(2) times
   174 				; Temporary code 17: put zero length 3 + getBits(3) times
   175 				; Temporary code 18: put zero length 11 + getBits(7) times
   176 B081 20 D1 B1			jsr	getBits
   177 				;	sec
   178 B084 69 01			adc	#1
   179 B086 E0 C0			cpx	#GET_7_BITS
   180 B088 90 02 69 07			scc:adc	#7
   181 B08C A8				tay
   182 B08D A9 00			lda	#0
   183 B08F E0 84			cpx	#GET_3_BITS
   184 B091 B0 02 A5 77			scs:lda	inflateDynamicBlock_lastLength
   185 B095			inflateDynamicBlock_verbatimLength
   186 B095 C8				iny
   187 B096 A6 76			ldx	inflateDynamicBlock_lengthIndex
   188 B098 28				plp
   189 B099			inflateDynamicBlock_storeLength
   190 B099 90 0D			bcc	inflateDynamicBlock_controlSymbolCodeLength
   191 B09B 9D 00 0D E8			sta	literalSymbolCodeLength,x+
   192 B09F E0 01			cpx	#1
   193 B0A1			inflateDynamicBlock_storeNext
   194 B0A1 88				dey
   195 B0A2 D0 F5			bne	inflateDynamicBlock_storeLength
   196 B0A4 85 77			sta	inflateDynamicBlock_lastLength
   197 				;	jmp	inflateDynamicBlock_decodeLength
   198 B0A6 F0 D0			beq	inflateDynamicBlock_decodeLength
   199 B0A8			inflateDynamicBlock_controlSymbolCodeLength
   200 B0A8 E4 79			cpx	inflateCodes_primaryCodes
   201 B0AA 90 02 09 10			scc:ora	#DISTANCE_TREE
   202 B0AE 9D 00 0E E8			sta	controlSymbolCodeLength,x+
   203 B0B2 E4 78			cpx	inflateDynamicBlock_allCodes
   204 B0B4 90 EB			bcc	inflateDynamicBlock_storeNext
   205 B0B6 88				dey
   206 				;	ldy	#0
   207 				;	jmp	inflateCodes
   208
   209 				; Decompress a block
   210 B0B7			inflateCodes
   211 B0B7 20 43 B1			jsr	buildHuffmanTree
   212 B0BA			inflateCodes_loop
   213 B0BA 20 92 B1			jsr	fetchPrimaryCode
   214 B0BD 90 81			bcc	inflateStoreByte
   215 B0BF AA				tax
   216 B0C0 F0 8A			beq	inflate_nextBlock
   217 				; Copy sequence from look-behind buffer
   218 				;	ldy	#0
   219 B0C2 84 75			sty	getBits_base
   220 B0C4 C9 09			cmp	#9
   221 B0C6 90 14			bcc	inflateCodes_setSequenceLength
   222 B0C8 98				tya
   223 				;	lda	#0
   224 B0C9 E0 1D			cpx	#1+28
   225 B0CB B0 0F			bcs	inflateCodes_setSequenceLength
   226 B0CD CA				dex
   227 B0CE 8A				txa
   228 B0CF 4A				lsr	@
   229 B0D0 66 75			ror	getBits_base
   230 B0D2 E6 75			inc	getBits_base
   231 B0D4 4A				lsr	@
   232 B0D5 26 75			rol	getBits_base
   233 B0D7 20 C7 B1			jsr	getAMinus1BitsMax8
   234 				;	sec
   235 B0DA 69 00			adc	#0
   236 B0DC			inflateCodes_setSequenceLength
   237 B0DC 85 78			sta	inflateCodes_lengthMinus2
   238 B0DE A2 10			ldx	#DISTANCE_TREE
   239 B0E0 20 94 B1			jsr	fetchCode
   240 				;	sec
   241 B0E3 E5 79			sbc	inflateCodes_primaryCodes
   242 B0E5 AA				tax
   243 B0E6 C9 04			cmp	#4
   244 B0E8 90 06			bcc	inflateCodes_setOffsetLowByte
   245 B0EA E6 75			inc	getBits_base
   246 B0EC 4A				lsr	@
   247 B0ED 20 C7 B1			jsr	getAMinus1BitsMax8
   248 B0F0			inflateCodes_setOffsetLowByte
   249 B0F0 49 FF			eor	#$ff
   250 B0F2 85 76			sta	inflateCodes_sourcePointer
   251 B0F4 A5 75			lda	getBits_base
   252 B0F6 E0 0A			cpx	#10
   253 B0F8 90 07			bcc	inflateCodes_setOffsetHighByte
   254 B0FA BD 04 B2			lda	getNPlus1Bits_mask-10,x
   255 B0FD 20 D1 B1			jsr	getBits
   256 B100 18				clc
   257 B101			inflateCodes_setOffsetHighByte
   258 B101 49 FF			eor	#$ff
   259 				;	clc
   260 B103 65 73			adc	outputPointer+1
   261 B105 85 77			sta	inflateCodes_sourcePointer+1
   262 B107 20 FD B1			jsr	copyByte
   263 B10A 20 FD B1			jsr	copyByte
   264 B10D			inflateCodes_copyByte
   265 B10D 20 FD B1			jsr	copyByte
   266 B110 C6 78			dec	inflateCodes_lengthMinus2
   267 B112 D0 F9			bne	inflateCodes_copyByte
   268 				;	jmp	inflateCodes_loop
   269 B114 F0 A4			beq	inflateCodes_loop
   270
   271 B116			buildTempHuffmanTree
   272 				;	ldy	#0
   273 B116 98				tya
   274 B117			inflateDynamicBlock_clearCodeLengths
   275 B117 99 00 0D			sta	literalSymbolCodeLength,y
   276 B11A 99 3E 0D			sta	literalSymbolCodeLength+TOTAL_SYMBOLS-256,y
   277 B11D C8				iny
   278 B11E D0 F7			bne	inflateDynamicBlock_clearCodeLengths
   279 				; numberOfPrimaryCodes = 257 + getBits(5)
   280 				; numberOfDistanceCodes = 1 + getBits(5)
   281 				; numberOfTemporaryCodes = 4 + getBits(4)
   282 B120 A2 03			ldx	#3
   283 B122			inflateDynamicBlock_getHeader
   284 B122 BD 27 B2			lda	inflateDynamicBlock_headerBits-1,x
   285 B125 20 D1 B1			jsr	getBits
   286 				;	sec
   287 B128 75 79			adc	inflateDynamicBlock_headerBase-1,x
   288 B12A 95 76			sta	inflateDynamicBlock_tempCodes-1,x
   289 B12C 85 7B			sta	inflateDynamicBlock_headerBase+1
   290 B12E CA				dex
   291 B12F D0 F1			bne	inflateDynamicBlock_getHeader
   292
   293 				; Get lengths of temporary codes in the order stored in tempCodeLengthOrder
   294 				;	ldx	#0
   295 B131			inflateDynamicBlock_getTempCodeLengths
   296 B131 A9 84			lda	#GET_3_BITS
   297 B133 20 D1 B1			jsr	getBits
   298 B136 BC 15 B2			ldy	tempCodeLengthOrder,x
   299 B139 99 00 0D			sta	literalSymbolCodeLength,y
   300 B13C A0 00			ldy	#0
   301 B13E E8				inx
   302 B13F E4 77			cpx	inflateDynamicBlock_tempCodes
   303 B141 90 EE			bcc	inflateDynamicBlock_getTempCodeLengths
   304
   305 				; Build Huffman trees basing on code lengths (in bits)
   306 				; stored in the *SymbolCodeLength arrays
   307 B143			buildHuffmanTree
   308 				; Clear nBitCode_totalCount, nBitCode_literalCount, nBitCode_controlCount
   309 B143 98				tya
   310 				;	lda	#0
   311 B144 99 3E 0E C8 D0 FA		sta:rne	nBitCode_clearFrom,y+
   312 				; Count number of codes of each length
   313 				;	ldy	#0
   314 B14A			buildHuffmanTree_countCodeLengths
   315 B14A BE 00 0D			ldx	literalSymbolCodeLength,y
   316 B14D FE 5E 0E			inc	nBitCode_literalCount,x
   317 B150 FE 3E 0E			inc	nBitCode_totalCount,x
   318 B153 C0 3E			cpy	#CONTROL_SYMBOLS
   319 B155 B0 09			bcs	buildHuffmanTree_noControlSymbol
   320 B157 BE 00 0E			ldx	controlSymbolCodeLength,y
   321 B15A FE 6E 0E			inc	nBitCode_controlCount,x
   322 B15D FE 3E 0E			inc	nBitCode_totalCount,x
   323 B160			buildHuffmanTree_noControlSymbol
   324 B160 C8				iny
   325 B161 D0 E7			bne	buildHuffmanTree_countCodeLengths
   326 				; Calculate offsets of symbols sorted by code length
   327 				;	lda	#0
   328 B163 A2 D0			ldx	#-3*TREE_SIZE
   329 B165			buildHuffmanTree_calculateOffsets
   330 B165 9D BE 0D			sta	nBitCode_literalOffset+3*TREE_SIZE-$100,x
   331 B168 18 7D 8E 0D			add	nBitCode_literalCount+3*TREE_SIZE-$100,x
   332 B16C E8				inx
   333 B16D D0 F6			bne	buildHuffmanTree_calculateOffsets
   334 				; Put symbols in their place in the sorted array
   335 				;	ldy	#0
   336 B16F			buildHuffmanTree_assignCode
   337 B16F 98				tya
   338 B170 BE 00 0D			ldx	literalSymbolCodeLength,y
   339 B173 BC 8E 0E FE 8E 0E		ldy:inc	nBitCode_literalOffset,x
   340 B179 99 BE 0E			sta	codeToLiteralSymbol,y
   341 B17C A8				tay
   342 B17D C0 3E			cpy	#CONTROL_SYMBOLS
   343 B17F B0 0D			bcs	buildHuffmanTree_noControlSymbol2
   344 B181 BE 00 0E			ldx	controlSymbolCodeLength,y
   345 B184 BC 9E 0E FE 9E 0E		ldy:inc	nBitCode_controlOffset,x
   346 B18A 99 BE 0F			sta	codeToControlSymbol,y
   347 B18D A8				tay
   348 B18E			buildHuffmanTree_noControlSymbol2
   349 B18E C8				iny
   350 B18F D0 DE			bne	buildHuffmanTree_assignCode
   351 B191 60				rts
   352
   353 				; Read Huffman code using the primary tree
   354 B192			fetchPrimaryCode
   355 B192 A2 00			ldx	#PRIMARY_TREE
   356 				; Read a code from input basing on the tree specified in X,
   357 				; return low byte of this code in A,
   358 				; return C flag reset for literal code, set for length code
   359 B194			fetchCode
   360 				;	ldy	#0
   361 B194 98				tya
   362 B195			fetchCode_nextBit
   363
   364 				; unrolled a JSR GetBit here
   365 B195 46 74			lsr	getBit_buffer
   366 B197 D0 0E			bne	GetBit_End_Fetch
   367 B199 48				pha
   368 				;	ldy	#0
   369 B19A B1 70			lda	(inputPointer),y
   370 B19C E6 70 D0 02 E6 71		inw	inputPointer
   371 B1A2 38				sec
   372 B1A3 6A				ror	@
   373 B1A4 85 74			sta	getBit_buffer
   374 B1A6 68				pla
   375 B1A7			GetBit_End_Fetch
   376
   377 B1A7 2A				rol	@
   378 B1A8 E8				inx
   379 B1A9 38 FD 3E 0E			sub	nBitCode_totalCount,x
   380 B1AD B0 E6			bcs	fetchCode_nextBit
   381 				;	clc
   382 B1AF 7D 6E 0E			adc	nBitCode_controlCount,x
   383 B1B2 B0 09			bcs	fetchCode_control
   384 				;	clc
   385 B1B4 7D 8E 0E			adc	nBitCode_literalOffset,x
   386 B1B7 AA				tax
   387 B1B8 BD BE 0E			lda	codeToLiteralSymbol,x
   388 B1BB 18				clc
   389 B1BC 60				rts
   390 B1BD			fetchCode_control
   391 B1BD 18 7D 9D 0E			add	nBitCode_controlOffset-1,x
   392 B1C1 AA				tax
   393 B1C2 BD BE 0F			lda	codeToControlSymbol,x
   394 B1C5 38				sec
   395 B1C6 60				rts
   396
   397 				; Read A minus 1 bits, but no more than 8
   398 B1C7			getAMinus1BitsMax8
   399 B1C7 26 75			rol	getBits_base
   400 B1C9 AA				tax
   401 B1CA C9 09			cmp	#9
   402 B1CC B0 0C			bcs	getByte
   403 B1CE BD 0C B2			lda	getNPlus1Bits_mask-2,x
   404 B1D1			getBits
   405 B1D1 20 DC B1			jsr	getBits_loop_Set
   406 B1D4			getBits_normalizeLoop
   407 B1D4 46 75			lsr	getBits_base
   408 B1D6 6A				ror	@
   409 B1D7 90 FB			bcc	getBits_normalizeLoop
   410 B1D9 60				rts
   411
   412 				; Read 16 bits
   413 				;getWord
   414 				;	jsr	getByte
   415 				;	tax
   416 				; Read 8 bits
   417 B1DA			getByte
   418 				;  
   419 B1DA A9 80			lda	#$80  
   420 B1DC			GetBits_Loop_Set  
   421 B1DC A0 00		  ldy #$00
   422 B1DE			GetBits_Loop_Low
   423 				; unrolled a JSR GetBit here	
   424 B1DE 46 74		  lsr	getBit_buffer
   425 B1E0 D0 09			bne	GetBit_End_byte
   426 B1E2 48				pha
   427 B1E3 B1 70			lda	(inputPointer),y
   428 B1E5 C8			  iny
   429 B1E6 38				sec
   430 B1E7 6A				ror	@
   431 B1E8 85 74			sta	getBit_buffer
   432 B1EA 68				pla
   433 B1EB			GetBit_End_byte
   434 B1EB 6A				ror	@
   435 B1EC 90 F0			bcc	GetBits_Loop_Low      
   436 B1EE 48			  pha
   437 B1EF 98			  tya
   438 B1F0 18			  clc
   439 B1F1 65 70		  adc inputPointer
   440 B1F3 85 70		  sta inputPointer     
   441 B1F5 90 02		  bcc no_inc_inputpointer_hi      
   442 B1F7 E6 71		  inc inputPointer+1
   443 B1F9			no_inc_inputpointer_hi
   444 B1F9 A0 00		  ldy #$00  
   445 B1FB 68			  pla                                                                                     
   446 B1FC 60				rts
   447
   448 				; Read one bit, return in the C flag
   449 				;getBit
   450 				;	lsr	getBit_buffer
   451 				;	bne	getBit_return
   452 				;	pha
   453 				;	ldy	#0
   454 				;	lda	(inputPointer),y
   455 				;	inw	inputPointer
   456 				;	sec
   457 				;	ror	@
   458 				;	sta	getBit_buffer
   459 				;	pla
   460 				;getBit_return
   461 				;	rts
   462
   463 				; Copy a previously written byte
   464 B1FD			copyByte
   465 B1FD A4 72			ldy	outputPointer
   466 B1FF B1 76			lda	(inflateCodes_sourcePointer),y
   467 B201 A0 00			ldy	#0
   468 				; Write a byte
   469 B203			storeByte
   470 B203 91 72			sta	(outputPointer),y
   471 B205 E6 72			inc	outputPointer
   472 B207 D0 04			bne	storeByte_return
   473 B209 E6 73			inc	outputPointer+1
   474 B20B E6 77			inc	inflateCodes_sourcePointer+1
   475 B20D			storeByte_return
   476 B20D 60				rts
   477
   478
   479
   480 B20E			getNPlus1Bits_mask
   481 B20E 81 82 84 88 90 A0 + 	dta	GET_1_BIT,GET_2_BITS,GET_3_BITS,GET_4_BITS,GET_5_BITS,GET_6_BITS,GET_7_BITS
   482
   483 B215			tempCodeLengthOrder
   484 B215 82 84 C0 00 08 07 + 	dta	GET_2_BITS,GET_3_BITS,GET_7_BITS,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15
   485
   486 B228			inflateDynamicBlock_headerBits	
   487 B228 88 90 90		  dta	GET_4_BITS,GET_5_BITS,GET_5_BITS
   488
   489 				  IFT INFLATE_FORMAT = 0
   490 				inflateDynamicBlock_headerBase
   491 				    dta	3,0,0  ; second byte is modified at runtime! 
   492 				  ELI INFLATE_FORMAT = 1
   493 				;This Data Changes - Need to port to Variable Area
   494 B22B			inflateDynamicBlock_init  
   495 B22B 03 00 00 00		    dta	3,0,0,0  ; second byte is modified at runtime!
   496 				  EIF 
   497
   498
   499
   500 				; Data for building trees
   501
   502 = 0D00			literalSymbolCodeLength		equ inflate_data
   503 = 0E00			controlSymbolCodeLength		equ literalSymbolCodeLength+256
   504
   505 				; Huffman trees
   506
   507 = 0E3E			nBitCode_clearFrom		equ controlSymbolCodeLength+CONTROL_SYMBOLS
   508 = 0E3E			nBitCode_totalCount		equ nBitCode_clearFrom
   509 = 0E5E			nBitCode_literalCount		equ nBitCode_totalCount+2*TREE_SIZE
   510 = 0E6E			nBitCode_controlCount		equ nBitCode_literalCount+TREE_SIZE
   511 = 0E8E			nBitCode_literalOffset		equ nBitCode_controlCount+2*TREE_SIZE
   512 = 0E9E			nBitCode_controlOffset		equ nBitCode_literalOffset+TREE_SIZE
   513 = 0EBE			codeToLiteralSymbol		equ nBitCode_controlOffset+2*TREE_SIZE
   514 = 0FBE			codeToControlSymbol		equ codeToLiteralSymbol+256
   515 = 0FFC			inflate_data_end		equ codeToControlSymbol+CONTROL_SYMBOLS
   516 				 
   517 				;    OPT F-
   518 				;INFLATE_DATA_OFFSET = *-INFLATE + BOOT_START_LEN
   519 				 
   520 B22F			COMPRESS_ADDRESS_LOW  
   521 B22F 43 C6 D1 A0 00 00 +   DTA <COMP_SCR_FONTS,<COMP_TITLE_FONT,<COMP_TITLE_TEXT,<COMP_RAM_ROUTINES,<0000,<0000,<0000,<0000,<0000,<0000
   522 				  IFT CartridgeType = CartridgeXEXDEMO
   523 				    DTA <0000,$05,$11,$70
   524 				  EIF
   525 B239			COMPRESS_ADDRESS_HIGH
   526 B239 B2 B4 B5 B6 00 00 +   DTA >COMP_SCR_FONTS,>COMP_TITLE_FONT,>COMP_TITLE_TEXT,>COMP_RAM_ROUTINES,>0000,>0000,>0000,>0000,>0000,>0000
   527
   528
   529
   530 				  IFT CartridgeType = CartridgeXEXDEMO
   531 				    DTA >0000,>>COMP_SCR_FONTS+1,>>COMP_SCR_FONTS-1,>>COMP_SCR_FONTS+3
   532 				  EIF
   533 				 
   365 = B243			COMP_SCR_FONTS = *  
   366 B243 DD 94 C1 8A DB 30 +   INS "AMOKBOTS_FONTS.DEF"
   367 = B4C6			COMP_TITLE_FONT = *
   368 B4C6 ED 92 C1 AD C4 20 +   INS "Amokbots_Title_Font.DEF"
   369 = B5D1			COMP_TITLE_TEXT = *
   370 B5D1 63 60 20 0E 30 12 +   INS "Amokbots_Title_Part.DEF"
   371 = B6A0			COMP_RAM_ROUTINES = *
   372 B6A0 B5 90 4D 68 13 41 +   INS "PLEXRAM.DEF"
   373 B954			  ORG $BFFA   
   374 				  IFT CartridgeType = CartridgeStandard16K||CartridgeType = CartridgeStandard16K||CartridgeType = CartridgeXEX    
   375 BFFA 00 80		     .dw $8000
   376 BFFC 00			     .db 0
   377 BFFD 04			     .db 4
   378 BFFE 00 80		     .dw $8000
   379 				  EIF			
   380 				  OPT F-H-
   381 				 
